{
  "Working version": {
    " Restored backends:": [
      {
        "references": [ 12276 ],
        "text": "native-code compilation for POWER (64 bits, little-endian)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "KC", "Sivaramakrishnan" ], [ "Anil", "Madhavapeddy" ]
        ]
      }
    ],
    " Language features:": [
      {
        "references": [ 12295, 12568 ],
        "text": "Give `while true' a polymorphic type, similarly to\n  `assert false'\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ],
        "suggestion": [ [ "Rodolphe", "Lepigre" ], [ "John", "Whitington" ] ]
      },
      {
        "references": [ 12315 ],
        "text": "Use type annotations from arguments in let rec\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11252, -1 ],
        "text": "27: Support raw identifier syntax \\#foo\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Gabriel", "Scherer" ],
          [ "Olivier", "Nicole" ]
        ]
      },
      {
        "references": [ 12044 ],
        "text": "Add local module open syntax for types.\n  ```\n    module A = struct\n      type t = int\n      type r = unit\n      type s = string\n    end\n    type example = A.(t * r * s)\n  ```\n  ",
        "breaking change": false,
        "authors": [ [ "Alistair", "O'Brien" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 12456 ],
        "text": "Document the incompatibility between effects on the one\n  hand, and `caml_callback` and asynchronous callbacks (signal\n  handlers, finalisers, memprof callbacks...) on the other hand.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 12375 ],
        "text": "allow use of [@untagged] for all immediate types like char, bool,\n  and variant with only constant constructors.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 12313, 11799 ],
        "text": "Do not re-build as-pattern type when a ground type annotation\n  is given. This allows to work around problems with GADTs in as-patterns.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 10111 ],
        "text": "Increase the detail of location information for debugging events to\n  allow the end line number and character offset to be reported.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Nick", "Barnes" ],
          [ "Enguerrand", "Decorne" ],
          [ "Stephen", "Dolan" ]
        ]
      },
      {
        "references": [ 10403, 12202 ],
        "text": "introduce `caml_ext_table_add_noexc` that does not\n  raise `Out_of_memory` exceptions and use it inside the blocking sections\n  of `caml_read_directory`.  Also, check for overflows in ext table sizes.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Arseniy", "Alekseyev" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12223 ],
        "text": "Constify constructors and flags tables in C code. Now these\n  tables will go in the readonly segment, where they belong.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12234 ],
        "text": "make instrumented time calculation more thread-safe on macOS.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12235 ],
        "text": "introduce and use the `CAMLnoret` macro as a lighter alternative\n  to `CAMLnoreturn_start` / `CAMLnoreturn_end`\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "help": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 12275 ],
        "text": "caml/stack.h: more abstract macros to describe OCaml stacks and\n  how to traverse them, supporting more stack layouts.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Fabrice", "Buoro" ] ]
      },
      {
        "references": [ 12268 ],
        "text": "deliver `Out_of_memory` exception if domain creation fails\n  due to memory resource exhaustion.  It was previous always a `Failure`.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 12300, 12314 ],
        "text": "Discard out_channel buffered data on permanent I/O error\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Török", "Edwin" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11386 ],
        "text": "Simplifications and fixes to multicore systhreads implementation.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ], [ "KC", "Sivaramakrishnan" ]
        ]
      },
      {
        "references": [ 12408 ],
        "text": "`Domain.spawn` no longer leaks its functional argument for\n  the whole duration of the children domain lifetime.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12409 ],
        "text": "Fix unsafety and deadlocks should an asynchronous exception\n  arise at specific locations during domain creation and shutdown.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12114 ],
        "text": "Add ThreadSanitizer support\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ], [ "Olivier", "Nicole" ] ],
        "initial work": [ [ "Anmol", "Sahoo" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Sebastien", "Hinderer" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Luc", "Maranget" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11911, 12381 ],
        "text": "Restore statmemprof functionality in part\n   (API changes in Gc.Memprof). ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ]
      },
      {
        "references": [ 12430 ],
        "text": "Simplify dynamic bytecode loading in Meta.reify_bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ],
          [ "Vincent", "Laviron" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 12489 ],
        "text": "Fix an error-handling bug in caml_alloc_sprintf\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Chris", "Casinghino" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11307 ],
        "text": "Finish adapting the implementation of asynchronous actions for\n  multicore: soundness, liveness, and performance issues.\n  Do not crash if a signal handler is  called from an unregistered C\n  thread, and other possible soundness issues. Prevent issues where join\n  on other domains could make the toplevel unresponsible to Ctrl-C. Avoid\n  needless repeated polling in C code when callbacks cannot run\n  immediately.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Enguerrand", "Decorne" ],
          [ "Xavier", "Leroy" ],
          [ "KC", "Sivaramakrishnan" ]
        ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 11239 ],
        "text": "on x86-64 and RISC-V, reduce alignment of OCaml stacks from 16 to 8.\n  This reduces stack usage.  It's only C stacks that require 16-alignment.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 12311 ],
        "text": "on POWER, 32-bit FP numbers stored in memory (e.g. in bigarrays)\n  were not correctly rounded sometimes.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ], [ "Tim", "McGilchrist" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 10775, 12499 ],
        "text": "Half-precision floating-point elements in Bigarray.\n  ",
        "breaking change": true,
        "authors": [ [ "Anton", "Yabchinskiy" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11517, 12477 ],
        "text": "Expose pp_infinity in interface of the format module, and\n  check that margin is less than pp_infinity when setting or checking geometry.\n  ",
        "breaking change": false,
        "authors": [ [ "Janith", "Petangoda" ] ],
        "reported": [ [ "Simmo", "Saan" ] ],
        "reviewed": [
          [ "Florian", "Angeletti" ],
          [ "Simmo", "Saan" ],
          [ "Josh", "Berdine" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 12217 ],
        "text": "Add `Array.shuffle`.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "David", "Allsopp" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 12212 ],
        "text": "Add cache-aligned constructor for atomics. The patch ensures that\n  all allocations (of the right size) in the shared heap are aligned.\n  ",
        "breaking change": false,
        "authors": [
          [ "Bartosz", "Modelski" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Xavier", "Leroy" ]
        ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Stefan", "Muenzel" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 12365 ],
        "text": "Add In_channel.input_bigarray, In_channel.really_input_bigarray,\n  Out_channel.output_bigarray, Unix.read_bigarray, Unix.write_bigarray,\n  Unix.single_write_bigarray.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 12511 ],
        "text": "Minor performance improvements and cleanups in the implementation\n  of modules Int32, Int64, and Nativeint\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 12558 ],
        "text": "Adapt GC alarms for multicore and fix their documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 12213 ],
        "text": "Dynlink library, improve legibility of error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Samuel", "Hym" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      }
    ],
    " Tools:": [
      {
        "references": [ 12340 ],
        "text": "testsuite: collect known issues with current -short-paths\n  implementation for existential types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Samuel", "Hym" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 12147 ],
        "text": "ocamllex: Allow carriage returns at the end of line directives.\n  ",
        "breaking change": false,
        "authors": [ [ "SeungCheol", "Jung" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 12260 ],
        "text": "Fix invalid_argument on some external or module aliases in ocamlnat\n  ",
        "breaking change": false,
        "authors": [ [ "Fabian", "Hemmer" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 12185 ],
        "text": "New script language for ocamltest.\n  ",
        "breaking change": false,
        "authors": [
          [ "Damien", "Doligez" ],
          [ "Florian", "Angeletti" ],
          [ "Sébastien", "Hinderer" ],
          [ "Gabriel", "Scherer" ]
        ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12371 ],
        "text": "ocamltest: fix recursive expansion of variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ], [ "Damien", "Doligez" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ],
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ]
        ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 12338 ],
        "text": "clarification of the documentation of process related function in\n  the unix module regarding the first element of args and shell's pid.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12473 ],
        "text": "Document in runtime/memory.c our current understanding of\n  accesses to the OCaml heap from the C runtime code -- the problem\n  of hybrid programs mixing two memory models.\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ], [ "Guillaume", "Munch-Maccagnoni" ]
        ],
        "review": [ [ "Olivier", "Nicole" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 10613, 12405 ],
        "text": "Simplify the values used for the system variable (`system:` in\n  `ocamlopt -config` or the `Config.system` constant). In particular, s390x and\n  ppc64 now report \"linux\" instead of \"elf\"; all variants of 32-bit ARM on Linux\n  now report \"linux\"; OpenBSD now reports \"openbsd\" instead of \"bsd\" for 32-bit\n  ARM; FreeBSD, NetBSD and OpenBSD now report the same value for both x86_64 and\n  x86_32; x86_32 systems matching *bsd but not freebsd*, netbsd* or openbsd*\n  are no longer identified (as on x86_64); x86_32 Linux now reports \"linux\"\n  instead of \"linux_elf\".\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "request": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12247 ],
        "text": "configure: --disable-ocamldebug can now be used instead\n  of --disable-debugger (which remains available for compatibility)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 12210 ],
        "text": "uniform style for inline code in compiler messages\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12278, -1 ],
        "text": "12325: Remove the OCAML_FLEXLINK environment variable from the\n  compiler drivers. This environment variable was previously used as part of the\n  FlexDLL bootstrap procedure and existed solely for that purpose. Its removal\n  greatly simplifies both the build system and testsuite machinery.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 12347 ],
        "text": "error messages: always report missing polyvariant tags\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Tianbo", "Hao" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12224 ],
        "text": ", specialized error message when trying to apply non-functor\n  module (e.g `module M = Int(Int)`)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 12447 ],
        "text": "Remove 32-bit targets from X86_proc.system\n  ",
        "breaking change": false,
        "authors": [ [ "Masanori", "Ogino" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 12216, 12248 ],
        "text": "Prevent reordering of atomic loads during instruction\n  scheduling.  This is for reference, as instruction scheduling is currently\n  unused in OCaml 5.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Luc", "Maranget" ], [ "KC", "Sivaramakrishnan" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 12025 ],
        "text": "Split Typecore.unify_pat_types into two\n  to avoid unnecessary references to the environment in type_pat\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12031 ],
        "text": "Use dedicated types to represent names of compilation units\n  and predefined exceptions in CMO files.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Thomas", "Refis" ],
          [ "Gabriel", "Scherer" ],
          [ "Vincent", "Laviron" ],
          [ "Pierre", "Chambart" ],
          [ "Luke", "Maurer" ],
          [ "Hugo", "Heuzard" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 12109 ],
        "text": "Pack parameters to unification in unification_environment\n  ",
        "breaking change": false,
        "authors": [ [ "Takafumi", "Saikawa" ], [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Richard", "Eisenberg" ] ]
      },
      {
        "references": [ 12331, 12361 ],
        "text": "Pack the unification data for pattern checking in Typecore\n  ",
        "breaking change": false,
        "authors": [ [ "Takafumi", "Saikawa" ], [ "Jacques", "Garrigue" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Thomas", "Refis" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 12229 ],
        "text": "Remove global mutable state for typechecking patterns\n  in Typecore in favor of local mutable state.\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Takafumi", "Saikawa" ] ]
      },
      {
        "references": [ 12236, 12386, 12391 ],
        "text": "Use syntax as the sole determiner of function arity\n  This changes function arity to be based solely on the source program's\n  parsetree. Previously, the heuristic for arity had more subtle heuristics\n  that involved type information about patterns.  Function arity is important\n  because it determines when a pattern match's effects run and is an input\n  into the fast path for function application.\n  This change affects tooling: it changes the function constructs in parsetree\n  and typedtree.\n  See https://github.com/ocaml/RFCs/pull/32 for the original RFC.\n  ",
        "breaking change": false,
        "RFC": [ [ "Stephen", "Dolan" ] ],
        "authors": [ [ "Nick", "Roberts" ] ],
        "review": [
          [ "Richard", "Eisenberg" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 12542 ],
        "text": "Minor bugfix to #12236: restore dropped call to `instance`\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 12242 ],
        "text": "Move the computation of stack frame parameters to a separate\n  `Stackframe` module, and save the parameters in the results of the\n  `Linearize` pass\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 12442 ],
        "text": "document jump summaries in the pattern-matching compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 12446 ],
        "text": "remove the hooks machinery around channel locking in runtimee/io.c\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12389, 12544 ],
        "text": "centralize the handling of metadata for compilation units and\n  artifacts in preparation for better unicode support for OCaml source files.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12532, 12553 ],
        "text": "improve readability of the pattern-matching debug output\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 12198, 12321 ],
        "text": "continue the merge of the sub-makefiles into the root Makefile\n  started with #11243, #11248, #11268, #11420 and #11675.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12569, 12570 ],
        "text": "remove 'otherlibraries' as a prerequisite for 'runtop';\n  use 'runtop-with-otherlibs' to use a library from otherlibs/\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ],
        "suggestion": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 12566 ],
        "text": "caml_output_value_to_malloc wrongly uses `caml_stat_alloc`\n  instead of `malloc` since 4.06, breaking (in pooled mode) user code\n  that uses `free` on the result. Symmetrically,\n  caml_input_value_from_malloc should use `free`.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Ido", "Yariv" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Enguerrand", "Decorne" ] ]
      },
      {
        "references": [ 12490 ],
        "text": "Unix: protect the popen_processes hashtable with a mutex\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11931 ],
        "text": "Fix tricky typing bug with type substitutions\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 12037 ],
        "text": "get_extern_state potential NULL dereference.\n  ",
        "breaking change": false,
        "authors": [ [ "Alexander", "Skvortsov" ] ],
        "design": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Török", "Edwin" ] ]
      },
      {
        "references": [ 12032, 12059 ],
        "text": "Bug fixes related to compilation of recursive definitions\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Victoire", "Noizet" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12145 ],
        "text": "Loopy constraints cause ocamlc to loop.\n  Fixed by completely removing the call to `update_type` in\n  `Typedecl.transl_type_decl`, as the expansion is already checked by\n  `check_regularity`. As a result, recursion is more polymorphic,\n  which may cause some (essentially wrong) type declarations to have\n  unbound type variables, and some constraints unrelated to the concrete\n  type to be ignored (see tests/typing-misc/constraints.ml).\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Richard", "Eisenberg" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 12207, 12222 ],
        "text": "Make closure computation linear in the number of recursive\n  functions instead of quadratic\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "François", "Pottier" ] ],
        "review": [ [ "Nathanaëlle", "Courant" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12238, 12403 ],
        "text": "read input files in one go to avoid source reprinting issues\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Mike", "Spivey" ], [ "Vincent", "Laviron" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Leroy" ],
          [ "Jeremy", "Yallop" ]
        ]
      },
      {
        "references": [ 12334, 12368 ],
        "text": "Bad error message with mutually recursive abbreviations\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Richard", "Eisenberg" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Richard", "Eisenberg" ] ]
      },
      {
        "references": [ 12401 ],
        "text": "`seek_in` and `seek_out` sometimes returned normally when given\n  negative offsets, instead of failing. Now both functions should consistently\n  raise `Sys_error` in this case.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12267 ],
        "text": "Fix stack alignment computation\n  ",
        "breaking change": false,
        "authors": [ [ "Miod", "Vallat" ] ],
        "report": [ [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12395, 12404 ],
        "text": "Fix thread-unsafety in the fallback implementation of\n  `Unix.create_process` (the one used when `posix_spawnp` is unavailable)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Chris", "Vine" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 12949 ],
        "text": "open shadowing mistriggers\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Andreas", "Rossberg" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12526 ],
        "text": "Honor `ocaml.inline always` attribute on functions with\n  optional arguments and default values in the Closure backend\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      }
    ]
  },
  "OCaml 5.1.0 (14 September 2023)": {
    " Restored backends": [
      {
        "references": [ 11418, 11708 ],
        "text": "RISC-V multicore support.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 11712, 12258, 12261 ],
        "text": "s390x / IBM Z multicore support:\n  OCaml & C stack separation; dynamic stack size checks; fiber and\n  effects support.\n  ",
        "breaking change": false,
        "authors": [ [ "Aleksei", "Nikiforov" ] ],
        "help": [ [ "Vincent", "Laviron" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "the", "same" ], [ "KC", "Sivaramakrishnan" ] ],
        "suggestions": [ [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 11642 ],
        "text": "Restore Cygwin port. Add GC messages for address space reservations\n  when OCAMLRUNPARAM option v includes 0x1000.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 12006, 12064 ],
        "text": "Add `Marshal.Compression` flag to `Marshal.to_*` functions.\n  When this flag is explicitly set, marshaled data is compressed using ZSTD.\n  On some practical examples, the marshalled output became three times smaller\n  at no noticeable cost on the marshalling time.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "fix": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Edwin", "Török" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10464 ],
        "text": "Add List.is_empty.\n  ",
        "breaking change": false,
        "authors": [ [ "Craig", "Ferguson" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11848 ],
        "text": "Add `List.find_mapi`,\n  `List.find_index: ('a -> bool) -> 'a list -> int option`,\n  `Seq.find_mapi`, `Seq.find_index`, `Array.find_mapi`, `Array.find_index`,\n  `Float.Array.find_opt`, `Float.Array.find_index`, `Float.Array.find_map`,\n  `Float.Array.find_mapi`.\n  ",
        "breaking change": false,
        "authors": [ [ "Sima", "Kinsart" ] ],
        "review": [
          [ "Daniel", "Bünzli" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11410 ],
        "text": "Add Set.to_list, Map.to_list, Map.of_list,\n  `Map.add_to_list: key -> 'a -> 'a list t -> 'a list t`.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11836, 11837 ],
        "text": "Add `Array.map_inplace`, `Array.mapi_inplace`,\n  `Float.Array.mapi_inplace` and `Float.Array.mapi_inplace`.\n  ",
        "breaking change": false,
        "authors": [ [ "Léo", "Andrès" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 10967 ],
        "text": "Add Filename.temp_dir.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Turner" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Valentin", "Gatien-Baron" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 11246 ],
        "text": "Add \"hash\" and \"seeded_hash\" functions to Bool, Int, Char, Float,\n  Int32, Int64, and Nativeint.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11488 ],
        "text": "Add `Mutex.protect: Mutex.t -> (unit -> 'a) -> 'a`\n  for resource-safe critical sections protected by a mutex.\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 11581 ],
        "text": "Add type equality witness\n    `type (_, _) eq = Equal: ('a, 'a) eq`\n  in a new module Stdlib.Type.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Jacques", "Garrigue" ],
          [ "Florian", "Angeletti" ],
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 11843 ],
        "text": "Add `In_channel.input_lines` and `In_channel.fold_lines`.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Wiktor", "Kuchta" ] ]
      },
      {
        "references": [ 11856, 11859 ],
        "text": "Using TRMC, the following `Stdlib` functions are now\n  tail-recursive:\n    Stdlib.(@), List.append,\n    List.concat_map.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "Bannerets" ]
        ]
      },
      {
        "references": [ 11362, 11402 ],
        "text": "Using TRMC, the following `Stdlib` functions are now\n  tail-recursive:\n    List.map, List.mapi, List.map2,\n    List.filter, List.filteri, List.filter_map,\n    List.init,\n    List.of_seq.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11878, 11965 ],
        "text": "Prevent seek_in from marking buffer data as valid after\n  closing the channel. This could lead to inputting uninitialized bytes.\n  ",
        "breaking change": false,
        "authors": [ [ "Samuel", "Hym" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Olivier", "Nicole" ] ]
      },
      {
        "references": [ 11128 ],
        "text": "Add In_channel.isatty, Out_channel.isatty.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10859 ],
        "text": "Add `Format.pp_print_iter` and `Format.pp_print_array`.\n  ",
        "breaking change": false,
        "authors": [ [ "Léo", "Andrès" ], [ "Daniel", "Bünzli" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 10789 ],
        "text": "Add `Stack.drop`\n  ",
        "breaking change": false,
        "authors": [ [ "Léo", "Andrès" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10899 ],
        "text": "Change Stdlib.nan from signaling NaN to quiet NaN.\n  ",
        "breaking change": true,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Melquiond" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11026, 11667, 11858 ],
        "text": "Rename the type of the accumulator\n  of fold functions to 'acc:\n  fold_left : ('acc -> 'a -> 'acc) -> 'acc -> 'a list -> 'acc\n  fold_right : ('a -> 'acc -> 'acc) -> 'a list -> 'acc -> 'acc\n  fold_left_map : ('acc -> 'a -> 'acc * 'b) -> 'acc -> 'a list -> 'acc * 'b list\n  ...\n  ",
        "breaking change": false,
        "authors": [
          [ "Valentin", "Gatien-Baron" ], [ "François", "Berenger" ]
        ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11354 ],
        "text": "Hashtbl.find_all is now tail-recursive.\n  ",
        "breaking change": false,
        "authors": [ [ "Fermín", "Reig" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11500 ],
        "text": "Make Hashtbl.mem non-allocating.\n  ",
        "breaking change": false,
        "authors": [ [ "Simmo", "Saan" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11412 ],
        "text": "Add Sys.is_regular_file\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 11322, 11329 ],
        "text": "serialization functions Random.State.{of,to}_binary_string\n  between Random.State.t and string\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Yotam", "Barnoy" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Damien", "Doligez" ],
          [ "Hugo", "Heuzard" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 11830 ],
        "text": "Add Type.Id with\n  `val provably_equal : 'a Type.Id.t -> 'b Type.Id.t -> ('a, 'b) Type.eq option`\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Gabriel", "Scherer" ],
          [ "Wiktor", "Kuchta" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 12184, 12320 ],
        "text": "Sys.rename Windows fixes on directory corner cases.\n  ",
        "breaking change": false,
        "authors": [ [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 11565 ],
        "text": "Enable -strict-formats by default. Some incorrect format\n  specifications (for `printf`) where silently ignored and now fail.\n  Those new failures occur at compile-time, except if you use advanced\n  format features like `%(...%)` that parse format strings dynamically.\n  Pass -no-strict-formats to revert to the previous lenient behavior.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Installation size": [
      {
        "doc": "Some of those changes will benefit all OCaml packages.The installation size of 5.1 is 272 MiB compared to 521 MiB for 5.0.size of installed artifacts of the compiler distribution.  Specific efforts have been made during this release to reduce the filesystem"
      },
      {
        "references": [ -1 ],
        "text": "#23, #12006: use compressed marshaled format from #12006 for .cmi,\n  .cmt, .cmti files, and for debug info in .cmo and .cma files, resulting in\n  major reduction in size.\n  ",
        "breaking change": false,
        "RFC": [ [ "Simon", "Cruanes" ] ],
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Edwin", "Török" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11981 ],
        "text": "Reduce size of OCaml installations by removing debugging information\n  from installed bytecode executables.  It is no longer possible to\n  run ocamldebug over these installed bytecode executables, nor to get\n  exception backtraces for them.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Fabrice", "Le", "Fessant" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11993 ],
        "text": "install only bytecode executables for the `ocamlmklib`, `ocamlcmt`,\n  `ocamlprof`, `ocamlcp`, `ocamloptp`, and `ocamlmktop` tools, but no\n  native-code executables.  A tool like `ocamlmklib` for example is now\n  installed directly to `$BINDIR/ocamlmklib`; `ocamlmklib.byte` and\n  `ocamlmklib.opt` are no longer installed to `$BINDIR`.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 11589, 11903 ],
        "text": "Modify the GC pacing code to make sure the GC keeps\n   up with allocations in the presence of idle domains.\n   ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Stephen", "Dolan" ] ],
        "report": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 11743 ],
        "text": "Speed up weak array operations\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [ [ "François", "Bobot" ], [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 12131 ],
        "text": "Simplify implementation of weak hash sets, fixing a\n  performance regression. ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [
          [ "François", "Bobot" ],
          [ "Alain", "Frisch" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 11474, 11998, 12065 ],
        "text": "Add support for user-defined events in the runtime\n  event tracing system.\n  ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ],
        "review": [
          [ "Sadiq", "Jaffer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Enguerrand", "Decorne" ],
          [ "Gabriel", "Scherer" ],
          [ "Anil", "Madhavapeddy" ]
        ]
      },
      {
        "references": [ 11827, 12249 ],
        "text": "Restore prefetching for GC marking\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ], [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 11144 ],
        "text": "Restore frame-pointers support for amd64\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ] ],
        "review": [ [ "Frederic", "Bour" ], [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 11935 ],
        "text": "Load frametables of dynlink'd modules in batch\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "David", "Allsopp" ], [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 11284, 12525 ],
        "text": "Use compression of entries scheme when pruning mark stack.\n  Can decrease memory usage for some workloads, otherwise should be\n  unobservable.\n  ",
        "breaking change": false,
        "authors": [ [ "Tom", "Kelly" ] ],
        "review": [
          [ "Sabine", "Schmaltz" ],
          [ "Sadiq", "Jaffer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 11865, 11868, 11876 ],
        "text": "Clarify that the operations of a custom\n  block must never access the OCaml runtime. The previous\n  documentation only mentioned the main illicit usages. In particular,\n  since OCaml 5.0, it is no longer safe to call\n  `caml_remove_global_root` or `caml_remove_generational_global_root`\n  from within the C finalizer of a custom block, or within the\n  finalization function passed to `caml_alloc_final`. As a workaround,\n  such a finalization operation can be registered with `Gc.finalize`\n  instead, which guarantees to run the finalizer at a safe point.\n  ",
        "breaking change": true,
        "Report": [ [ "Timothy", "Bourke" ] ],
        "authors": [],
        "discussion": [
          [ "Yotam", "Barnoy" ],
          [ "Timothy", "Bourke" ],
          [ "Sadiq", "Jaffer" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 12130 ],
        "text": "Fix multicore crashes with weak hash sets. Fixes #11934.\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 12099 ],
        "text": "Add ocamlrund option, -events, to produce a trace of\n  debug events during bytecode interpretation. Fixes #12098.\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "L", "Ford" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12001 ],
        "text": "Fix book keeping for last finalisers during the minor cycle\n  ",
        "breaking change": false,
        "authors": [
          [ "KC", "Sivaramakrishnan" ], [ "Enguerrand", "Decorne" ]
        ],
        "report": [ [ "Guillaume", "Bury" ], [ "Vincent", "Laviron" ] ],
        "review": [ [ "Sadiq", "Jaffer" ], [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 11919 ],
        "text": "New runtime events counters for major heap stats and minor heap\n  resizing.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11287, 11872, 11955 ],
        "text": "Clean up reserved header bits (once used for\n  Spacetime profiling).\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 11750 ],
        "text": "Decouple major slice from minor GC.\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [
          [ "Sadiq", "Jaffer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 11796 ],
        "text": "protect lazy computation of code fragment digest by a mutex.\n  This makes the thread sanitizer happier, and avoids duplicating\n  the hashing work.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11137 ],
        "text": "new `Unsafe_store_tag(val, new_tag)` macro to stop using\n  `Tag_val(val)` as lvalue.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11880 ],
        "text": "Restore the correct sigmask in systhreads.\n  ",
        "breaking change": false,
        "authors": [ [ "Christiano", "Haesbaert" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 11881 ],
        "text": "Fix thread-unsafety of registration of operations for \"custom\"\n   values.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 11980 ],
        "text": "fix quadratic behavior in natdynlink by using a STW section\n  for frame-descriptor updates.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [
          [ "André", "Maroneze", "for", "Frama-C" ],
          [ "Guillaume", "Melquiond" ]
        ],
        "review": [ [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 12121 ],
        "text": "unrooted implementations of caml_callback*_exn\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 3921, 12039, 12128 ],
        "text": "poll for signals in long-running polymorphic\n  comparisons.\n  ",
        "breaking change": false,
        "authors": [
          [ "B.", "Szilvasy" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ]
        ],
        "review": [
          [ "Stefan", "Muenzel" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 12231 ],
        "text": "Support MinGW-w64 11.0 winpthreads library, where the macro\n  to set up to get flexdll working changed\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Samuel", "Hym" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Language features:": [
      {
        "references": [ 11694 ],
        "text": "Add short syntax for generative functor types `() -> ...`\n  ",
        "breaking change": true,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Jacques", "Garrigue" ]
        ]
      },
      {
        "references": [ 11457 ],
        "text": "Remove old polymorphic variant syntax.\n  With ``type t = [ `A | `B ]``, one could use the syntax `#t` in types,\n  where it means the same thing as `[< t]`, and in patterns, where it means\n  ``(`A | `B)``. The use of `#t` in types for polymorphic variants\n  was deprecated since 2001, and is now removed. The syntax remains available\n  in patterns, or for objects -- when `t` is a class type.\n  ",
        "breaking change": true,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 11984 ],
        "text": "Add dedicated syntax for generative functor application.\n  Previously, OCaml did not distinguish between `F ()` and\n  `F (struct end)`, even though the latter looks applicative. Instead,\n  the decision between generative and applicative functor application\n  was made based on the type of `F`. With this patch, we now distinguish\n  these two application forms; writing `F (struct end)` for a generative\n  functor leads to new warning 73.\n  ",
        "breaking change": true,
        "authors": [ [ "Frederic", "Bour" ], [ "Richard", "Eisenberg" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9975, 11365 ],
        "text": "Make empty types (`type t = |`) immediate.\n  ",
        "breaking change": false,
        "authors": [ [ "Antal", "Spector-Zabusky" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 6941, 11187, 12483 ],
        "text": "prohibit using classes through recursive modules\n  inheriting or including a class belonging to a mutually-recursive module\n  would previous behave incorrectly, and now results in a clean error.\n  ",
        "breaking change": true,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12189, 12211 ],
        "text": "anonymous row variables in explicitly polymorphic type\n  annotation, e.g. `'a. [< X of 'a ] -> 'a`, are now implicitly\n  universally quantified (in other words, the example above is now read\n  as `'a 'r. ([< X of 'a ] as 'r) -> 'a`).\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 11967 ],
        "text": "Remove traces of Obj.truncate, which allows some mutable\n  loads to become immutable.\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 9945, 10883 ],
        "text": "Turn boolean-result float comparisons into primitive operations\n  Uses the architecture's elementary operations for float comparisons,\n  when available, rather than branching and then setting the return value.\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Alain", "Frisch" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 8998, 11321, 11430 ],
        "text": "change mangling of OCaml long identifiers\n  from `camlModule__name_NNN` to `camlModule.name_NNN`.  The previous\n  mangling schema, using `__`, was ambiguous.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "sliquister" ], [ "Michael", "Bacarella" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10834 ],
        "text": "The -safer-matching option disables type-based optimizations of\n  pattern-matching compilation. This allows to produce a match failure if\n  a pattern-matching was wrongly assumed to be exhaustive. Since the\n  exhaustiveness check for GADTs has had bugs in the past, it may be\n  useful if you need extra security with GADTs.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11102 ],
        "text": "Speed up register allocation by permanently spilling registers\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11383 ],
        "text": "Restrict the local function optimisation to forbid moving code\n  inside a sub-function\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11686 ],
        "text": "Better spilling heuristic for the Linear Scan allocator for more\n  efficient stack usage.\n  ",
        "breaking change": false,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "Alain", "Frisch" ]
        ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Alain", "Frisch" ],
          [ "Nathanaëlle", "Courant" ]
        ]
      },
      {
        "references": [ 11904 ],
        "text": "Remove arm, i386 native-code backends that were already\n  disabled at configuration time.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 11134 ],
        "text": "Optimise 'include struct' in more cases\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ], [ "Vincent", "Laviron" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 11374 ],
        "text": "Remove pointer cast to a type with stricter alignment requirements\n  in Windows implementation of Unix.gettimeofday. Windows implementations of\n  caml_unix_map_file, caml_unix_lseek and caml_unix_lseek_64 now release the\n  runtime lock. Windows implementation of caml_unix_lockf modernised and\n  simplified. Where possible, 64 bit integers are used instead of LARGE_INTEGER\n  structs.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Jonah", "Beckford" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11475 ],
        "text": "Make Unix terminal interface bindings domain-safe\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11775 ],
        "text": "Unix.write on a non-blocking socket under Windows will return normally\n  if the write blocks after some data has already been written (as otherwise\n  there is no way of knowing how much data has been written before\n  blocking). The same behaviour was already present under Unix.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11991 ],
        "text": "Unix on Windows: map ERROR_TOO_MANY_LINKS to EMLINK.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 12067 ],
        "text": "Document Windows specific meanings of `Unix.process_status`\n  type\n  ",
        "breaking change": false,
        "authors": [ [ "Samuel", "Hym" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 12072 ],
        "text": "Document and test that Sys.rename works over directories too\n  ",
        "breaking change": false,
        "authors": [ [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 11889, 11978 ],
        "text": "ocamldoc: handle injectivity annotations and wildcards in type\n  parameters.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Jules", "Aguillon" ] ]
      },
      {
        "references": [ 11787 ],
        "text": "Fix GDB scripts to work with OCaml 5's heap layout. ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ]
      },
      {
        "references": [ 11772 ],
        "text": "fix ocamlyacc's handling of raw string literals\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Marie", "Obenour" ] ]
      },
      {
        "references": [ 9290 ],
        "text": "Add a directive to switch off debugging in toplevel.\n  This allows to see optimized bytecode with -dlambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11166 ],
        "text": "ocamllex: the union of two character sets \"cset1 | cset2\" can now be\n  used in any context where a character set is expected.\n  ",
        "breaking change": false,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Martin", "Jambon" ]
        ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11718 ],
        "text": "ocamlyacc: OCaml-style comments are now supported, in addition to\n  the C-style comments already supported.  The syntax is the same as that used\n  in OCaml code.\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Marie", "Obenour" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 11728 ],
        "text": "ocamlyacc: generate line directives for %type declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Marie", "Obenour" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 11773 ],
        "text": "ocamlyacc: Do not allow quoted literals (such as 'a' or \"bc\")\n  in a token name or %type declaration.  Previously such literals were\n  accepted by ocamlyacc, but produced malformed OCaml that was rejected\n  by the compiler.\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Marie", "Obenour" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11774 ],
        "text": "ocamlyacc: fail if there is an I/O error\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Marie", "Obenour" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11973 ],
        "text": "Add support for postfixed mingw host triplets\n  ",
        "breaking change": false,
        "authors": [ [ "Romain", "Beauxis" ] ]
      },
      {
        "references": [ 12165 ],
        "text": "ocamldoc, use standard doctype to avoid quirk mode.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 11476 ],
        "text": "Add examples in documentation of Hashtbl, Queue, Atomic, Format\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ],
        "review": [
          [ "Yotam", "Barnoy" ],
          [ "Gabriel", "Scherer" ],
          [ "Daniel", "Bünzli" ],
          [ "Ulugbek", "Abdullaev" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11883, 11884 ],
        "text": "Update documentation for In_channel and Out_channel\n  with examples and sections to group related functions.\n  ",
        "breaking change": false,
        "authors": [ [ "Kiran", "Gopinathan" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12095, 12097 ],
        "text": "Put the sample code of the user's manual and reference\n  documentation of the standard library under the CC0 1.0 Universal\n  (CC0 1.0) Public Domain Dedication license.",
        "breaking change": false
      },
      {
        "references": [ 11892 ],
        "text": "Document the semantic differences of Unix.exec* between Unix and\n  Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Boris", "Yakobowski" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 9430, 11291 ],
        "text": "Document the general desugaring rules for binding operators.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11481 ],
        "text": "Fix the type of Unix.umask to Unix.file_perm -> Unix.file_perm\n  ",
        "breaking change": false,
        "authors": [ [ "Favonia" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11514 ],
        "text": "Document ocamltest builtin variables and actions\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11676 ],
        "text": "Fix missing since annotation in the `Sys` and `Format` modules\n  ",
        "breaking change": false,
        "authors": [ [ "Bukolab99" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12028 ],
        "text": "Update format documentation to make it clearer that\n  `pp_print_newline` flushes its newline\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12201 ],
        "text": "in the tutorial on modules, replace priority queue example by\n  a simpler example based on FIFO queues.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 12352 ],
        "text": "Fix a typo in the documentation of Arg.write_arg\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7179, 11894 ],
        "text": "correct the description of CAMLreturn and CAMLreturn0 in\n  the Interfacing C page and memory.h file.\n  ",
        "breaking change": false,
        "authors": [ [ "Dong", "An" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ], [ "Olivier", "Nicole" ]
        ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 10647 ],
        "text": "Show hints for the \"undefined global\" error in the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12116 ],
        "text": "Don't suggest to insert a semicolon when the type is not unit\n  ",
        "breaking change": false,
        "authors": [ [ "Jules", "Aguillon" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11679 ],
        "text": "Improve the error message about too many arguments to a function\n  ",
        "breaking change": false,
        "authors": [ [ "Jules", "Aguillon" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10009 ],
        "text": "Improve the error reported by mismatched struct/sig and =/: in module\n  and module type bindings.\n  ",
        "breaking change": false,
        "authors": [ [ "Jules", "Aguillon" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11530 ],
        "text": "Include kinds in kind mismatch error message.\n  \"Error: This variant or record definition does not match that of type M.t\n          The original is abstract, but this is a record\".\n  ",
        "breaking change": false,
        "authors": [ [ "Leonhard", "Markert" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11646 ],
        "text": "Add colors to error message hints.\n  ",
        "breaking change": false,
        "authors": [ [ "Christiana", "Anthony" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11235, 11864 ],
        "text": "usage warnings for constructors and fields can now be disabled\n  on field-by-field or constructor-by-constructor basis\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11888 ],
        "text": "Improve the error message when type variables cannot be deduced from\n  the type parameters:\n  Before:\n    \"Error: In this definition, a type variable cannot be deduced\n            from the type parameters.\"\n  After:\n    \"Error: In the GADT constructor\n              T : 'a -> 'a s t\n     the type variable 'a cannot be deduced from the type parameters.\"\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10818 ],
        "text": "Preserve integer literal formatting in type hint.\n  ",
        "breaking change": false,
        "authors": [ [ "Leonhard", "Markert" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11338 ],
        "text": "Turn some partial application warnings into hints.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10931 ],
        "text": "Improve warning 14 (illegal backslash) with a better explanation\n  of the causes and how to fix it.\n  ",
        "breaking change": false,
        "authors": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Lucas", "De", "Angelis" ],
          [ "Gabriel", "Scherer" ]
        ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ],
          [ "David", "Allsopp" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10911 ],
        "text": "Improve the location reported by parenthesized assert expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Fabian", "Hemmer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1391, 7645, 3922 ],
        "text": "Add an early error when compiling different\n  modules with mismatching -for-pack\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Vincent", "Laviron" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 11297 ],
        "text": "Report \"unclosed\" error when \"done\" is missing in a \"do .. done\"\n  construct.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11635, 5461, 10564 ],
        "text": "turn warning 31 (Module_linked_twice) into a hard error\n  for ocamlc — this was already an error with ocamlopt.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [
          [ "Valentin", "Gatien-Baron" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11653 ],
        "text": "Add the -no-absname option to ocamlc, ocamlopt and ocamldep.\n  ",
        "breaking change": false,
        "authors": [ [ "Abiola", "Abdulsalam" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ], [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 11696 ],
        "text": "Add the -no-g option to ocamlc and ocamlopt.\n  ",
        "breaking change": false,
        "authors": [ [ "Abiola", "Abdulsalam" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 11722 ],
        "text": "clearer error messages on non-well-founded type definitions\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 11819 ],
        "text": "make the `native_compiler` and `native_dynlink` configuration\n  variables available through ocamlc -config.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8602, 11863 ],
        "text": "Add -stop-after lambda flag option\n  ",
        "breaking change": false,
        "authors": [ [ "Douglas", "Smith" ], [ "Dmitrii", "Kosarev" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11910 ],
        "text": "Simplify naming convention for shadowed or ephemeral identifiers in\n  error messages (eg: `Illegal shadowing of included type t/2 by t`)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Jules", "Aguillon" ] ]
      },
      {
        "references": [ 12024 ],
        "text": "insert a blank line between separate compiler messages\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "David", "Wong" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12088, 9265, 11949 ],
        "text": "ocamldebug: fix confusing repeating behavior\n  on blank lines within source scripts\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Gaëtan", "Gilbert" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12107 ],
        "text": "use aliases to mark weak row variables: `_[< ... ]`, `< _..>`, `_#ct`\n  are now rendered as `[< ...] as '_weak1`, `< .. > as '_weak1`,\n  and `#ct as '_weak1`.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "Stefan", "Muenzel" ] ]
      },
      {
        "references": [ 12051 ],
        "text": "Improve the error messages when type variables cannot be generalized\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12094 ],
        "text": "Trigger warning 5 (ignored-partial-application) when the scrutinee of\n  a pattern matching is of arrow type and all cases match wildcard or exception\n  patterns.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 11018, 11869 ],
        "text": "Clean up Types.Variance, adding a description of\n  the lattice used, and defining explicitly composition.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 11536 ],
        "text": "Introduce wrapper functions for level management\n  ([Ctype.with_level], etc) and for type variable scoping\n  ([Typetexp.with_local_type_variable_scope]).\n  The older API ([Ctype.(begin_def,end_def)], [Typetexp.(narrow,widen)], etc.)\n  is now removed.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11601, 11612, 11628, 11613, 11623, 12120 ],
        "text": "Clean up some\n  global state handling in emitcode, bytepackager, bytegen,\n  bytesections, spill.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ], [ "Stefan", "Muenzel" ] ],
        "review": [
          [ "Vincent", "Laviron" ],
          [ "Gabriel", "Scherer" ],
          [ "Nathanaëlle", "Courant" ]
        ]
      },
      {
        "references": [ 12119, 12188, 12191 ],
        "text": "mirror type constraints on value binding in the\n  parsetree:\n  the constraint `typ` in `let pat : typ = exp` is now directly stored\n  in the value binding node in the parsetree.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Richard", "Eisenberg" ] ]
      },
      {
        "references": [ 11912 ],
        "text": "Refactoring handling of scoped type variables\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "Eisenberg" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11691, 11706 ],
        "text": "use __asm__ instead of asm for strict ISO C conformance\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Gregg", "Reynolds" ] ],
        "review": [ [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 11764 ],
        "text": "add prototypes to old-style C function definitions and declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11693 ],
        "text": "Remove use of C99 Variable Length Arrays (VLAs) in the runtime.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Stefan", "Muenzel" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 12138 ],
        "text": "Generalise interface for BUILD_PATH_PREFIX_MAP mapping.\n  Absolute paths are now rewritten too.\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "L", "Ford" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestions": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10512 ],
        "text": "explain the compilation strategy for switches on constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 11990 ],
        "text": "Improve comments and macros around frame descriptors.\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11847, 11849, 11851, 11898 ],
        "text": "small refactorings in the type checker\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11027 ],
        "text": "Separate typing counter-examples from type_pat into retype_pat;\n  type_pat is no longer in CPS.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11286, 11515 ],
        "text": "disambiguate identifiers by using how recently they have\n  been bound in the current environment\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11364 ],
        "text": "Allow `make -C testsuite promote` to take `TEST` and `LIST` variables\n  ",
        "breaking change": false,
        "authors": [ [ "Antal", "Spector-Zabusky" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11446 ],
        "text": "document switch compilation (lambda/switch.ml)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Luc", "Maranget" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 11568 ],
        "text": "Encode inline record types in Path.t\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Hyunggyu", "Jang" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11569 ],
        "text": "Remove hash type encoding\n  ",
        "breaking change": false,
        "authors": [ [ "Hyunggyu", "Jang" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11627 ],
        "text": "use return values instead of globals for linear scan intervals\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11634 ],
        "text": "Dll.open_dll now properly handles opening for execution while already\n  opened for checking\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11745, 12358 ],
        "text": "Debugger and toplevels: embed printer types rather than\n  reading their representations from topdirs.cmi at runtime.\n  This change also removes the ocamlmktop initialization module introduced\n  in #11382 which was no longer useful.\n  This change breaks toplevel scripts relying on the visibility of `Topdirs`\n  in the initial toplevel environment without loading `topfind`.\n  Since the opam default `.ocamlinit` file loads `topfind`, it is expected\n  that only scripts run with `ocaml -noinit` are affected.\n  For those scripts, accessing `Topdirs` now requires the `compiler-libs`\n  directory to be added to the toplevel search path with\n  ```\n    #directory \"+compiler-libs\";;\n  ````\n  as was already the case for the other modules in the toplevel interface\n  library.\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11615 ],
        "text": "remove global variables form asmcomp/linearize.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10856 ],
        "text": "Add location, attribute(s) visitors to Tast_mapper/Tast_iterator\n  ",
        "breaking change": false,
        "authors": [ [ "Yan", "Dong" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11763, 11759, 11861 ],
        "text": "Enable stricter C compilation warnings, use\n  strict prototypes on primitives.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ],
          [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 11933 ],
        "text": "Use the correct machtype when reading the code pointer from closures\n  ",
        "breaking change": false,
        "authors": [ [ "Nathanaëlle", "Courant" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 11972 ],
        "text": "refactor runtime/frame_descriptors.c\n  in preparation for quadratic-time fix\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Enguerrand", "Decorne" ] ]
      },
      {
        "references": [ 11997 ],
        "text": "translate structured constants into their Obj.t representation\n  at compile time rather than link time. Changes the way dumpobj prints\n  these constants because their representation becomes untyped.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Hugo", "Heuzard" ]
        ]
      },
      {
        "references": [ 12011 ],
        "text": "remove Ctype.reified_var_counter\n  ",
        "breaking change": false,
        "authors": [ [ "Takafumi", "Saikawa" ], [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12012 ],
        "text": "move calls to Typetexp.TyVarEnv.reset inside with_local_level etc.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12034 ],
        "text": "a logarithmic algorithm to find the next free variable\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Stefan", "Muenzel" ] ]
      },
      {
        "references": [ 12092 ],
        "text": "remove Lev_module_definition from lambda\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12117 ],
        "text": "Remove arity-interrupting elaboration of module unpacks\n  ",
        "breaking change": false,
        "authors": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Richard", "Eisenberg" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 12118 ],
        "text": "stop storing names of predefined exceptions in the\n  cu_required_globals field of compilation unit descriptors.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 12125 ],
        "text": "Add Misc.print_see_manual and modify [@manual_ref] to accept\n  lists for simpler printing of manual references\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12509 ],
        "text": "Use strict prototypes on primitives when generating a standalone\n  bytecode executable (`ocamlc -custom`).\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 11844 ],
        "text": "Reduce verbosity of `make` logs by printing program invocations in\n  shorthand (eg `OCAMLC foo.cmo`). Setting `V=1` recovers the old style (with\n  full command-lines).\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11590 ],
        "text": "Allow installing to a destination path containing spaces.\n   ",
        "breaking change": false,
        "authors": [ [ "Élie", "Brami" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11243, 11248, 11268, 11420, 11675 ],
        "text": "merge the sub-makefiles into\n  the root Makefile.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11828 ],
        "text": "Compile otherlibs/ C stubs in two version for native and bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12265 ],
        "text": "Stop adding -lexecinfo to cclibs (leftover debugging code from the\n  multicore project). Harden the feature probe for -lm in configure so -lm is\n  only added if strictly necessary. configure.ac now correctly propagates\n  library flags for the Windows ports, allowing Windows OCaml to be configured\n  with ZSTD support.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 12372 ],
        "text": "Pass option -no-execute-only to the linker for OpenBSD >= 7.3\n  so that code sections remain readable, as needed for closure marshaling.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Anil", "Madhavapeddy" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ], [ "Sébastien", "Hinderer" ]
        ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 12062 ],
        "text": "fix runtime events consumer: when events are dropped they shouldn't be\n  parsed. ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ]
      },
      {
        "references": [ 12132 ],
        "text": "Fix overcounting of minor collections in GC stats.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12017 ],
        "text": "Re-register finaliser only after calling user alarm in Gc.create_alarm\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ] ],
        "report": [ [ "Sam", "Goldman" ] ],
        "review": [ [ "Guillaume", "Munch-Maccagnoni" ] ]
      },
      {
        "references": [ 11887, 11893 ],
        "text": "Code duplication in pattern-matching compilation\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Luc", "Maranget" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10664, 11600 ],
        "text": "Unsoundness in the typing of polymorphic methods\n  involving polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mike", "Shulman" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11302, 11412 ],
        "text": "`ocamlc` and `ocamlopt` should not remove generated files\n  when they are not regular files.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Thierry", "Martinez" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 10348, 10560, 11561 ],
        "text": "Expand GADT equations lazily during unification to\n  avoid ambiguity\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 11436 ],
        "text": "Fix wrong stack backtrace for out-of-bound exceptions raised\n  by leaf functions.\n  ",
        "breaking change": false,
        "authors": [ [ "Tom", "Kelly" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 11450, 12018 ],
        "text": "Fix erroneous functor error messages that were too eager to\n  cast `struct end` functor arguments as unit modules in `F(struct end)`.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11643 ],
        "text": "Add missing test declaration to float_compare test, so that it will\n  run.\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11630 ],
        "text": "Use correct location when reporting record labels with non-existent\n  paths.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Jason", "Gross" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11727 ],
        "text": "Ensure push_defaults can push past module patterns, fixing an\n  currying optimisation accidentally disabled by #10340.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11771 ],
        "text": "Use a more relaxed mode for unification in Ctype.subst\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11803, 11808 ],
        "text": "on x86, the destination of an integer comparison must be\n  a register, it cannot be a stack slot.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Emilio", "Jesús", "Gallego", "Arias" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11809 ],
        "text": "Protect Parmatch.pats_of_type from missing cmis\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11824 ],
        "text": "Fix a crash when calling `ocamlrun -b`\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11815 ],
        "text": "Marshalling continuations raises invalid argument exception.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Stephen", "Dolan" ],
          [ "Hugo", "Heuzard" ]
        ]
      },
      {
        "references": [ 11846 ],
        "text": "Mark rbx as destroyed at C call for Win64 (mingw-w64 and Cygwin64).\n  Reserve the shadow store for the ABI in the c_stack_link struct instead of\n  explictly when calling C functions. This simultaneously reduces the number of\n  stack pointer manipulations and also fixes a bug when calling noalloc\n  functions where the shadow store was not being reserved.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Vesa", "Karvonen" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 11850 ],
        "text": "When stopping before the `emit` phase (using `-stop-after`), an empty\n  temporary assembly file is no longer left in the file system.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11866 ],
        "text": "Fix the result of `caml_read_directory()` on non-existent paths.\n  ",
        "breaking change": false,
        "authors": [ [ "Andrei", "Paskevich" ], [ "Charlène", "Gros" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11879 ],
        "text": "Bugfix for Ctype.nondep_type\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12004 ],
        "text": "Don't ignore function attributes on lambdas with locally abstract\n  types.\n  ",
        "breaking change": false,
        "authors": [ [ "Chris", "Casinghino" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12037 ],
        "text": "Fix some data races by using volatile when necessary\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ], [ "Olivier", "Nicole" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ],
          [ "Luc", "Maranget" ]
        ]
      },
      {
        "references": [ 12046 ],
        "text": "Flush stderr when tracing the parser\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 12061, 12063 ],
        "text": "don't add inconsistent equalities when computing\n  high-level error messages for functor applications and inclusions.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12075 ],
        "text": "auto-detect whether `ar` support @FILE arguments at\n  configure-time to avoid using this feature with toolchains\n  that do not support it (eg FreeBSD/Darwin).\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "David", "Allsop" ],
          [ "Javier", "Chávarri" ],
          [ "Anil", "Madhavapeddy" ]
        ]
      },
      {
        "references": [ 12103 ],
        "text": ", 12104: fix a concurrency memory-safety bug in Buffer\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Samuel", "Hym" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 12112 ],
        "text": "Fix caml_callback{2,3}_exn when used with effect handlers.\n  ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 12134 ],
        "text": "Use ghost location for nodes created when handling defaults in\n  optional arguments.\n  ",
        "breaking change": false,
        "authors": [ [ "Paul-Elliot", "Anglès", "d'Auriac" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 12153 ],
        "text": "Fix segfault in bytecode programs involving recursive value\n  definitions of values of size 0\n  ",
        "breaking change": false,
        "authors": [
          [ "Vincent", "Laviron" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ],
        "report": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12162 ],
        "text": "Fix miscompilation on amd64 backends involving integer overflows\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ], [ "Greta", "Yorsh" ] ],
        "review": [ [ "Stefan", "Muenzel" ] ]
      },
      {
        "references": [ 12170 ],
        "text": "fix pthread_geaffinity_np configure check for android\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 12178 ],
        "text": "Fix runtime events consumer poll function returning an invalid value\n  instead of an OCaml integer value. ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ]
      },
      {
        "references": [ 12252 ],
        "text": "Fix shared library build error on RISC-V.\n  ",
        "breaking change": false,
        "authors": [ [ "Edwin", "Török" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 12255, 12256 ],
        "text": "Handle large signal numbers correctly ",
        "breaking change": false,
        "authors": [ [ "Nick", "Barnes" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 12277 ],
        "text": "ARM64, fix a potential assembler error for very large functions by\n  emitting stack reallocation code before the body of the function.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 12253, 12342 ],
        "text": "Fix infinite loop in signal handling.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "report": [ [ "Thomas", "Leonard" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ], [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 12445 ],
        "text": "missing GC root registrations in runtime/io.c\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 12481, 12505 ],
        "text": "Fix incorrect initialization of array expressions\n  `[|e1;...;eN|]` when `N` is large enough to require major heap allocation.\n  ",
        "breaking change": false,
        "analysis": [
          [ "KC", "Sivaramakrishnan" ], [ "Vincent", "Laviron" ]
        ],
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Andrey", "Popp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11150, 11207, 11936 ],
        "text": "Avoid recomputation in Typedecl.check_wellfounded\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Boris", "Yakobowski" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11186, 11188 ],
        "text": "Fix composition of coercions with aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 12486 ],
        "text": "Fix delivery of unhandled effect exceptions on s390x\n  ",
        "breaking change": false,
        "authors": [ [ "Miod", "Vallat" ] ],
        "report": [ [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 5.0.0 (15 December 2022)": {
    "Release documentation": [
      {
        "references": [ 10831 ],
        "text": "Multicore OCaml\n  ",
        "breaking change": false,
        "authors": [
          [ "Enguerrand", "Decorne" ],
          [ "Stephen", "Dolan" ],
          [ "Tom", "Kelly" ],
          [ "Sadiq", "Jaffer" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Sudha", "Parimala" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Leo", "White" ],
          [ "Tarides multicore team" ]
        ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Olivier", "Nicole" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "OCaml core development team" ],
          [ "many" ]
        ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 11400 ],
        "text": "Runtime events counters fixes\n  Fixes mismatch between OCaml and C APIs, removes events from 4.x that\n  are not present in the 5.0 GC and adds some missing probes.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11368 ],
        "text": "Runtime events buffer size OCAMLRUNPARAMS fix\n  The runtime events buffer size can now be set via the 'e' OCAMLRUNPARAM.\n  This is previously mistakenly enabled/disabled tracing instead.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [
          [ "KC", "Sivaramakrishnan" ],
          [ "David", "Allsopp" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 11308 ],
        "text": "Add environment variable to preserve runtime_events after exit\n  If the environment variable OCAML_RUNTIME_EVENTS_PRESERVE exists then the\n  runtime will not remove the runtime events ring buffers at exit. This\n  makes tracing very short running programs more reliable.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [ [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 10964 ],
        "text": "Ring-buffer based runtime tracing (runtime_events)\n  Runtime_events is a very low overhead runtime tracing system designed for\n  continuous monitoring of OCaml applications.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Enguerrand", "Decorne" ],
          [ "Richard", "Warburton" ],
          [ "Gabriel", "Scherer" ],
          [ "Sabine", "Schmaltz" ],
          [ "Florian", "Angeletti" ],
          [ "Patrick", "Ferris" ],
          [ "Tom", "Kelly" ]
        ]
      },
      {
        "references": [ 10723 ],
        "text": "do not use `-flat-namespace` linking for macOS.\n  ",
        "breaking change": true,
        "authors": [ [ "Carlo", "Cabrera" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10863, 10933 ],
        "text": "Remove support for old, unprefixed C runtime function names\n  such as `alloc`.  The new names prefixed with `caml_` must be used instead,\n  such as `caml_alloc`.  Consequently, it is no longer needed to define\n  `CAML_NAME_SPACE` to avoid bringing unprefixed names into scope: this is now\n  the default behavior.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10902 ],
        "text": "Do not register empty code fragments in natdynlink.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10965 ],
        "text": "`caml_fatal_error_hook`, GC timing hooks, and\n  `caml_scan_roots_hook` are now atomic variables. Restore GC timing\n  hooks in multicore.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Enguerrand", "Decorne" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "KC", "Sivaramakrishnan" ]
        ]
      },
      {
        "references": [ 11209 ],
        "text": "Add a public and thread-safe timing hook running at domain\n  termination, after this domain has stopped running any OCaml code:\n  `caml_domain_terminated_hook`. This can be useful for implementing\n  domain-local state in C.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10875, 11731 ],
        "text": "Add option to allocate fiber stacks and sigaltstacks with\n  mmap(MAP_STACK) instead of malloc. This is exposed via a configure\n  --enable-mmap-map-stack option, and is enabled by default on OpenBSD where\n  it is mandatory.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Tom", "Kelly" ],
          [ "Michael", "Hendricks" ],
          [ "KC", "Sivaramakrishnan" ]
        ]
      },
      {
        "references": [ 10950 ],
        "text": "Do not use mmap to allocate Caml_state.\n  In order to reduce virtual memory usage, we dynamically allocate\n  the domain_state structure.\n  ",
        "breaking change": false,
        "authors": [
          [ "Enguerrand", "Decorne" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Tom", "Kelly" ]
        ],
        "review": [ [ "Anil", "Madhavapeddy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11010 ],
        "text": "Use strerror_r for reentrant error string conversion.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "same" ], [ "Edwin", "Török" ] ]
      },
      {
        "references": [ 11002, 11066, 11086 ],
        "text": "Do not use Begin_roots/End_roots macros in\n  the runtime system.  Also fix a missing root registration in the\n  implementation of Unix.write on Windows.\n  ",
        "breaking change": false,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Daniel", "Bünzli" ],
          [ "Antonin", "Décimo" ]
        ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11022 ],
        "text": "Track GC work for all managed bigarray allocations\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Andrew", "Hunter" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10802 ],
        "text": "Use 4.12 value macros and helpers in C code\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11105 ],
        "text": "Fix handling of fiber stack cache with multiple domains\n  ",
        "breaking change": false,
        "authors": [
          [ "Jon", "Ludlam" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Tom", "Kelly" ]
        ]
      },
      {
        "references": [ 11054 ],
        "text": "Respect user provided maximum stack space\n  Make sure the stack we initially request is sized accordingly to\n  the user provided settings. tmc/stack_space is also updated by\n  this PR in order to account for this change.\n  ",
        "breaking change": false,
        "authors": [ [ "Enguerrand", "Decorne" ] ],
        "report": [ [ "Jon", "Ludlam" ] ],
        "review": [
          [ "Tom", "Kelly" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11238 ],
        "text": "Increase the default limit for the stack size to 128 Mi words,\n  i.e. 1 Gib for 64-bit platforms and 512 Mib for 32-bit platforms.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11295 ],
        "text": "An ISO C 2011 compliant compiler, including full support for atomic\n  types, is now required to build the OCaml runtime system.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 10915, 11039, 11057, 11095, 11190 ],
        "text": "Implement quality treatment for\n  asynchronous actions in multicore. Reimplement the old behaviour of\n  `caml_process_pending*` for multicore.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Sadiq", "Jaffer" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11303 ],
        "text": "Ensure that GC is not invoked from bounds check failures\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Sadiq", "Jaffer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11304 ],
        "text": "Fix data race on Windows file descriptors\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ], [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ],
          [ "Sadiq", "Jaffer" ]
        ]
      },
      {
        "references": [ 11337 ],
        "text": "pass 'flags' metadata to root scanners, to optimize stack\n  scanning in the bytecode interpreter.\n  Changes the interface of user-provided root-scanning hooks.\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Sadiq", "Jaffer" ],
          [ "Tom", "Kelly" ]
        ]
      },
      {
        "references": [ 11255 ],
        "text": "in the C interface, `&Field(v, i)` now has type `volatile value *`\n  instead of `value *` in OCaml 4.  This makes the memory model\n  for mixed OCaml/C code better defined, but can cause warnings or type\n  errors in user C code.\n  ",
        "breaking change": true,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "discussions": [ [ "Stephen", "Dolan" ], [ "Luc", "Maranget" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 5299, 4787, 11138, 11272, 11506 ],
        "text": "To help debugging, `Caml_state`\n  now dynamically checks that the domain lock is held, and fails\n  otherwise (with a fatal error at most entry points of the C API, or\n  systematically in debug mode). A new variable `Caml_state_opt` is\n  introduced, and is `NULL` when the domain lock is not held. This\n  allows to test from C code if the current thread holds the lock of\n  its domain.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Damien", "Doligez" ],
          [ "Sadiq", "Jaffer" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 11223 ],
        "text": "The serialization format of custom blocks changed in 4.08,\n  but the deserializer would still support the pre-4.08 format.  OCaml\n  5.x removed support for this old format; provide a clear error message\n  in this case.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11504, 11522 ],
        "text": "Use static allocation in `caml_make_float_vect` in\n  no-flat-float-array mode, it's more efficient and avoids a a race condition\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11652 ],
        "text": "Fix benign off-by-one error in Windows implementation of caml_mem_map.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11669, 11704 ],
        "text": "Fix construction of Effect.Unhandled exceptions in the\n  bytecode interpreter.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Samuel", "Hym" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 10972 ],
        "text": "ARM64 multicore support: OCaml & C stack separation;\n  dynamic stack size checks; fiber and effects support.\n  ",
        "breaking change": false,
        "authors": [ [ "Tom", "Kelly" ], [ "Xavier", "Leroy" ] ],
        "review": [
          [ "KC", "Sivaramakrishnan" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Eduardo", "Rafael" ],
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10845 ],
        "text": "Emit frametable size on amd64 BSD (OpenBSD, FreeBSD, NetBSD) systems\n  (emitted for Linux in #8805)\n  ",
        "breaking change": true,
        "authors": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 10742 ],
        "text": "Use LXM as the pseudo-random number generator for module Random.\n  Add `Random.State.split` and `Random.split` to \"split\" a PRNG off\n  another PRNG.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 10867, 11345 ],
        "text": "Remove deprecated values: Array.create, Array.make_float,\n  Array.create_matrix, Bytes.uppercase, Bytes.lowercase, Bytes.capitalize,\n  Bytes.uncapitalize, Char.lowercase, Char.uppercase, Filename.temp_dir_name,\n  Int32.format, Int64.format, Nativeint.format, Format.bprintf, Format.kprintf,\n  Format.set_all_formatter_output_functions,\n  Format.get_all_formatter_output_functions,\n  Format.pp_set_all_formatter_output_functions,\n  Format.pp_get_all_formatter_output_functions, Format.pp_open_tag,\n  Format.pp_close_tag, Format.open_tag, Format.close_tag,\n  Format.formatter_tag_functions, Format.pp_set_formatter_tag_functions,\n  Format.pp_get_formatter_tag_functions, Format.set_formatter_tag_functions,\n  Format.get_formatter_tag_functions, Gc (mutability of the fields of type\n  Gc.control), Lazy.lazy_from_fun, Lazy.lazy_from_val, Lazy.lazy_is_val,\n  Obj.set_tag, Obj.truncate, Obj.final_tag, Obj.extension_constructor,\n  Obj.extension_name, Obj.extension_id, Scanf.stdib, Scanf.fscanf,\n  Scanf.kfscanf, Stdlib.( & ), Stdlib.( or ), String.set, String.copy,\n  String.fill, String.unsafe_set, String.unsafe_fill, String.uppercase,\n  String.lowercase, String.capitalize, String.uncapitalize, Thread.kill,\n  Thread.wait_write, Thread.wait_read, the whole ThreadUnix module, the\n  infix operator (.[]<-).\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10896 ],
        "text": "Remove Stream, Genlex and Pervasives. Also remove legacy standalone\n  bigarray library (the Bigarray module is now part of the standard library).\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Kate", "Deplaix" ], [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 10921 ],
        "text": "Use getentropy, when available, to seed the generator during\n  `Random.self_init`\n  ",
        "breaking change": false,
        "authors": [ [ "Michael", "Hendricks" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ],
          [ "Anil", "Madhavapeddy" ]
        ]
      },
      {
        "references": [ 10924 ],
        "text": "Add deprecated attribute to Printexc.catch, Printf.kprintf and\n  Unix.SO_ERROR.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10986 ],
        "text": "Add Scanf.sscanf_opt, Scanf.bscanf_opt and Scanf.scanf_opt.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11157 ],
        "text": "Rename \"hash\" in the \"Hashtbl.SeededHashedType\" signature to\n  \"seeded_hash\". This allows defining both seeded and unseeded hash functions in\n  the same module.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8878 ],
        "text": "Add String.hash and String.seeded_hash.\n  ",
        "breaking change": false,
        "authors": [ [ "Tom", "Kelly" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 11279, 11585, 11742 ],
        "text": "ensure that the unsafe Buffer code\n  remains memory-safe in concurrent settings.\n  Unsynchronized access to Buffer is a programming error and may\n  result in wrong behavior, but it should preserve memory-safety.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Vincent", "Laviron" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 9071, 9100, 10935 ],
        "text": "Reimplement `Thread.exit()` as raising the\n  exception `Thread.Exit`, and mark `Thread.exit` as deprecated.\n  The new implementation changes the behavior compared with\n  the OCaml 4 implementation.  For example, the new implementation\n  causes `Fun.finally` finalizers to be run and catch-all exception\n  handlers to prevent termination.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques-Henri", "Jourdan" ], [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ],
          [ "Enguerrand", "Decorne" ]
        ]
      },
      {
        "references": [ 11034 ],
        "text": "Dynlink library, add a global lock to make dynlinking\n  thread-safe.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11087 ],
        "text": "deprecate Thread.wait_timed_read, Thread.wait_timed_write,\n  Thread.select, Thread.wait_pid. The same functionality is available in the\n  Unix module.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 11309, 11424, 11427, 11545 ],
        "text": "Add Domain.recommended_domain_count.\n  ",
        "breaking change": false,
        "authors": [
          [ "Christiano", "Haesbaert" ], [ "Konstantin", "Belousov" ]
        ],
        "review": [
          [ "David", "Allsopp" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11461, 11466 ],
        "text": "Fix gethostbyaddr for IPv6 arguments and make it domain-safe\n  ",
        "breaking change": false,
        "authors": [
          [ "Olivier", "Nicole" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ],
        "review": [ [ "the", "same" ] ]
      },
      {
        "references": [ 11479 ],
        "text": "Make Unix.symlink domain-safe on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 11004 ],
        "text": "Litmus tests for checking the implementation of the\n  memory model.\n  ",
        "breaking change": true,
        "authors": [ [ "Luc", "Maranget" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11024 ],
        "text": "Handle alerts in ocamldoc.\n  The alert `[@@alert deprecated]` is handled specifically and it's no longer\n  needed to duplicate the deprecated annotation (the alert for the compiler and\n  the tag for the documentation). Every other alerts also appear in the\n  documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "Jules", "Aguillon" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11065 ],
        "text": "Port the bytecode debugger to 5.0, adding support for effect handlers.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "@fabbing" ] ],
        "review": [ [ "@fabbing" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11079 ],
        "text": "Add the -nobanners option to dumpobj.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 11100 ],
        "text": "Fix ocamltest to make sure failed tests are not counted as\n  \"unexpected error\".\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11245 ],
        "text": "Merge the common code of ocamlcp and ocamloptp into a single module.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11382 ],
        "text": "OCamlmktop use a new initialization module \"OCamlmktop_init\" to\n  preserve backward-compatibility with user-module provided modules that install\n  toplevel printers.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 11058 ],
        "text": "runtime/HACKING.adoc tips on debugging the runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Enguerrand", "Decorne" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11093 ],
        "text": "Add an effect handlers tutorial\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [
          [ "François", "Pottier" ],
          [ "Gabriel", "Scherer" ],
          [ "François", "Bobot" ],
          [ "Wiktor", "Kuchta" ]
        ]
      },
      {
        "references": [ 11192 ],
        "text": "Better documentation for condition variables.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Pottier" ] ],
        "review": [
          [ "Luc", "Maranget" ],
          [ "Xavier", "Leroy" ],
          [ "Wiktor", "Kuchta" ]
        ]
      },
      {
        "references": [ 11093 ],
        "text": "Add tutorials on parallelism features and the relaxed memory model\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Gabriel", "Scherer" ],
          [ "Thomas", "Leonard" ],
          [ "Tom", "Ridge" ],
          [ "Xavier", "Leroy" ],
          [ "Luc", "Maranget" ],
          [ "Fabrice", "Buoro" ],
          [ "Olivier", "Nicole" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 11640, 11647 ],
        "text": "Add missing options to the man pages:\n   flambda commonly-used options, and negative options (`-no-rectypes`, ... ).\n   ",
        "breaking change": false,
        "authors": [ [ "Amandine", "Nangah" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Sébastien", "Hinderer" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 11676 ],
        "text": "Fix missing since annotation in the `Sys` and `Format` modules\n  ",
        "breaking change": false,
        "authors": [ [ "Bukolab99" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11813 ],
        "text": "Make new multicore chapters easier to discover, and emphasize impact\n  on C bindings.\n  ",
        "breaking change": false,
        "authors": [ [ "Edwin", "Török" ] ],
        "review": [
          [ "KC", "Sivaramakrishnan" ], [ "Florian", "Angeletti" ]
        ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 9140, 11131 ],
        "text": "New command-line flag -nocwd to not include implicit\n  the current directory to the load path.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Roglin" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11089 ],
        "text": "Add 'since <version>' information to compiler warnings.\n  ",
        "breaking change": false,
        "authors": [ [ "André", "Maroneze" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10909 ],
        "text": "Disable warning 59 (assignment to immutable blocks) unless flambda\n  invariant checks are enabled.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10981, 11276 ],
        "text": "Implement a -cmi-file option for ocamlc and ocamlopt.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Daniel", "Bünzli" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 11049 ],
        "text": "Stop padding 1-digit compiler minor version numbers.\n  (So for instance OCaml 5.0 rather than 5.00)\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 11184, 11670 ],
        "text": "Stop calling ranlib on created / installed libraries\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "the", "same" ] ]
      },
      {
        "references": [ 11253 ],
        "text": "Deprecate `ocaml script` and `ocamlnat` script where `script` has no\n  extension and is an implicit basename.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Florian", "Angeletti" ], [ "Sébastien", "Hinderer" ]
        ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 10878, 10909 ],
        "text": "restore flambda after the Multicore merge.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10864, 10888 ],
        "text": "restore afl-fuzz mode for sequential programs.\n  ",
        "breaking change": false,
        "authors": [ [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11008, 11047 ],
        "text": "rework GC statistics in the Multicore runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Enguerrand", "Decorne" ] ]
      },
      {
        "references": [ 11058 ],
        "text": "basic debugging documentation in runtime/HACKING.adoc\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Enguerrand", "Decorne" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 11199 ],
        "text": "Stop installing topdirs.cmi twice. The toplevel now reads topdirs.cmi\n  from +compiler-libs, as the debugger does.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11007, 11399 ],
        "text": "META files for the stdlib, compiler-libs and other libraries\n  (unix, dynlink, str, runtime_events, threads, ocamldoc) are now installed\n  along with the compiler.\n  ",
        "breaking change": false,
        "authors": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Sébastien", "Hinderer" ]
        ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Kate", "Deplaix" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Build system:": [
      {
        "references": [ 10893 ],
        "text": "Remove configuration options --disable-force-safe-string and\n  DEFAULT_STRING=unsafe as well as --enable-force-safe-string and\n  DEFAULT_STRING=safe which are now the default unconditionally.\n  ",
        "breaking change": true,
        "authors": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11092 ],
        "text": "Build native-code compilers on OpenBSD/aarch64.\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 11126 ],
        "text": "Build system: make it possible to choose which ocamldep\n  (and flags) to use when computing dependencies for the compiler.\n  Add a -no-slash option to ocamldep to let users override -slash.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11147 ],
        "text": "Factorize the stdlib-related compilation flags. Make it\n  possible to control them consistently through the STDLIBFLAGS\n  build variable. Make sure ocamldoc and ocamllex get compiled and\n  linked with debugging information (-g).\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11149 ],
        "text": "Make the bootstrap process reproducible on systems with non-big-endian\n  floating point. If the boot/ artefacts are up-to-date, this means that running\n  make bootstrap on any platform should not change the images in boot/ and paves\n  the way for automated testing that the bootstrap is repeatable.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11160 ],
        "text": "otherlibs: merge win32unix into unix.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Leroy" ],
          [ "Vincent", "Laviron" ],
          [ "Antonin", "Décimo" ]
        ]
      },
      {
        "references": [ 11198, 11298 ],
        "text": "Install the Dynlink, Str and Unix libraries to individual\n  subdirectories of LIBDIR. The compiler, debugger and toplevel automatically\n  add `-I +lib` if required, but display an alert.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Valentin", "Gatien-Baron" ],
          [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 11200 ],
        "text": "Install ocamlprof's Profiling runtime module to a +profiling,\n  removing it from the default namespace.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11294 ],
        "text": "Switch minimum required autoconf to 2.71.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11370, 11373 ],
        "text": "Don't pass CFLAGS to flexlink during configure.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "William", "Hu" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11487 ],
        "text": "Thwart FMA test optimization during configure\n  ",
        "breaking change": false,
        "authors": [ [ "William", "Hu" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11097 ],
        "text": "Build native-code compilers on NetBSD/aarch64\n  ",
        "breaking change": false,
        "authors": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Anil", "Madhavapeddy" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 10768, 11340 ],
        "text": "Fix typechecking regression when combining first class\n  modules and GADTs.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "François", "Thiré" ] ],
        "review": [ [ "Matthew", "Ryan" ] ]
      },
      {
        "references": [ 10790 ],
        "text": "don't drop variance and injectivity annotations when pretty printing\n  `with` constraints (for example, `with type +!'a t = ...`).\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Luke", "Maurer" ] ],
        "review": [ [ "Matthew", "Ryan" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11167 ],
        "text": "Fix memory leak from signal stack.\n  ",
        "breaking change": false,
        "authors": [ [ "Antoni", "Żewierżejew" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Enguerrand", "Decorne" ] ]
      },
      {
        "references": [ 11112 ],
        "text": "harden -use-runtime against spaces or quotes in the provided path\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Brahima", "Dibassi" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11068, 11070 ],
        "text": "Fix typo in function name given in Unix_error exception for\n  Unix.readlink on Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Xia", "Li-yao" ] ]
      },
      {
        "references": [ 10807 ],
        "text": "Don't duplicate standard handles in the child process\n  spawned by win32unix Unix.create_process if the handles were already\n  inheritable. Fix broken signalling of EOF on standard handles if\n  they were already inheritable.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10868 ],
        "text": "Fix off-by-1 bug when initializing frame hashtables\n  ",
        "breaking change": false,
        "authors": [ [ "Jonah", "Beckford" ] ],
        "review": [
          [ "Tom", "Kelly" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "KC", "Sivaramakrishnan" ]
        ]
      },
      {
        "references": [ 11077 ],
        "text": "Make dumpobj compatible with absence of naked pointer support\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ], [ "Jan", "Midtgaard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11111 ],
        "text": "fix fork() usage in ocamltest C code.\n  When calling fork() from C code with the Multicore runtime active,\n  one needs to call caml_atfork_hook() on the forked child before it\n  can use the OCaml runtime.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Brahima", "Dibassi" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10809 ],
        "text": "Use the WSA_FLAG_NO_HANDLE_INHERIT on Windows when creating\n  sockets with WSASocket if the cloexec (non-inheritable) parameter is\n  true. Fixes a race condition where a child process could inherit the\n  socket and deadlock the parent.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11194, 11609 ],
        "text": "Fix inconsistent type variable names in \"unbound type var\"\n  messages\n  ",
        "breaking change": false,
        "authors": [ [ "Ulysse", "Gérard" ], [ "Florian", "Angeletti" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11204 ],
        "text": "Fix regression introduced in 4.14.0 that would trigger Warning 17 when\n  calling virtual methods introduced by constraining the self type from within\n  the class definition.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 11263, 11267 ],
        "text": "caml/misc.h: check whether `_MSC_VER` is defined before using\n  it to ensure that the headers can always be used in code which turns on\n  -Wundef (or equivalent).\n  ",
        "breaking change": false,
        "authors": [
          [ "David", "Allsopp" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 11289, 11405 ],
        "text": "fix some leaks on systhread termination\n  ",
        "breaking change": false,
        "authors": [
          [ "Fabrice", "Buoro" ],
          [ "Enguerrand", "Decorne" ],
          [ "Gabriel", "Scherer" ]
        ],
        "report": [ [ "Romain", "Beauxis" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11314, 11416 ],
        "text": "fix non-informative error message for module inclusion\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Thierry", "Martinez" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11358, 11379 ],
        "text": "Refactor the initialization of bytecode threading,\n  This avoids a \"dangling pointer\" warning of GCC 12.1.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11387 ],
        "text": ", module type with constraints no longer crash the compiler in presence\n  of both shadowing warnings and the `-bin-annot` compiler flag.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11392, 11392 ],
        "text": "assertion failure with -rectypes and external definitions\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Dmitrii", "Kosarev" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11417 ],
        "text": "Fix regression allowing virtual methods in non-virtual classes.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11468 ],
        "text": "Fix regression from #10186 (OCaml 4.13) detecting IPv6 on Windows for\n  mingw-w64 i686 port.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 11482, 11542 ],
        "text": "Fix random crash in large closure allocation\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Thierry", "Martinez" ], [ "Vincent", "Laviron" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11508, 11509 ],
        "text": "make Bytes.escaped domain-safe\n  ",
        "breaking change": false,
        "authors": [
          [ "Christiano", "Haesbaert" ], [ "Gabriel", "Scherer" ]
        ],
        "report": [ [ "Jan", "Midtgaard" ], [ "Tom", "Kelly" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11516, 11524 ],
        "text": "Fix the `deprecated_mutable` attribute.\n  ",
        "breaking change": false,
        "authors": [ [ "Chris", "Casinghino" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 11576 ],
        "text": "Fix bug in Bigarray.Genarray.init in the the case of zero-dimensional\n  arrays.\n  ",
        "breaking change": false,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Jeremy", "Yallop" ]
        ],
        "report": [ [ "Masayuki", "Takeda" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11587 ],
        "text": "Prevent integer comparison from being used on pointers\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11622 ],
        "text": "Prevent stack overflow when printing a constructor or record\n  mismatch error involving recursive types.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11662, 11673 ],
        "text": "fix a memory leak when using Dynlink,\n  the bug was only present in development version of OCaml 5.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Andre", "Maroneze" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11732 ],
        "text": "Ensure that types from packed modules are always generalised\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 11737 ],
        "text": "Fix segfault condition in Unix.stat under Windows in the presence of\n  multiple threads.\n  ",
        "breaking change": false,
        "authors": [ [ "Marc", "Lasson" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 11776 ],
        "text": "Extend environment with functor parameters in `strengthen_lazy`.\n  ",
        "breaking change": false,
        "authors": [ [ "Chris", "Casinghino" ], [ "Luke", "Maurer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11533, 11534 ],
        "text": "follow synonyms again in #show_module_type\n  (this had stopped working in 4.14.0)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Yaron", "Minsky" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Florian", "Angeletti" ] ]
      }
    ]
  },
  "OCaml 4.14.0 (28 March 2022)": {
    " Language features:": [
      {
        "references": [ 10462 ],
        "text": "Add attribute to produce a compiler error for polls.\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Stephen", "Dolan" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 10437 ],
        "text": "Allow explicit binders for type variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10441 ],
        "text": "Remove unnecessary parentheses surrounding immediate objects.\n  Allow 'object ... end # f', 'f object ... end', etc.\n  ",
        "breaking change": false,
        "authors": [ [ "Yan", "Dong" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 181, 9760, 10740 ],
        "text": "opt-in tail-modulo-cons (TMC) transformation\n    let[@tail_mod_cons] rec map f li = ...\n  ",
        "breaking change": false,
        "authors": [
          [ "Frédéric", "Bour" ],
          [ "Gabriel", "Scherer" ],
          [ "Basile", "Clément" ]
        ],
        "review": [ [ "Basile", "Clément" ], [ "Pierre", "Chambart" ] ],
        "tested": [ [ "Konstantin", "Romanov" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 9391, 9424 ],
        "text": "Fix failed assertion in runtime due to ephemerons *set_* and\n  *blit_* function during Mark phase\n  ",
        "breaking change": true,
        "authors": [ [ "François", "Bobot" ] ],
        "reported": [ [ "Stephen", "Dolan" ] ],
        "reviewed": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10195, 10680 ],
        "text": "Speed up GC by prefetching during marking\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Damien", "Doligez" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 10549 ],
        "text": "Stack overflow detection and naked pointers checking for ARM64\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10675 ],
        "text": "Emit deprecation warnings when old C runtime function names\n  are used.  This will break C stub code that uses these old names and\n  treats warnings as errors.  The workaround is to use the new names.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10698, 10726 ],
        "text": "Free the alternate signal stack when the main OCaml\n   code or an OCaml thread stops\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10730 ],
        "text": ", 10731: Fix bug in `Obj.reachable_words` causing a slowdown when called\n  multiple time ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "ygrek" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10926 ],
        "text": "Rename the two internal Windows Unicode functions with `caml_` prefix\n  instead of `win_`.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Kate", "Deplaix" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 10578 ],
        "text": "Increase the number of integer registers used for\n  parameter passing on PowerPC (16 registers) and on s390x (8 registers).\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 10591, 10615 ],
        "text": "Tune the heuristic for CSE of integer constants\n  so as to avoid excessive CSE on compiler-generated constants\n  and long register allocation times.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Edwin", "Török" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10595 ],
        "text": "Tail calls with up to 64 arguments are guaranteed to be compiled\n  as tail calls.  To this end, memory locations in the domain state\n  are used for passing arguments that do not fit in registers.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 10681 ],
        "text": "Enforce boolean conditions for the native backend\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10719 ],
        "text": "Ensure that build_apply respects Lambda.max_arity\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10728 ],
        "text": "Ensure that functions are evaluated after their arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 10732 ],
        "text": "Ensure right-to-left evaluation of arguments in cmm_helpers\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 10710 ],
        "text": "Add UTF tools, codecs and validations to the Uchar, Bytes and\n  String modules.\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10622 ],
        "text": "Annotate `Uchar.t` with immediate attribute\n  ",
        "breaking change": true,
        "authors": [ [ "Hongbo", "Zhang" ] ],
        "reivew": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 7812, 10475 ],
        "text": "`Filename.chop_suffix name suff` now checks that `suff`\n  is actually a suffix of `name` and raises Invalid_argument otherwise.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "whitequark" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10482 ],
        "text": "mark the Stream and Genlex modules as deprecated, in preparation\n  for a future removal.  These modules (without deprecation alert)\n  are now provided by the camlp-streams library.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10526 ],
        "text": "add Random.bits32, Random.bits64, Random.nativebits\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "François", "Bobot" ] ]
      },
      {
        "references": [ 10568 ],
        "text": "remove Obj.marshal and Obj.unmarshal\n  (these functions have been deprecated for a while and are superseded\n   by the functions from module Marshal)\n  ",
        "breaking change": true,
        "authors": [ [ "François", "Pottier" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 10545 ],
        "text": "Add In_channel and Out_channel modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Simon", "Cruanes" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Alain", "Frisch" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10538 ],
        "text": "add Out_channel.set_buffered and Out_channel.is_buffered to control\n  the buffering mode of output channels.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "John", "Whitington" ],
          [ "Daniel", "Bünzli" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10583, 10998 ],
        "text": "Add over 40 new functions in Seq.\n  ",
        "breaking change": true,
        "authors": [ [ "François", "Pottier" ], [ "Simon", "Cruanes" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Daniel", "Bünzli" ],
          [ "Nathanaëlle", "Courant" ],
          [ "Craig", "Ferguson" ],
          [ "Wiktor", "Kuchta" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Raphaël", "Proust" ],
          [ "Gabriel", "Scherer" ],
          [ "Thierry", "Martinez" ]
        ]
      },
      {
        "references": [ 10596, 10978 ],
        "text": "Add with_open_bin, with_open_text and with_open_gen to\n  In_channel and Out_channel. Also, add In_channel.input_all.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Jérémie", "Dimino" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10658 ],
        "text": "add detailed information about the current version of OCaml\n  to the Sys module of the standard library.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 10642 ],
        "text": "On Windows, Sys.remove and Unix.unlink now remove symlinks\n  to directories instead of raising EACCES. Introduce\n  caml/winsupport.h to hold more common code between the runtime,\n  lib-sys, and win32unix.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10737 ],
        "text": "add new ephemeron API for forward compatibility with Multicore\n  OCaml.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10786 ],
        "text": "The implementation of Complex.norm now uses Float.hypot.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 10192 ],
        "text": "Add support for Unix domain sockets on Windows and use them\n  to emulate Unix.socketpair (only available on Windows 1803+)\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10469 ],
        "text": "Add Thread.set_uncaught_exception_handler and\n  Thread.default_uncaught_exception_handler.\n  ",
        "breaking change": false,
        "authors": [ [ "Enguerrand", "Decorne" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10697 ],
        "text": "Bindings of dup and dup2 in win32unix now correctly call\n  WSADuplicateSocket on sockets instead of DuplicateHandle.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10926, 11336 ],
        "text": "Ensure all C functions in the Unix library are prefixed with\n  `caml_`.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Kate", "Deplaix" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10951 ],
        "text": "Introduce the Thread.Exit exception as an alternative way to\n  terminate threads prematurely.  This alternative way will become\n  the standard way in 5.0.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 9701 ],
        "text": "Release bytecode only after collecting backtrace information\n  for exceptions, same for dynamic loaded code compiled from toplevel on\n  ocamlnat.\n  ",
        "breaking change": false,
        "authors": [ [ "Renato", "Alencar" ] ],
        "reported": [ [ "Krzysztof", "Leśniak" ] ],
        "reviewed": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10839 ],
        "text": "Fix regression of #show when printing class type\n  ",
        "breaking change": false,
        "authors": [ [ "Élie", "Brami" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 3959, 7202, 10476 ],
        "text": "ocaml, in script mode, directive errors\n  (`#use \"missing_file\";;`) use stderr and exit with an error.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10438 ],
        "text": "add a new toplevel cli argument `-e <script>` to\n  run script passed to the toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "Pavlo", "Khrystenko" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10524 ],
        "text": "Directive argument type error now shows expected and received type.\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10560 ],
        "text": "Disable colors if the env variable `NO_COLOR` is set.  If\n  `OCAML_COLOR` is set, its setting takes precedence over `NO_COLOR`.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 10565 ],
        "text": "Toplevel value printing: truncate strings only after 8 bytes.\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10527 ],
        "text": "Show \"#help;; for help\" at toplevel startup\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10846 ],
        "text": "add the `-shape` command-line option to ocamlobjinfo. When reading a\n  `cmt` file, shape information will only be shown if that option is used.\n  ",
        "breaking change": false,
        "authors": [ [ "Ulysse", "Gérard" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Debugging:": [
      {
        "references": [ 10517, 10594 ],
        "text": "when running ocamldebug on a program linked with the\n  threads library, don't fail immediately; instead, allow debugging\n  until the program creates a thread for the first time, then fail cleanly.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "@anentropic" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9621 ],
        "text": "Pack the ocamldebug modules to minimize clashes\n  ",
        "breaking change": false,
        "authors": [ [ "Raphael", "Sousa", "Santos" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 7812, 10475 ],
        "text": "reworded the description of the behaviors of\n  float->int conversions in case of overflow, and of iterators\n  in case of concurrent modifications.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "whitequark" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8697, 10666 ],
        "text": "add M, m, n options of the OCAMLRUNPARAM to manual and man page\n  for ocamlrun command line options\n  ",
        "breaking change": false,
        "authors": [ [ "Dong", "An" ], [ "Anukriti", "Kumar" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 10281, 10685 ],
        "text": "Add description of C compiler on macOS and Windows platforms.\n  ",
        "breaking change": false,
        "authors": [ [ "Dong", "An" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10397 ],
        "text": "Document exceptions raised by Unix module functions on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Martin", "Jambon" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "David", "Alsopp" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 10589 ],
        "text": "Fix many typos (excess/inconsistent spaces) in the HTML manual.\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10605 ],
        "text": "manual, name few css classes to ease styling and maintainability.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Wiktor", "Kuchta" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10668, 10669 ],
        "text": "the changelog (this file), LICENSE and README files are now\n  installed as part of the distribution. The destination directory can be\n  customized using the `--docdir` argument to `./configure`.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Sébastien", "Hinderer" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 10671, 10672 ],
        "text": "webman: Fix misalignments in unordered lists by changing the\n  CSS for coloring bullets\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11107 ],
        "text": "Lifted comments in the Parsetree module into actual documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "Paul-Elliot", "Anglès", "d'Auriac" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11120, 11133 ],
        "text": "man pages, add missing warning entries and add mnemonic names\n  to the list of warnings.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 10328, 10780 ],
        "text": "Give more precise error when disambiguation could not\n  possibly work.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10361 ],
        "text": "Improve error messages for mismatched record and variant\n  definitions.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10407 ],
        "text": "Produce more detailed error messages that contain full error traces\n  when module inclusion fails.\n  ",
        "breaking change": false,
        "authors": [ [ "Antal", "Spector-Zabusky" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10531 ],
        "text": "add naked_pointers to ocamlc -config exporting NAKED_POINTERS from\n  Makefile.config.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9116, 9118, 10582 ],
        "text": "Fix single-line source highlighting in the\n  presence of tabs\n  ",
        "breaking change": false,
        "PR editing": [ [ "Kate", "Deplaix" ] ],
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "report": [ [ "Ricardo", "M.", "Correia" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10488 ],
        "text": "Improve type variable name generation and recursive type detection\n  when printing type errors; this ensures that the names given to type variables\n  are always reused in the following portion of the trace and also removes\n  spurious `as 'a`s in types.\n  ",
        "breaking change": false,
        "authors": [ [ "Antal", "Spector-Zabusky" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10794 ],
        "text": "Clarify warning 57 (Ambiguous or-pattern variables under guard)\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 1599 ],
        "text": "add unset directive to ocamltest to clear environment variables before\n  running tests.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8516 ],
        "text": "Change representation of class signatures\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9444 ],
        "text": "-dtypedtree, print more explictly extra nodes in pattern ast.\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10337 ],
        "text": "Normalize type_expr nodes on access\n  One should now use accessors such as get_desc and get_level to access fields\n  of type_expr, rather than calling manually Btype.repr (which is now hidden\n  in Types.Transient_expr).\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 10474 ],
        "text": "Force normalization on access to row_desc\n  Similar to #10337. Make row_desc an abstract types, with constructor\n  create_row and accessors defined in Types rather than Btype.\n  A normalized view row_desc_repr is provided for convenience.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Leo", "White" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10541 ],
        "text": "Make field_kind and commutable abstract, enforcing correct access\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10575 ],
        "text": "add a -dump-dir flag, which redirects all debugging printer\n   (`-dprofile`, `-dlambda`, ...) to the target directory\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10627 ],
        "text": "Make row_field abstract\n  Completes #10474 by making row_field abstract too.\n  An immutable view row_field_view is provided, and one converts between it\n  and row_field via inj_row_field and row_field_repr.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10433 ],
        "text": "Remove the distinction between 32-bit aligned and 64-bit aligned\n  64-bit floats in Cmm.memory_chunk.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10434 ],
        "text": "Pun labelled arguments with type constraint in function applications.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Nicolas", "Chataing" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 10470 ],
        "text": "Remove unused `cstr_normal` field from the `constructor_description`\n  type\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolas", "Chataing" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10382 ],
        "text": "Don't repeat environment entries in Typemod.check_type_decl\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10472 ],
        "text": "refactor caml_sys_random_seed to ease future Multicore changes\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10487 ],
        "text": "Move logic to get the type path from a constructor return type in\n  Types\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolas", "Chataing" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 10555 ],
        "text": "Do not use ghost locations for type constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Anton", "Bachin" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10598, 10616 ],
        "text": "fix an exponential blow-up when typechecking nested module\n  types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10559 ],
        "text": "Evaluate signature substitutions lazily\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 8776, 10624 ],
        "text": "Fix compilation time regression introduced in 4.08\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "fix": [ [ "Leo", "White" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10618 ],
        "text": "Expose more Pprintast functions\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Petiot" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10637 ],
        "text": "Outcometree: introduce a record type for constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10516 ],
        "text": "refactor the compilation of the 'switch' construct\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Wiktor", "Kuchta" ], [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 10670 ],
        "text": "avoid global C state in the RE engine for the \"str\" library\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10678 ],
        "text": "Expose descriptions in Warnings module\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 10690 ],
        "text": "Always build ocamltoplevel.cmxa\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10692 ],
        "text": "Expose Parse.module_type and Parse.module_expr\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Petiot" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10714 ],
        "text": "Add X86_proc.with_internal_assembler for temporarily changing the\n  assembler used by the backend.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10715 ],
        "text": "Allow the assembler and loader to be substituted in ocamlnat, for\n  example to be replaced with a binary emitter.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Nathan", "Rebours" ] ],
        "review": [
          [ "Louis", "Gesbert" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10718, 11012 ],
        "text": "Add \"Shape\" information to the cmt files. Shapes are an\n  abstraction of modules that can be used by external tooling to perform\n  definition-aware operations.\n  ",
        "breaking change": false,
        "authors": [
          [ "Ulysse", "Gérard" ], [ "Thomas", "Refis" ], [ "Leo", "White" ]
        ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10742 ],
        "text": "strong call-by-need reduction for shapes\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ], [ "Nathanaëlle", "Courant" ]
        ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Ulysse", "Gérard" ],
          [ "Thomas", "Refis" ]
        ]
      }
    ],
    " Build system:": [
      {
        "references": [ 10835 ],
        "text": "Disable DT_TEXTREL warnings on x86 32 bit architecture by passing\n  -Wl,-z,notext in mksharedlib and mkmaindll. Fixes relocation issues, reported\n  in #9800, making local patches in Debian, Alpine, and FreeBSD superfluous.\n  ",
        "breaking change": false,
        "authors": [
          [ "Hannes", "Mehnert" ],
          [ "Kate", "Deplaix" ],
          [ "Stéphane", "Glondu" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10717 ],
        "text": "Simplify the installation of man pages\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10739 ],
        "text": "Stop installing extract_crc\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Daniel", "Bünzli" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10797 ],
        "text": "Compile with -d2VolatileMetadata- on supporting versions of Visual\n  Studio. This suppresses the addition of .voltbl sections and eliminates\n  linking errors in systhreads.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Jonah", "Beckford" ], [ "Sébastien", "Hinderer" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 9214, 10709 ],
        "text": "Wrong unmarshaling of function pointers in debugger mode.\n  This was causing ocamldebug to crash when running some user-defined printers.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Rehan", "Malak" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 10364 ],
        "text": "Improve detection of ambiguity in case bodies.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10473 ],
        "text": "Add CFI directives to RISC-V runtime and asmcomp.\n  This allows stacktraces to work in gdb through C and OCaml calls.\n  ",
        "breaking change": false,
        "authors": [ [ "Edwin", "Török" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10539 ],
        "text": "Field kinds should be kept when copying types\n  Losing the sharing meant that one could desynchronize them between several\n  occurrences of self, allowing a method to be both public and hidden,\n  which broke type soundness.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10542 ],
        "text": "Fix detection of immediate64 types through unboxed types.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10590 ],
        "text": "Some typechecker optimisations\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 10633 ],
        "text": "Stack overflow recovery in ocamlopt for AMD64/Linux and ARM/Linux\n  was not restoring the minor heap pointer correctly\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10659 ],
        "text": "Fix freshening substitutions on imported modules\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Stephen", "Dolan" ] ],
        "review": [ [ "Matthew", "Ryan" ] ]
      },
      {
        "references": [ 10677, 10679 ],
        "text": "Fix detection of CC as gcc in configure (allow for\n  triplet-prefixed GCC) and fix all C compiler detection when CC is a path\n  rather than a basename.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Fabian", "@copy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10690 ],
        "text": "Add --enable-native-toplevel to configure to enable installing\n  ocamlnat as part of the main build (default is not to install it)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10693 ],
        "text": "Fix ident collision in includemod\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Matthew", "Ryan" ] ]
      },
      {
        "references": [ 10702 ],
        "text": "Fix cast of more strictly aligned pointer in win32unix\n  implementation of stat\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10712 ],
        "text": "Type-check toplevel terms in the native toplevel in the same way as\n  the bytecode toplevel. In particular, this fixes the loss of type variable\n  names in the native toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10735 ],
        "text": "Uncaught unify exception from `build_as_type`\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10763, 10764 ],
        "text": "fix miscompilation of method delegation\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 10822, 10823 ],
        "text": "Bad interaction between ambivalent types and subtyping\n  coercions ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Frédéric", "Bour" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 10836, 10952 ],
        "text": "avoid internal typechecker errors when checking signature\n  inclusion in presence of incompatible types.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Craig", "Ferguson" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10849 ],
        "text": "Display the result of `let _ : <type> = <expr>` in the native\n  toplevel, as in the bytecode toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Nathan", "Rebours" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10853 ],
        "text": "`Obj.reachable_words` could crash if called after a marshaling\n  operation in `NO_SHARING` mode.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 10907, 10959 ],
        "text": "Wrong type inferred from existential types\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "@dyzsr" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10688 ],
        "text": "Move frame descriptor table from `rodata` to `data` section on\n  RISC-V.  Improves support for building DLLs and PIEs. In particular, this\n  applies to all binaries in distributions that build PIEs by default (eg\n  Gentoo and Alpine).\n  ",
        "breaking change": false,
        "authors": [ [ "Alex", "Fan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 11031 ],
        "text": "Exception handlers restore the rbp register when using frame-pointers\n  on amd64.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Buoro" ] ],
        "help": [
          [ "Stephen", "Dolan" ], [ "Tom", "Kelly" ], [ "Mark", "Shinwell" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11025, 11036 ],
        "text": "Do not pass -no-pie to the C compiler on musl/arm64\n  ",
        "breaking change": false,
        "authors": [
          [ "omni" ],
          [ "Kate", "Deplaix" ],
          [ "Antonio", "Nuno", "Monteiro" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 11101, 11109 ],
        "text": "A recursive type constraint fails on 4.14\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 11118 ],
        "text": "Fix integer overflow on 64-bit Windows when indexing bigarrays (which\n  could lead to a segmentation fault).\n  ",
        "breaking change": false,
        "authors": [ [ "Roven", "Gabriel" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.13 maintenance branch": {
    " Bug fixes": [
      {
        "references": [ 10661, 10662 ],
        "text": "fix a bug with classes named \"row\"\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ]
  },
  "OCaml 4.13.0 (24 September 2021)": {
    " Progress towards Multicore:": [
      {
        "references": [ 10039 ],
        "text": "Safepoints\n  Add poll points to native generated code. These are effectively\n  zero-sized allocations and fix some signal and remembered set\n  issues. Also multicore prerequisite.\n  ",
        "breaking change": false,
        "authors": [
          [ "Sadiq", "Jaffer" ],
          [ "Stephen", "Dolan" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ],
          [ "Anmol", "Sahoo" ],
          [ "Mark", "Shinwell" ]
        ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 9876 ],
        "text": "do not cache the young_limit GC variable in a processor register.\n  This affects the ARM64, PowerPC and RISC-V ports, making signal handling\n  and minor GC triggers more reliable, at the cost of a small slowdown.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Language features (highlights):": [
      {
        "references": [ 9584, 7074 ],
        "text": "Allow to name existentials in pattern-matching\n  One can now write '(Cstr (type a) (x, y : int * a))' to give a name to\n  existentials freshly introduced by GADT constructors.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Leo", "White" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Compiler user-interface and warnings (highlights):": [
      {
        "references": [ 9331 ],
        "text": "Improve error messages for functor application and functor types.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10118, 10140 ],
        "text": "enable warning 6 [labels-omitted] by default.\n  The following now warns:\n    let f ~x y = ... in f 3 5\n  the callsite (f 3 5) has to be turned into (f ~x:3 5).\n  This prevents mistakes where two arguments of the same types are swapped.\n  (Note: Dune already enables this warning by default.)\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "ygrek" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Florian", "Angeletti" ] ]
      }
    ],
    " Manual and documentation (highlights):": [
      {
        "references": [ 10247 ],
        "text": "Add initial tranche of examples to reference manual.\n  Adds some eighty examples to the reference manual, principally to the\n  expressions and patterns sections.\n  https://ocaml.org/releases/4.13/manual/patterns.html\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "@Fourchaux" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 9987, 9988, 9996, 9997 ],
        "text": "add an odoc mode for the documentation\n  of the standard library and compiler library\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Sébastien", "Hinderer" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Standard library (highlights):": [
      {
        "references": [ 944 ],
        "text": "Add some missing C99 float operations.  `Stdlib` now contains\n  the inverse hyperbolic functions\n    `acosh`, `asinh`, and `atanh`.\n  These functions were also added to module `Stdlib.Float` together with\n    `exp2`, `log2`, `cbrt`, `erf`, and `erfc`.\n  Full support on MSVC requires VS2013+ but emulated versions are\n  still available (for now) for older compilers.\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Olivier", "Andrieu" ],
          [ "Florian", "Angeletti" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Daniel", "Bünzli" ],
          [ "Fabian", "@copy" ],
          [ "Pascal", "Cuoq" ],
          [ "Damien", "Doligez" ],
          [ "Sébastien", "Hinderer" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Xavier", "Leroy" ],
          [ "Guillaume", "Melquiond" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Runhang", "Li" ],
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ],
          [ "Bernhard", "Schommer" ],
          [ "Christophe", "Troestler" ]
        ]
      },
      {
        "references": [ 9582 ],
        "text": "Add Array.{find_opt,find_map,split,combine}.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9533 ],
        "text": "Added String.starts_with and String.ends_with.\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "Alain", "Frisch" ]
        ]
      }
    ],
    " Code generation and optimizations (highlights):": [
      {
        "references": [ 10404 ],
        "text": "Add a generic backward dataflow analyzer and use it to speed up\n  liveness analysis\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Greta", "Yorsh" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 10414 ],
        "text": "Avoid compilation times exponential in the nesting of loops\n  in the spilling and reloading passes\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      }
    ],
    " Internal typechecker changes (highlights):": [
      {
        "references": [ 10170 ],
        "text": "Maintain more structural information in type-checking errors\n  A mostly-internal change that preserves more information in errors\n  during type checking; most significantly, it split the errors from\n  unification, moregen, and type equality into three different types.\n  ",
        "breaking change": false,
        "authors": [
          [ "Antal", "Spector-Zabusky" ], [ "Mekhrubon", "Tuarev" ]
        ],
        "review": [
          [ "Leo", "White" ],
          [ "Florian", "Angeletti" ],
          [ "Jacques", "Garrigue" ]
        ]
      },
      {
        "references": [ 9994 ],
        "text": "Make Types.type_expr a private type, and abstract marking mechanism\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Leo", "White" ] ]
      }
    ],
    " Runtime system (highlights):": [
      {
        "references": [ 10188, 10213 ],
        "text": "Switch the default allocation policy to best-fit and adjust\n  the default overhead parameter accordingly.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Josh", "Berdine" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10549 ],
        "text": "Stack overflow detection and naked pointers checking for ARM64\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9934 ],
        "text": "Optimise sweeping using prefetching.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Will", "Hasenplaugh" ] ],
        "benchmarking": [
          [ "Shubham", "Kumar" ], [ "KC", "Sivaramakrishnan" ]
        ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 10194 ],
        "text": "Change compaction-triggering heuristic: use the overhead measured\n  by the previous GC cycle instead of an indirect (and noisy) computation\n  of the current overhead.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10449 ],
        "text": "Fix major GC work accounting (the GC was running too fast).\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Sadiq", "Jaffer" ] ]
      }
    ],
    " Language features:": [
      {
        "references": [ 10013 ],
        "text": "Let-punning\n  Allow 'let* x in ...' and 'let%ext x in ...' as shorthand for\n    'let* x = x in ...' and 'let%ext x = x in ...' respectively.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10133 ],
        "text": "module type substitutions\n  Allow 'SIG with module type T = F(X).S', 'SIG with module type T := sig end'\n  and their local equivalent `module type T := sig type u end`\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Leo", "White" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 10081 ],
        "text": "Typecheck `x |> f` and `f @@ x` as `(f x)`\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [
          [ "Jacques", "Garrigue" ],
          [ "Josh", "Berdine" ],
          [ "Thomas", "Refis" ]
        ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 10318 ],
        "text": "Windows Unicode runtime functions are no longer marked as\n  experimental.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9284 ],
        "text": "Add -config option to display the configuration of ocamlrun on stdout,\n  including the search path for shared stub libraries.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9919 ],
        "text": "Introduce caml_record_backtraces and update Interfacing with C to\n  refer to it (previous instruction to use caml_record_backtrace primitive was\n  not possible without defining CAML_INTERNALS)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10102 ],
        "text": "Ignore PROFINFO_WIDTH if WITH_PROFINFO is not defined (technically\n  a breaking change if the configuration system was being abused before).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10107 ],
        "text": "Ensure modules compiled with -afl-instrument can still link on\n  platforms without AFL support.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10098 ],
        "text": "Improve command-line parsing in ocamlrun: strictly recognise options,\n  be more informative for `ocamlrun -I` and support `--` for terminating options\n  parsing.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10101 ],
        "text": "Add -help/--help option to ocamlrun.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10136 ],
        "text": "Minor clean-ups in runtime/io.c and runtime/caml/io.h\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "David", "Allsopp" ], [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 10171 ],
        "text": "Tweak the naked pointers checker so that processes which trigger the\n  alarm always exit with non-zero status (i.e. exit(0) becomes exit(70)).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10212 ],
        "text": "Simplify and improve the Windows-specific code that connects\n  to the debugger via a socket.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10217 ],
        "text": "Fix a segfault in a corner case of compaction (reported in #9853)\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Sadiq", "Jaffer" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10250, 10266 ],
        "text": "Dynamically allocate alternate signal stacks to\n   accommodate changes in Glibc 2.34.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "reports": [ [ "Tomasz", "Kłoczko" ], [ "R.W.M" ], [ "Jones" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Stephen", "Dolan" ],
          [ "Florian", "Angeletti" ]
        ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 1400 ],
        "text": "Add an optional invariants check on Cmm, which can be activated\n  with the -dcmm-invariants flag\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "help": [ [ "Sebastien", "Hinderer" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9562, 367 ],
        "text": "Allow CSE of immutable loads across stores\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9937 ],
        "text": "improvements in ARM64 code generation (constants, sign extensions)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10228 ],
        "text": "Better code-generation for inlined comparisons\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10244 ],
        "text": "Optimise Int32.unsigned_to_int\n  ",
        "breaking change": false,
        "authors": [ [ "Fabian", "Hemmer" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10302, 10303 ],
        "text": "Fix incorrect instruction selection for string constant loads\n  on ppc.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10349 ],
        "text": "Fix destroyed_at_c_call on RISC-V\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10419 ],
        "text": "Add %frame_pointers primitive which is true only in native code with\n  frame pointers mode enabled.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Mark", "Shinwell" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 9448 ],
        "text": "Add String.{empty,cat} as dual of Bytes.{empty,cat},\n  String.{of,to}_bytes as aliases of Bytes.{to,of}_string,\n  Bytes.split_on_char as dual of String.split_on_char, and binary decoding\n  functions in String to match those in Bytes.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ], [ "others" ]
        ]
      },
      {
        "references": [ 9487, 9489 ],
        "text": "Add Random.full_int which allows 62-bit bounds on 64-bit\n  systems.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "request": [ [ "François", "Berenger" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9961 ],
        "text": "Add Array.fold_left_map.\n  ",
        "breaking change": false,
        "authors": [ [ "Craig", "Ferguson" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10097 ],
        "text": "Lazy.map, Lazy.map_val: ('a -> 'b) -> 'a Lazy.t -> 'b Lazy.t\n  (map f x) is always (lazy (f (force x))), whereas (map_val f x)\n  applies f directly if x is already forced.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Alain", "Frisch" ],
          [ "Xavier", "Leroy" ],
          [ "Daniel", "Bünzli" ],
          [ "Stephen", "Dolan" ]
        ]
      },
      {
        "references": [ 10242 ],
        "text": "Added convenience pretty printer for Either.t in the Format module.\n  ",
        "breaking change": false,
        "authors": [ [ "Oghenevwogaga", "Ebresafe" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Van", "de", "Woestyne" ]
        ]
      },
      {
        "references": [ 10352 ],
        "text": "Seq.(concat : 'a t t -> 'a t)\n  Seq.concat_map as an alias to Seq.flat_map,\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Ulugbek", "Abdullaev" ],
          [ "Daniel", "Bünzli" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 882 ],
        "text": "Add fold_left, fold_right, exists and for_all to String/Bytes\n  ",
        "breaking change": false,
        "authors": [ [ "Yotam", "Barnoy" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 4070, 10398 ],
        "text": "small optimization of Stdlib.{frexp,modf}.\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10389, 10391, 10392 ],
        "text": "Add {Int,Int32,Int64,Nativeint}.{min,max}.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Alain", "Frisch" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10430 ],
        "text": "Add Format.print_bytes and Format.pp_print_bytes.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 10084 ],
        "text": "Unix.open_process_args* functions now look up the program in the PATH.\n  This was already the case under Windows, but this is now also done under\n  Unix. Note that previously the program was interpreted relative to the current\n  directory.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10047 ],
        "text": "Add `Unix.realpath`\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Josh", "Berdine" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 10184 ],
        "text": "Remove expensive debug assertion from dynlink.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10185 ],
        "text": "Consider that IPv6 is always enabled on Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10306 ],
        "text": "Map WSA error code to Unix errno for sockopt and getsockname\n  functions ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10309 ],
        "text": "Properly return EBADF on error in Unix.descr_of_{in,out}_channel on\n  Win32 and map Windows error correctly in Unix.truncate and Unix.ftruncate on\n  Win32.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 10139 ],
        "text": "Adds a -nonavbar option to ocamldoc, to remove confusing\n  'Up', 'Previous' and 'Next' links\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8645, 10363 ],
        "text": "ocamldoc: escape `<`, `>`, and `&` in html backend.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Wim", "Lewis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 9525, 10402 ],
        "text": "document that ocamldoc only creates paragraphs\n  at the toplevel of documentation comments\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Hendrik", "Tews" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10206 ],
        "text": "Split labels and polymorphic variants tutorials in two.\n  Moves the GADTs tutorial from the Language Extensions chapter\n  to the tutorials.\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9786, 10181 ],
        "text": "improved documentation of Unix.{in,out}_channel_of_descr\n  with respect to closing.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ],
          [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 10139 ],
        "text": "Use the new -nonavbar option to improve navigation within\n  the reference manual stdlib documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1351 ],
        "text": "Document `-output-complete-obj` option in the manual.\n  ",
        "breaking change": false,
        "authors": [
          [ "François", "Bobot" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9632 ],
        "text": "Document incremental build solutions with opam\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10497 ],
        "text": "Styling changes in the post-processed HTML manual (webman)\n  ",
        "breaking change": false,
        "authors": [ [ "Wiktor", "Kuchta" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10605 ],
        "text": "manual, name few css classes to ease styling and maintainability.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Wiktor", "Kuchta" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 1737, 2092, 7852, 7859, 10405, 10417 ],
        "text": "Update locations during\n  destructive substitutions\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 2245 ],
        "text": "Improve error message for link order error in bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Jérémie", "Dimino" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8732 ],
        "text": ", improved error messages for invalid private row type definitions.\n  For instance, [ type t = private [< `A > `A ] ] .\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Jacques", "Garrigue" ],
          [ "Thomas", "Refis" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 9407 ],
        "text": "optional warning for missing mli interface file\n  ",
        "breaking change": false,
        "authors": [ [ "Anukriti", "Kumar" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9960, 10619 ],
        "text": "extend ocamlc/ocamlopt's -o option to work when\n  compiling C files\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "reported": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10095 ],
        "text": "minor simplifications to some syntax error messages.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Pottier" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 10196, 10197 ],
        "text": "better error message on empty character literals ''.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Robin", "Björklin" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 8877 ],
        "text": "Call the linker when ocamlopt is invoked with .o and .a files only.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10207, 10312 ],
        "text": "deprecate consecutive letters in warning\n  specifications.\n  The form `-w aBcD` was equivalent to `-w -a+b-c+d`.\n  It is now deprecated to improve the coexistence with warning mnemonics.\n  However, using isolated single letter is not deprecated to allow the form\n  `-w \"A-32..50-45\"`.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10232 ],
        "text": "Warning for unused record fields.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 9243 ],
        "text": ", simplify parser rules for array indexing operations\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9650, 9651 ],
        "text": "keep refactoring the pattern-matching compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9827 ],
        "text": "Replace references with functions arguments in Simplif\n  ",
        "breaking change": false,
        "authors": [ [ "Anukriti", "Kumar" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "David", "Allsop" ] ]
      },
      {
        "references": [ 10007 ],
        "text": "Driver.compile_common: when typing a .ml file, return the\n  compilation unit signature (inferred or from the .cmi) in addition\n  to the implementation and the coercion.\n  ",
        "breaking change": false,
        "authors": [ [ "Leandro", "Ostera" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10045 ],
        "text": "Add libext variable to ocamltest and enable C# tests on on mingw\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10061, 10078, 10187 ],
        "text": "remove library `ocamlopttoplevel`, remove modules\n  `Opttoploop`, `Opttopstart`, which are replaced by `Toploop` and `Topstart` in\n  library `ocamltoplevel`, made available in native code.\n  ",
        "breaking change": true,
        "authors": [ [ "Louis", "Gesbert" ] ],
        "review": [
          [ "Jeremie", "Dimino" ],
          [ "Mark", "Shinwell" ],
          [ "Gabriel", "Radanne" ]
        ]
      },
      {
        "references": [ 10124 ],
        "text": "remove duplicated code from the native toplevel, split toplevel\n  implementation into the shared part (`Topcommon`, etc.) and specific ones\n  (`Topeval`, `Trace`, `Topmain`).\n  ",
        "breaking change": false,
        "authors": [ [ "Louis", "Gesbert" ] ],
        "review": [ [ "Jeremie", "Dimino" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 10086 ],
        "text": "add the commands `make list-parse-errors` and `make\n  generate-parse-errors` to generate a set of syntactically incorrect\n  sentences that covers all error states of the LR automaton. Add these\n  sentences to the test suite. This can be used to evaluate the quality of the\n  parser's syntax error messages and (in the future) to evaluate the impact of\n  changes in the parser.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Pottier" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10090 ],
        "text": "Distinguished constructors for ref variables at lambda level\n  ",
        "breaking change": false,
        "authors": [ [ "Keryan", "Didier" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 10113 ],
        "text": "add a `-timeout` option to ocamltest and use it in the test suite.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10169, 10270, 10301, 10451 ],
        "text": "Use capitalized module names in the Standard\n  Library prefixing scheme to match Dune, e.g. Stdlib__String instead of\n  Stdlib__string. This is a breaking change only to code which attempted to use\n  the internal names before. The Standard Library generated by the Dune rules is\n  now equivalent to the main build (the Dune rules still do not generate a\n  distributable compiler).\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ], [ "Mark", "Shinwell" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10327 ],
        "text": "Add a subdirectories variable and a copy action to ocamltest\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10337 ],
        "text": "Normalize type_expr nodes on access\n  One should now use accessors such as get_desc and get_level to access fields\n  of type_expr, rather than calling manually Btype.repr (which is now hidden\n  in Types.Transient_expr).\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 10358 ],
        "text": "Use a hash table for the load path.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8936 ],
        "text": "Per-function environment for Emit\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10543 ],
        "text": "Fix Ast_mapper to apply the mapping function to the constants in\n  \"interval\" patterns `c1..c2`.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Petiot" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      }
    ],
    " Internal typechecker changes:": [
      {
        "references": [ 10174 ],
        "text": "Make Tsubst more robust by avoiding strange workarounds\n  ",
        "breaking change": false,
        "authors": [ [ "Takafumi", "Saikawa" ], [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10265 ],
        "text": "Move type_unboxed.unboxed into type_kind\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10307 ],
        "text": "Refactor type_description in the typing env\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolas", "Chataing" ] ],
        "review": [
          [ "Takafumi", "Saikawa" ],
          [ "Florian", "Angeletti" ],
          [ "Thomas", "Refis" ]
        ]
      },
      {
        "references": [ 10311 ],
        "text": "Separate the constraint-solving part of Typecore.type_pat into\n  specific solver functions.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Takafumi", "Saikawa" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10428 ],
        "text": "Make build_other_constrs work with names instead of tags.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolas", "Chataing" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 10332, 10333 ],
        "text": "Generate lambda/runtimedef.ml correctly in Swedish locale.\n  (the letter 'w' is not included in '[a-z]' in sv_SE.UTF-8)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Anders", "Jackson" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10289, 10406 ],
        "text": "Do not print option documentation in usage messages.\n    ",
        "breaking change": false,
        "authors": [ [ "Pavlo", "Khrystenko" ] ],
        "fix": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9191, 10091, 10182 ],
        "text": "take the LDFLAGS variable into account, except on\n  flexlink-using systems.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Ralph", "Seichter" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10135 ],
        "text": "Overhaul the FlexDLL bootstrap process. It's now fully integrated\n  with the default build target and controlled by --with-flexdll which allows\n  externally downloaded sources for FlexDLL to be specified. A separate\n  non-shared version of the runtime is built, and shared artefacts are no longer\n  built twice. When bootstrapping, any flexlink in PATH is now ignored and the\n  Cygwin port also supports bootstrapping FlexDLL. flexlink.opt is automatically\n  built and installed as part of opt.opt/world.opt.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 10156 ],
        "text": "configure script: fix sockets feature detection.\n  ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10176, 10632 ],
        "text": "By default, call the assembler through the C compiler driver\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10186 ],
        "text": "configure wasn't using library link flags when searching for\n  network functions on systems where they're not in libc. Fix IPv6 and\n  socklen_t detection on Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 10366 ],
        "text": "Make it possible to use the OCAMLRUN variable to specify\n  which runtime to use while building the compilers ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10451, 10635 ],
        "text": "Replace the use of iconv with a C utility to convert $(LIBDIR)\n  to a C string constant on Windows when building the runtime. Hardens the\n  generation of the constant on Unix for paths with backslashes, double-quotes\n  and newlines.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Florian", "Angeletti" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 10471 ],
        "text": "Fix detection of arm32 architectures with musl in configure.\n  ",
        "breaking change": false,
        "authors": [ [ "Louis", "Gesbert" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 6654, 9774, 10401 ],
        "text": "make `include` and with `constraints` handle correctly\n  the ghost components of signatures. For instance, in\n    include struct class c = object end end type c\n   the type `c` shadows the `class c` to avoid shadowing only the ghost type\n   c introduced by the class.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Eduardo", "Rafael" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6985, 10385 ],
        "text": "remove all ghost row types from included modules\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7453, 9828, 10416 ],
        "text": "fix #show for recursive types and modules\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7469, 10408 ],
        "text": "Sys.time now returns processor time on Windows (previously\n  returned wall-clock time)\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 8857, 10220 ],
        "text": "Don't clobber GetLastError() in caml_leave_blocking_section\n  when the systhreads library is loaded.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Anton", "Bachin" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8575, 10362 ],
        "text": "Surprising interaction between polymorphic variants\n  and constructor disambiguation.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8917, 8929, 9889, 10219 ],
        "text": "fix printing of nested recursive definitions\n  in presence of a name collision.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10005 ],
        "text": "Try expanding aliases in Ctype.nondep_type_rec\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Leo", "White" ], [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 10072, 10085 ],
        "text": "Check that sizes and offsets in stack frame descriptors\n  do not overflow the 16-bit fields where they are stored.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "pveber" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10087, 10138 ],
        "text": "In the toplevel REPL, don't use the cache\n  of included directories, so that files created or deleted while\n  the REPL is running are correctly handled.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "quakerquickoats" ] ],
        "review": [ [ "Jeremie", "Dimino" ] ]
      },
      {
        "references": [ 10294, 10295 ],
        "text": "fix an assert-failure in pattern-matching compilation\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 10147, 10148 ],
        "text": "Fix building runtime with GCC on macOS.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "John", "Skaller" ] ]
      },
      {
        "references": [ 10166 ],
        "text": "Fix illegal permutation error reporting in module aliases.\n  ",
        "breaking change": false,
        "authors": [ [ "Matthew", "Ryan" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10189, 10190, 10347 ],
        "text": "Universal variables leaking through GADT equations\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 10205 ],
        "text": "Avoid overwriting closures while initialising recursive modules\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Hugo", "Heuzard" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 10253, 10373 ],
        "text": "tweak error message for unknown variant constructors\n  or record fields in type-directed disambiguation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Hongbo", "Zhang" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10277, 10383 ],
        "text": "Need to detect ambiguity recursively inside types to\n  guarantee principality (affects only principal mode)\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [
          [ "Thomas", "Refis" ], [ "Leo", "White" ], [ "Kate", "Deplaix" ]
        ]
      },
      {
        "references": [ 10283, 10284 ],
        "text": "Enforce right-to-left evaluation order for Lstaticraise\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Ngoguey42" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10298, 10305 ],
        "text": "Incorrect propagation of type equalities in functor\n  application\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Didier", "Remy" ] ],
        "review": [ [ "Didier", "Remy" ] ]
      },
      {
        "references": [ 10324, 10325 ],
        "text": "Prevent generation of Lsend(Cached, _) in bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Yawar", "Amin" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 10338, 10340 ],
        "text": "Translcore.push_defaults does not respect scoping\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10351 ],
        "text": "Fix DLL loading with binutils 2.36+ on mingw-w64\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10339, 10354, 10387 ],
        "text": "Fix handling of exception-raising specific\n  operations during spilling and liveness analysis.\n  (This bug affects ARM and ARM64.)\n  In passing, refactor Proc.op_is_pure and Mach.operation_can_raise.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Richard", "Bornat" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 10371 ],
        "text": "Stop generating useless `.cds` file when using\n  `-output-complete-exe`.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10376 ],
        "text": "Link runtime libraries correctly on msvc64 in -output-complete-obj\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10380 ],
        "text": "Correct handling of UTF-8 paths in configure on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 10450, 10558 ],
        "text": "keep %apply and %revapply primitives working with abstract\n  types. This breach of backward compatibility was only present in the alpha\n  releases of OCaml 4.13.0 .\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 10454 ],
        "text": "Check row_more in nondep_type_rec.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10468 ],
        "text": "Correctly pretty print local type substitution, e.g. type t := ...,\n  with -dsource\n  ",
        "breaking change": false,
        "authors": [ [ "Matt", "Else" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10461, 10498 ],
        "text": "`caml_send*` helper functions take derived pointers\n  as arguments.  Those must be declared with type Addr instead of Val.\n  Moreover, poll point insertion must be disabled for `caml_send*`,\n  otherwise the derived pointer is live across a poll point.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Sadiq", "Jaffer" ] ]
      },
      {
        "references": [ 10511 ],
        "text": "Cygwin ports now correctly configure when flexdll is not available.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10550, 10551 ],
        "text": "fix pretty-print of gadt-pattern-with-type-vars\n  ",
        "breaking change": false,
        "authors": [ [ "Chet", "Murthy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10584, 10856 ],
        "text": "Standard Library documentation build no longer fails if\n  optional libraries have been disabled.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [
          [ "Yuri", "Victorovich", "review", "by", "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 10593 ],
        "text": "Fix untyping of patterns without named existential quantifiers. This\n  bug was only present in the beta version of OCaml 4.13.0.\n  ",
        "breaking change": false,
        "authors": [ [ "Ulysse", "Gérard" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10603, 10611 ],
        "text": "Fix if condition marked as inconstant in flambda\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ], [ "Pierre", "Chambart" ] ],
        "report": [ [ "Marcello", "Seri" ] ]
      }
    ]
  },
  "OCaml 4.12, maintenance version": {
    " Bug fixes:": [
      {
        "references": [ 10442, 10446 ],
        "text": "Fix regression in the toplevel to #directory caused by\n  corrections and improvements to the Load_path in #9611. #directory now\n  adds the path to the start of the load path again (so files in the newly\n  added directory take priority).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Vasile", "Rotaru" ] ],
        "review": [
          [ "Florian", "Angeletti" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 10478 ],
        "text": "Fix segfault under Windows due to a mistaken initialization of thread\n  ID when a thread starts.\n  ",
        "breaking change": false,
        "authors": [
          [ "David", "Allsopp" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10626, 10628 ],
        "text": "Wrong reloading of the x86-64 instruction for\n  integer multiplication by a constant, causing the assembler to\n  reject the ocamlopt-generated code.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Dave", "Aitken" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      }
    ]
  },
  "OCaml 4.12.0 (24 February 2021)": {
    " Supported platforms (highlights):": [
      {
        "references": [ 9699 ],
        "text": "add support for iOS and macOS on ARM 64 bits\n  ",
        "breaking change": false,
        "authors": [ [ "Eduardo", "Rafael" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Anil", "Madhavapeddy" ]
        ],
        "tests": [ [ "Michael", "Schmidt" ] ]
      }
    ],
    " Standard library (highlights):": [
      {
        "references": [ 9797 ],
        "text": "Add Sys.mkdir and Sys.rmdir.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9765 ],
        "text": "add init functions to Bigarray.\n  ",
        "breaking change": true,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9668 ],
        "text": "List.equal, List.compare\n  (This could break code using \"open List\" by shadowing\n   Stdlib.{equal,compare}.)\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Daniel", "Bünzli" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 9066 ],
        "text": "a new Either module with\n  type 'a Either.t = Left of 'a | Right of 'b\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Thomas", "Refis" ],
          [ "Jeremy", "Yallop" ]
        ]
      },
      {
        "references": [ 9066 ],
        "text": "List.partition_map :\n    ('a -> ('b, 'c) Either.t) -> 'a list -> 'b list * 'c list\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 9865 ],
        "text": "add Format.pp_print_seq\n  ",
        "breaking change": false,
        "authors": [ [ "Raphaël", "Proust" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Compiler user-interface and warnings (highlights):": [
      {
        "references": [ 9657 ],
        "text": "Warnings can now be referred to by their mnemonic name. The names are\n  displayed using `-warn-help` and can be utilized anywhere where a warning list\n  specification is expected.\n      ocamlc -w +fragile-match\n      ...[@@ocaml.warning \"-fragile-match\"]\n  Note that only a single warning name at a time is supported for now:\n  \"-w +foo-bar\" does not work, you must use \"-w +foo -w -bar\".\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 8939 ],
        "text": "Command-line option to save Linear IR before emit.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Sébastien", "Hinderer" ],
          [ "Frédéric", "Bour" ]
        ]
      },
      {
        "references": [ 9003 ],
        "text": "Start compilation from Emit when the input file is in Linear IR format.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Jérémie", "Dimino" ],
          [ "Gabriel", "Scherer" ],
          [ "Frédéric", "Bour" ]
        ]
      }
    ],
    " Language features (highlights):": [
      {
        "references": [ 9500, 9727, 9866, 9870, 9873 ],
        "text": "Injectivity annotations\n  One can now mark type parameters as injective, which is useful for\n  abstract types:\n    module Vec : sig type !'a t end = struct type 'a t = 'a array end\n  On non-abstract types, this can be used to check the injectivity of\n  parameters. Since all parameters of record and sum types are by definition\n  injective, this only makes sense for type abbreviations:\n    type !'a t = 'a list\n  Note that this change required making the regularity check stricter.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Leo", "White" ] ]
      }
    ],
    " Runtime system (highlights):": [
      {
        "references": [ 9534, 9947 ],
        "text": "Introduce a naked pointers checker mode to the runtime\n  (configure option --enable-naked-pointers-checker).  Alarms are printed\n  when the garbage collector finds out-of-heap pointers that could\n  cause a crash in no-naked-pointers mode.\n  ",
        "breaking change": false,
        "authors": [
          [ "Enguerrand", "Decorne" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Xavier", "Leroy" ],
          [ "Stephen", "Dolan" ],
          [ "David", "Allsopp" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1128, 7503, 9036, 9722, 10069 ],
        "text": "EINTR-based signal handling.\n  When a signal arrives, avoid running its OCaml handler in the middle\n  of a blocking section. Instead, allow control to return quickly to\n  a polling point where the signal handler can safely run, ensuring that\n  I/O locks are not held while it runs. A polling point was removed from\n  caml_leave_blocking_section, and one added to caml_raise.\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Goswin", "von", "Brederlow" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 5154, 9569, 9734 ],
        "text": "Add `Val_none`, `Some_val`, `Is_none`, `Is_some`,\n  `caml_alloc_some`, and `Tag_some`. As these macros are sometimes defined by\n  authors of C bindings, this change may cause warnings/errors in case of\n  redefinition.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9674 ],
        "text": "Memprof: guarantee that an allocation callback is always run\n  in the same thread the allocation takes place\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10025 ],
        "text": "Track custom blocks (e.g. Bigarray) with Memprof\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ],
          [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 9619 ],
        "text": "Change representation of function closures so that code pointers\n  can be easily distinguished from environment variables\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9654 ],
        "text": "More efficient management of code fragments.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Jacques-Henri", "Jourdan" ],
          [ "Damien", "Doligez" ],
          [ "Stephen", "Dolan" ]
        ]
      }
    ],
    " Other libraries (highlights):": [
      {
        "references": [ 9573 ],
        "text": "reimplement Unix.create_process and related functions without\n  Unix.fork, for better efficiency and compatibility with threads.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 9575 ],
        "text": "Add Unix.is_inet6_addr\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9930 ],
        "text": "new module Semaphore in the thread library, implementing\n  counting semaphores and binary semaphores\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Damien", "Doligez" ] ],
        "suggestions": [ [ "Stephen", "Dolan" ], [ "Craig", "Ferguson" ] ]
      },
      {
        "references": [ 9206, 9419 ],
        "text": "update documentation of the threads library;\n  deprecate Thread.kill, Thread.wait_read, Thread.wait_write,\n  and the whole ThreadUnix module.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Manual and documentation (highlights):": [
      {
        "references": [ 9755 ],
        "text": "Manual: post-processing the html generated by ocamldoc and\n   hevea. Improvements on design and navigation, including a mobile\n   version, and a quick-search functionality for the API.\n   ",
        "breaking change": false,
        "authors": [ [ "San", "Vũ", "Ngọc" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9468 ],
        "text": "HACKING.adoc: using dune to get merlin support\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9684 ],
        "text": "document in address_class.h the runtime value model in\n  naked-pointers and no-naked-pointers mode\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Internal/compiler-libs changes (highlights):": [
      {
        "references": [ 9464, 9493, 9520, 9563, 9599, 9608, 9647 ],
        "text": "refactor\n  the pattern-matching compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9696 ],
        "text": "ocamltest now shows its log when a test fails. In addition, the log\n  contains the output of executed programs.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Sébastien", "Hinderer" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Build system (highlights):": [
      {
        "references": [ 9824, 9837 ],
        "text": "Honour the CFLAGS and CPPFLAGS variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10063 ],
        "text": "(Re-)enable building on illumos (SmartOS, OmniOS, ...) and\n  Oracle Solaris; x86_64/GCC and 64-bit SPARC/Sun PRO C compilers.\n  (partially revert #2024).\n  ",
        "breaking change": false,
        "authors": [ [ "Tõivo", "Leedjärv" ], [ "Konstantin", "Romanov" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ]
        ]
      }
    ],
    " Language features:": [
      {
        "references": [ 1655 ],
        "text": "pattern aliases do not ignore type constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9429 ],
        "text": "Add unary operators containing `#` to the parser for use in ppx\n  rewriters\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 9697 ],
        "text": "Remove the Is_in_code_area macro and the registration of DLL code\n  areas in the page table, subsumed by the new code fragment management API\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 9756 ],
        "text": "garbage collector colors change\n  removes the gray color from the major gc\n  ",
        "breaking change": false,
        "authors": [ [ "Sadiq", "Jaffer" ], [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Damien", "Doligez" ],
          [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 9513 ],
        "text": "Selectively initialise blocks in `Obj.new_block`. Reject `Custom_tag`\n  objects and zero-length `String_tag` objects.\n  ",
        "breaking change": true,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 9564 ],
        "text": "Add a macro to construct out-of-heap block header.\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9951 ],
        "text": "Ensure that the mark stack push optimisation handles naked pointers\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "reported": [ [ "Enguerrand", "Decorne" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9678 ],
        "text": "Reimplement `Obj.reachable_words` using a hash table to\n  detect sharing, instead of temporary in-place modifications.  This\n  is a prerequisite for Multicore OCaml.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Jacques-Henri", "Jourdan" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 1795, 9543 ],
        "text": "modernize signal handling on Linux i386, PowerPC, and s390x,\n  adding support for Musl ppc64le along the way.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9648, 9689 ],
        "text": "Update the generic hash function to take advantage\n  of the new representation for function closures\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9649 ],
        "text": "Update the marshaler (output_value) to take advantage\n  of the new representation for function closures\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 10050 ],
        "text": "update {PUSH,}OFFSETCLOSURE* bytecode instructions to match new\n  representation for closures\n  ",
        "breaking change": false,
        "authors": [ [ "Nathanaëlle", "Courant" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9728 ],
        "text": "Take advantage of the new closure representation to simplify the\n  compaction algorithm and remove its dependence on the page table\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 2195 ],
        "text": "Improve error message in bytecode stack trace printing and load\n  debug information during bytecode startup if OCAMLRUNPARAM=b=2.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9466 ],
        "text": "Memprof: optimize random samples generation.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9628 ],
        "text": "Memprof: disable sampling when memprof is suspended.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 10056 ],
        "text": "Memprof: ensure young_trigger is within the bounds of the minor\n  heap in caml_memprof_renew_minor_sample (regression from #8684)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ], [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 9506 ],
        "text": "Remove support for FreeBSD prior to 4.0R, that required explicit\n  floating-point initialization to behave like IEEE standard\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8807, 9503 ],
        "text": "Use different symbols for do_local_roots on bytecode and native\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9670 ],
        "text": "Report full major collections in Gc stats.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9675 ],
        "text": "Remove the caml_static_{alloc,free,resize} primitives, now unused.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9710 ],
        "text": "Drop \"support\" for an hypothetical JIT for OCaml bytecode\n   which has never existed.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9742, 9989 ],
        "text": "Ephemerons are now compatible with infix pointers occurring\n   when using mutually recursive functions.\n   ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 9888, 9890 ],
        "text": "Fixes a bug in the `riscv` backend where register t0 was not\n  saved/restored when performing a GC. This could potentially lead to a\n  segfault.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9907 ],
        "text": "Fix native toplevel on native Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9909 ],
        "text": "Remove caml_code_area_start and caml_code_area_end globals (no longer\n  needed as the pagetable heads towards retirement).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9949 ],
        "text": "Clarify documentation of GC message 0x1 and make sure it is\n  displayed every time a major cycle is forcibly finished.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10062 ],
        "text": "set ARCH_INT64_PRINTF_FORMAT correctly for both modes of mingw-w64\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 9551 ],
        "text": "ocamlc no longer loads DLLs at link time to check that\n  external functions referenced from OCaml code are defined.\n  Instead, .so/.dll files are parsed directly by pure OCaml code.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9620 ],
        "text": "Limit the number of parameters for an uncurried or untupled\n   function.  Functions with more parameters than that are left\n   partially curried or tupled.\n   ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9752 ],
        "text": "Revised handling of calling conventions for external C functions.\n   Provide a more precise description of the types of unboxed arguments,\n   so that the ARM64 iOS/macOS calling conventions can be honored.\n   ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Eduardo", "Rafael" ] ]
      },
      {
        "references": [ 9838 ],
        "text": "Ensure that Cmm immediates are generated as Cconst_int where\n  possible, improving instruction selection.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9864 ],
        "text": "Revised recognition of immediate arguments to integer operations.\n  Fixes several issues that could have led to producing assembly code\n  that is rejected by the assembler.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9969, 9981 ],
        "text": "Added mergeable flag to ELF sections containing mergeable\n  constants.  Fixes compatibility with the integrated assembler in clang 11.0.0.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacob", "Young" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 9781 ],
        "text": "add injectivity annotations to parameterized abstract types\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9554 ],
        "text": "add primitive __FUNCTION__ that returns the name of the current method\n  or function, including any enclosing module or class.\n  ",
        "breaking change": true,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Stephen", "Dolan" ]
        ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9075 ],
        "text": "define to_rev_seq in Set and Map modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Briais" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 9561 ],
        "text": "Unbox Unix.gettimeofday and Unix.time\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9570 ],
        "text": "Provide an Atomic module with a trivial purely-sequential\n  implementation, to help write code that is compatible with Multicore\n  OCaml.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10035 ],
        "text": "Make sure that flambda respects atomicity in the Atomic module.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9571 ],
        "text": "Make at_exit and Printexc.register_printer thread-safe.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9587 ],
        "text": "Arg: new Rest_all spec to get all rest arguments in a list\n  (this is similar to Rest, but makes it possible to detect when there\n   are no arguments (an empty list) after the rest marker)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9655 ],
        "text": "Obj: introduce type raw_data and functions raw_field, set_raw_field\n   to manipulate out-of-heap pointers in no-naked-pointer mode,\n   and more generally all other data that is not a well-formed OCaml value\n   ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9663 ],
        "text": "Extend Printexc API for raw backtrace entries.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 9763 ],
        "text": "Add function Hashtbl.rebuild to convert from old hash table\n  formats (that may have been saved to persistent storage) to the\n  current hash table format.  Remove leftover support for the hash\n  table format and generic hash function that were in use before OCaml 4.00.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 10070 ],
        "text": "Fix Float.Array.blit when source and destination arrays coincide.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 8796 ],
        "text": "On Windows, make Unix.utimes use FILE_FLAG_BACKUP_SEMANTICS flag\n  to allow it to work with directories.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniil", "Baturin" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9593 ],
        "text": "Use new flag for non-elevated symbolic links and test for Developer\n  Mode on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Manuel", "Hornung" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9601 ],
        "text": "Return EPERM for EUNKNOWN -1314 in win32unix (principally affects\n  error handling when Unix.symlink is unavailable)\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9338, 9790 ],
        "text": "Dynlink: make sure *_units () functions report accurate\n  information before the first load.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9757, 9846, 10161 ],
        "text": "check proper ownership when operating over mutexes.\n  Now, unlocking a mutex held by another thread or not locked at all\n  reliably raises a Sys_error exception.  Before, it was undefined\n  behavior, but the documentation did not say so.\n  Likewise, locking a mutex already locked by the current thread\n  reliably raises a Sys_error exception.  Before, it could\n  deadlock or succeed (and do recursive locking), depending on the OS.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "David", "Allsopp" ],
          [ "Stephen", "Dolan" ]
        ]
      },
      {
        "references": [ 9802 ],
        "text": "Ensure signals are handled before Unix.kill returns\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 9869, 10073 ],
        "text": "Add Unix.SO_REUSEPORT\n  ",
        "breaking change": false,
        "amended": [ [ "David", "Allsopp" ] ],
        "authors": [ [ "Yishuai", "Li" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9906, 9914 ],
        "text": "Add Unix._exit as a way to exit the process immediately,\n  skipping any finalization action\n  ",
        "breaking change": false,
        "authors": [ [ "Ivan", "Gotovchits" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9958 ],
        "text": "Raise exception in case of error in Unix.setsid.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9971, 9973 ],
        "text": "Make sure the process can terminate when the last thread\n  calls Thread.exit.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Jacques-Henri", "Jourdan" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 9551 ],
        "text": "ocamlobjinfo is now able to display information on .cmxs shared\n  libraries natively; it no longer requires libbfd to do so\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9299, 9795 ],
        "text": "ocamldep: do not process files during cli parsing. Fixes\n  various broken cli behaviours.\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Debugging and profiling:": [
      {
        "references": [ 9606, 9635, 9637 ],
        "text": "fix 4.10 performance regression in the debugger\n  (behaviors quadratic in the size of the debugged program)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Jacques", "Garrigue" ], [ "Virgile", "Prevosto" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 9948 ],
        "text": "Remove Spacetime.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 10142, 10154 ],
        "text": "improved rendering and latex code for toplevel code examples.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "John", "Whitington" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9745 ],
        "text": "Manual: Standard Library labeled and unlabeled documentation unified\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "David", "Allsopp" ],
          [ "Thomas", "Refis" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 9877 ],
        "text": "manual, warn that multi-index indexing operators should be defined in\n  conjunction of single-index ones.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Hezekiah", "M.", "Carty" ],
          [ "Gabriel", "Scherer" ],
          [ "Marcello", "Seri" ]
        ]
      },
      {
        "references": [ 10233 ],
        "text": "Document `-save-ir-after scheduling` and update `-stop-after` options.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 1931 ],
        "text": "rely on levels to enforce principality in patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9011 ],
        "text": "Do not create .a/.lib files when creating a .cmxa with no modules.\n  macOS ar doesn't support creating empty .a files (#1094) and MSVC doesn't\n  permit .lib files to contain no objects. When linking with a .cmxa containing\n  no modules, it is now not an error for there to be no .a/.lib file.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9560 ],
        "text": "Report partial application warnings on type errors in applications.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "whitequark" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "testcase": [ [ "whitequark" ] ]
      },
      {
        "references": [ 9583 ],
        "text": "when bytecode linking fails due to an unavailable module, the module\n  that requires it is now included in the error message.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 9615 ],
        "text": "Attach package type attributes to core_type.\n  When parsing constraints on a first class module, attributes found after the\n  module type were parsed but ignored. Now they are attached to the\n  corresponding core_type.\n  ",
        "breaking change": false,
        "authors": [ [ "Etienne", "Millon" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 6633, 9673 ],
        "text": "Add hint when a module is used instead of a module type or\n  when a module type is used instead of a module or when a class type is used\n  instead of a class.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Van", "de", "Woestyne" ] ],
        "report": [ [ "whitequark" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9754 ],
        "text": "allow [@tailcall true] (equivalent to [@tailcall]) and\n  [@tailcall false] (warns if on a tailcall)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9751 ],
        "text": "Add warning 68. Pattern-matching depending on mutable state\n  prevents the remaining arguments from being uncurried.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 9783 ],
        "text": "Widen warning 16 (Unerasable optional argument) to more cases.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 10008 ],
        "text": "Improve error message for aliases to the current compilation unit.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 10046 ],
        "text": "Link all DLLs with -static-libgcc on mingw32 to prevent dependency\n  on libgcc_s_sjlj-1.dll with mingw-w64 runtime 8.0.0 (previously this was\n  only needed for dllunix.dll).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Andreas", "Hauptmann" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9634 ],
        "text": "Allow initial and repeated commas in `OCAMLRUNPARAM`.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 8987 ],
        "text": "Make some locations more accurate\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9216 ],
        "text": "add Lambda.duplicate which refreshes bound identifiers\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 9376 ],
        "text": "Remove spurious Ptop_defs from #use\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9604 ],
        "text": "refactoring of the ocamltest codebase.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9498, 9511 ],
        "text": "make the pattern-matching analyzer more robust to\n  or-pattern explosion, by stopping after the first counter-example to\n  exhaustivity\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Alex", "Fedoseev", "through", "Hongbo", "Zhang" ] ],
        "review": [
          [ "Luc", "Maranget" ],
          [ "Thomas", "Refis" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 9514 ],
        "text": "optimize pattern-matching exhaustivity analysis in the single-row case\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Stephen", "DOlan" ] ]
      },
      {
        "references": [ 9442 ],
        "text": "refactor the implementation of the [@tailcall] attribute\n  to allow for a structured attribute payload\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Vladimir", "Keleshev" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 9688 ],
        "text": "Expose the main entrypoint in compilerlibs\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Greta", "Yorsh" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 9715 ],
        "text": "recheck scope escapes after normalising paths\n  ",
        "breaking change": false,
        "authors": [ [ "Matthew", "Ryan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9778 ],
        "text": "Fix printing for bindings where polymorphic type annotations and\n  attributes are present.\n  ",
        "breaking change": false,
        "authors": [ [ "Matthew", "Ryan" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9797, 9849 ],
        "text": "Eliminate the routine use of external commands in ocamltest.\n  ocamltest no longer calls the mkdir, rm and ln external commands (at present,\n  the only external command ocamltest uses is diff).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9801 ],
        "text": "Don't ignore EOL-at-EOF differences in ocamltest.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "much", "input" ] ],
        "thought": [
          [ "Daniel", "Bünzli" ],
          [ "Damien", "Doligez" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9889 ],
        "text": "more caching when printing types with -short-path.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9591 ],
        "text": "fix pprint of polyvariants that start with a core_type, closed,\n   not low ",
        "breaking change": false,
        "authors": [ [ "Chet", "Murthy" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9590 ],
        "text": "fix pprint of extension constructors (and exceptions) that rebind\n   ",
        "breaking change": false,
        "authors": [ [ "Chet", "Murthy" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9963 ],
        "text": "Centralized tracking of frontend's global state\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9631 ],
        "text": "Named text sections for caml_system__code_begin/end symbols\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 9896 ],
        "text": "Share the strings representing scopes, fixing some regression\n  on .cmo/.cma sizes\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Xavier", "Clerc" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 9332, 9518, 9529 ],
        "text": "Cease storing C dependencies in the codebase. C\n  dependencies are generated on-the-fly in development mode. For incremental\n  compilation, the MSVC ports require GCC to be present.\n  ",
        "breaking change": false,
        "YAML-fu": [ [ "Stephen", "Dolan" ] ],
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 7121, 9558 ],
        "text": "Always have the autoconf-discovered ld in PACKLD, with\n  extra flags in new variable PACKLD_FLAGS. For\n  cross-compilation, this means the triplet-prefixed version will always be\n  used.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Adrian", "Nader" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9527 ],
        "text": "stop including configuration when running 'clean' rules\n  to avoid C dependency recomputation.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9804 ],
        "text": "Build C stubs of libraries in otherlibs/ with debug info.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9938, 9939 ],
        "text": "Define __USE_MINGW_ANSI_STDIO=0 for the mingw-w64 ports to\n  prevent their C99-compliant snprintf conflicting with ours.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Michael", "Soegtrop" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9895, 9523 ],
        "text": "Avoid conflict with C++20 by not installing VERSION to the OCaml\n  Standard Library directory.\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 10044 ],
        "text": "Always report the detected ARCH, MODEL and SYSTEM, even for bytecode-\n  only builds (fixes a \"configuration regression\" from 4.08 for the Windows\n  builds)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 10071 ],
        "text": "Fix bug in tests/misc/weaklifetime.ml that was reported in #10055\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 7538, 9669 ],
        "text": "Check for misplaced attributes on module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Thomas", "Leonard" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7813, 9955 ],
        "text": "make sure the major GC cycle doesn't get stuck in Idle state\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Anders", "Fugmann" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 7902, 9556 ],
        "text": "Type-checker infers recursive type, even though -rectypes is\n  off.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Francois", "Pottier" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 8746 ],
        "text": "Hashtbl: Restore ongoing traversal status after filter_map_inplace\n  ",
        "breaking change": false,
        "authors": [ [ "Mehdi", "Bouaziz" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 8747, 9709 ],
        "text": "incorrect principality warning on functional updates of records\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8907, 9878 ],
        "text": "`Typemod.normalize_signature` uses wrong environment\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 9421, 9427 ],
        "text": "fix printing of (::) in ocamldoc\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Yawar", "Amin" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9440 ],
        "text": "for a type extension constructor with parameterised arguments,\n  REPL displayed <poly> for each as opposed to the concrete values used.\n  ",
        "breaking change": false,
        "authors": [ [ "Christian", "Quinn" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9433 ],
        "text": "Fix package constraints for module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9469 ],
        "text": "Better backtraces for lazy values\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9521, 9522 ],
        "text": "correctly fail when comparing functions\n  with Closure and Infix tags.\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ],
          [ "Xavier", "Leroy" ]
        ],
        "report": [
          [ "Twitter", "user", "@st_toHKR", "through", "Jun", "Furuse" ]
        ]
      },
      {
        "references": [ 9611 ],
        "text": "maintain order of load path entries in various situations: when passing\n  them to system linker, ppx contexts, etc.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Jérémie", "Dimino" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9633 ],
        "text": "ocamltest: fix a bug when certain variables set in test scripts would\n  be ignored (eg `ocamlrunparam`).\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9681, 9690, 9693 ],
        "text": "small runtime changes\n  for the new closure representation (#9619)\n  ",
        "breaking change": false,
        "authors": [
          [ "Xavier", "Leroy" ],
          [ "Sadiq", "Jaffer" ],
          [ "Gabriel", "Scherer" ]
        ],
        "review": [ [ "Xavier", "Leroy" ], [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 9739, 9747 ],
        "text": "Avoid calling type variables, types that are not variables in\n  recursive occurrence error messages\n  (for instance, \"Type variable int occurs inside int list\")\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 9759, 9767 ],
        "text": "Spurious GADT ambiguity without -principal\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9799, 9803 ],
        "text": "make pat_env point to the correct environment\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Alex", "Fedoseev" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9825, 9830 ],
        "text": "the C global variable caml_fl_merge and the C function\n  caml_spacetime_my_profinfo (bytecode version) were declared and\n  defined with different types.  This is undefined behavior and\n  cancause link-time errors with link-time optimization (LTO).\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Richard", "Jones" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9753 ],
        "text": "fix build for Android\n  ",
        "breaking change": false,
        "authors": [ [ "Eduardo", "Rafael" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9848, 9855 ],
        "text": "Fix double free of bytecode in toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Sampsa", "Kiiskinen" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9858, 9861 ],
        "text": "Compiler fails with Ctype.Nondep_cannot_erase exception\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Philippe", "Veber" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9860 ],
        "text": "wrong range constraint for subtract immediate on zSystems / s390x\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9868, 9872, 9892 ],
        "text": "bugs in {in,out}_channel_length and seek_in\n  for files opened in text mode under Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 9925 ],
        "text": "Correct passing -fdebug-prefix-map to flexlink on Cygwin by prefixing\n  it with -link.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9927 ],
        "text": "Restore Cygwin64 support.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9940 ],
        "text": "Fix unboxing of allocated constants from other compilation units\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9991 ],
        "text": "Fix reproducibility for `-no-alias-deps`\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9998 ],
        "text": "Use Sys.opaque_identity in CamlinternalLazy.force\n  This removes extra warning 59 messages when compiling afl-instrumented\n  code with flambda -O3.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Louis", "Gesbert" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 9999 ],
        "text": "fix -dsource printing of the pattern (`A as x | (`B as x)).\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Anton", "Bachin" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9970, 10010 ],
        "text": "fix the declaration scope of extensible-datatype constructors.\n  A regression that dates back to 4.08 makes extensible-datatype constructors\n  with inline records very fragile, for example:\n    type 'a t += X of {x : 'a}\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 10048 ],
        "text": "Fix bug with generalized local opens.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 10106, 10112 ],
        "text": "some expected-type explanations where forgotten\n  after some let-bindings\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Daniil", "Baturin" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Florian", "Angeletti" ] ]
      }
    ]
  },
  "OCaml 4.11 maintenance branch": {
    " Bug fixes:": [
      {
        "references": [ 9096, 10096 ],
        "text": "fix a 4.11.0 performance regression in classes/objects\n  declared within a function\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Sacha", "Ayoun" ] ],
        "review": [ [ "Leo", "White" ] ]
      }
    ]
  },
  "OCaml 4.11.1 (31 August 2020)": {
    " Bug fixes:": [
      {
        "references": [ 9856, 9857 ],
        "text": "Prevent polymorphic type annotations from generalizing\n  weak polymorphic variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9859, 9862 ],
        "text": "Remove an erroneous assertion when inferred function types\n  appear in the right hand side of an explicit :> coercion\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      }
    ]
  },
  "OCaml 4.11.0 (19 August 2020)": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Runtime system:": [
      {
        "references": [ 9096 ],
        "text": "Print function names in backtraces.\n  Old output:\n  > Called from file \"foo.ml\", line 16, characters 42-53\n  New output:\n  > Called from Foo.bar in file \"foo.ml\", line 16, characters 42-53\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Leo", "White" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9082 ],
        "text": "The instrumented runtime now records logs in the CTF format.\n  A new API is available in the runtime to collect runtime statistics,\n  replacing the previous instrumented runtime macros.\n  Gc.eventlog_pause and Gc.eventlog_resume were added to allow user to control\n  instrumentation in a running program.\n  See the manual for more information on how to use this instrumentation mode.\n  ",
        "breaking change": false,
        "authors": [ [ "Enguerrand", "Decorne" ], [ "Stephen", "Dolan" ] ],
        "help": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Shakthi", "Kannan" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Damien", "Doligez" ],
          [ "Leo", "White" ],
          [ "Daniel", "Bünzli" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9230, 9362 ],
        "text": "Memprof support for native allocations.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ], [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8920, 9238, 9239, 9254, 9458 ],
        "text": "New API for statistical memory profiling\n  in Memprof.Gc. The new version does no longer use ephemerons and allows\n  registering callbacks for promotion and deallocation of memory\n  blocks.\n  The new API no longer gives the block tags to the allocation callback.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9353 ],
        "text": "Reimplement `output_value` and the `Marshal.to_*` functions\n  using a hash table to detect sharing, instead of temporary in-place\n  modifications.  This is a prerequisite for Multicore OCaml.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Basile", "Clément" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 9119 ],
        "text": "Make [caml_stat_resize_noexc] compatible with the [realloc]\n  API when the old block is NULL.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9233 ],
        "text": "Restore the bytecode stack after an allocation.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 9249 ],
        "text": "restore definition of ARCH_ALIGN_INT64 in m.h if the architecture\n  requires 64-bit integers to be double-word aligned (autoconf regression)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9259 ],
        "text": "Made `Ephemeron.blit_key` and `Weak.blit` faster. They are now\n  linear in the size of the range being copied instead of depending on the\n  total sizes of the ephemerons or weak arrays involved.\n  ",
        "breaking change": false,
        "advice": [ [ "Leo", "White" ] ],
        "authors": [ [ "Arseniy", "Alekseyev" ] ],
        "review": [ [ "François", "Bobot" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9279 ],
        "text": "Memprof optimisation.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 9280 ],
        "text": "Micro-optimise allocations on amd64 to save a register.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9426 ],
        "text": "build the Mingw ports with higher levels of GCC optimization\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9483 ],
        "text": "Remove accidental inclusion of <stdio.h> in <caml/misc.h>\n  The only release with the inclusion of stdio.h has been 4.10.0\n  ",
        "breaking change": true,
        "authors": [ [ "Christopher", "Zimmermann" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9282 ],
        "text": "Make Cconst_symbol have typ_int to fix no-naked-pointers mode.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Xavier", "Leroy" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 9497 ],
        "text": "Harmonise behaviour between bytecode and native code for\n  recursive module initialisation in one particular case (fixes #9494).\n  ",
        "breaking change": false,
        "authors": [
          [ "Mark", "Shinwell" ],
          [ "David", "Allsopp" ],
          [ "Vincent", "Laviron" ],
          [ "Xavier", "Leroy" ],
          [ "Geoff", "Reedy" ]
        ],
        "bug report": [ [ "Arlen", "Cox" ] ]
      },
      {
        "references": [ 8791 ],
        "text": "use a variable-length encoding when marshalling bigarray dimensions,\n  avoiding overflow.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ], [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 9441 ],
        "text": "Add RISC-V RV64G native-code backend.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9316, 9443, 9463, 9782 ],
        "text": "Use typing information from Clambda\n  for mutable Cmm variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "bug report": [ [ "Richard", "Jones" ] ],
        "review": [
          [ "Vincent", "Laviron" ],
          [ "Guillaume", "Bury" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 8637, 8805, 9247, 9296 ],
        "text": "Record debug info for each allocation.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Jacques-Henri", "Jourdan" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "KC", "Sivaramakrishnan" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 9193 ],
        "text": "Make tuple matching optimisation apply to Lswitch and Lstringswitch.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9392 ],
        "text": "Visit registers at most once in Coloring.iter_preferred.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9412 ],
        "text": "Keep Sys.opaque_identity in Cmm and Mach\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9549, 9557 ],
        "text": "Make -flarge-toc the default for PowerPC and introduce\n  -fsmall-toc to enable the previous behaviour.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Nathaniel", "Wesley", "Filardo" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Language features": [
      {
        "references": [ 8820, 9166 ],
        "text": "quoted extensions: {%foo|...|} is lighter syntax for\n  [%foo {||}], and {%foo bar|...|bar} for [%foo {bar|...|bar}].\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Radanne" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ],
          [ "Pieter", "Goetschalckx" ]
        ],
        "request": [ [ "Bikal", "Lem" ] ]
      },
      {
        "references": [ 7364, 2188, 9592, 9609 ],
        "text": "improvement of the unboxability check for types\n  with a single constructor. Mutually-recursive type declarations can\n  now contain unboxed types. This is based on the paper\n    https://arxiv.org/abs/1811.02300\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Rodolphe", "Lepigre" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Damien", "Doligez" ],
          [ "Frédéric", "Bour" ]
        ]
      },
      {
        "references": [ 1154, 1706 ],
        "text": "spellchecker hints and type-directed disambiguation\n  for extensible sum type constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabriel", "Scherer" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 6673, 1132, 9617 ],
        "text": "Relax the handling of explicit polymorphic types.\n  This improves error messages in some polymorphic recursive definition,\n  and requires less polymorphic annotations in some cases of\n  mutually-recursive definitions involving polymorphic recursion.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9232 ],
        "text": "allow any class type paths in #-types,\n  For instance, \"val f: #F(X).t -> unit\" is now allowed.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "Leo", "White" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 9077 ],
        "text": "Add Seq.cons and Seq.append\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Briais" ] ],
        "review": [ [ "Yawar", "Amin" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9235 ],
        "text": "Add Array.exists2 and Array.for_all2\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "review": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 9226 ],
        "text": "Add Seq.unfold.\n   ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Hezekiah", "M.", "Carty" ],
          [ "Gabriel", "Scherer" ],
          [ "Gabriel", "Radanne" ]
        ]
      },
      {
        "references": [ 9059 ],
        "text": "Added List.filteri function, same as List.filter but\n  with the index of the element.\n  ",
        "breaking change": false,
        "authors": [ [ "Léo", "Andrès" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 8894 ],
        "text": "Added List.fold_left_map function combining map and fold.\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "@cfcs" ] ]
      },
      {
        "references": [ 9365 ],
        "text": "Set.filter_map and Map.filter_map\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9248 ],
        "text": "Add Printexc.default_uncaught_exception_handler\n  ",
        "breaking change": false,
        "authors": [ [ "Raphael", "Sousa", "Santos" ] ],
        "review": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 8771 ],
        "text": "Lexing: add set_position and set_filename to change (fake)\n   the initial tracking position of the lexbuf.\n   ",
        "breaking change": false,
        "authors": [ [ "Konstantin", "Romanov" ], [ "Miguel", "Lumapat" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Sébastien", "Hinderer" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 9237 ],
        "text": "`Format.pp_update_geometry ppf (fun geo -> {geo with ...})`\n  for formatter geometry changes that are robust to new geometry fields.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Josh", "Berdine" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7110 ],
        "text": "Added Printf.ikbprintf and Printf.ibprintf\n  ",
        "breaking change": false,
        "authors": [ [ "Muskan", "Garg" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9266 ],
        "text": "Install pretty-printer for the exception Fun.Finally_raised.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 9106 ],
        "text": "Register printer for Unix_error in win32unix, as in unix.\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9183 ],
        "text": "Preserve exception backtrace of exceptions raised by top-level phrases\n  of dynlinked modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Clerc" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9320, 9550 ],
        "text": "under Windows, make sure that the Unix.exec* functions\n  properly quote their argument lists.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "André", "Maroneze" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9490, 9505 ],
        "text": "ensure proper rounding of file times returned by\n  Unix.stat, Unix.lstat, Unix.fstat.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Guillaume", "Melquiond" ] ],
        "report": [ [ "David", "Brown" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 9283, 9455, 9457 ],
        "text": "add a new toplevel directive `#use_output \"<command>\"` to\n  run a command and evaluate its output.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 6969 ],
        "text": "Argument -nocwd added to ocamldep\n  ",
        "breaking change": false,
        "authors": [ [ "Muskan", "Garg" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 8676, 9594 ],
        "text": "turn debugger off in programs launched by the program\n  being debugged\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Michael", "Soegtrop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9057 ],
        "text": "aid debugging the debugger by preserving backtraces of unhandled\n  exceptions.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9276 ],
        "text": "objinfo: cm[x]a print extra C options, objects and dlls in\n  the order given on the cli. Follow up to #4949.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 463 ],
        "text": "objinfo: better errors on object files coming\n  from a different (older or newer), incompatible compiler version.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9197 ],
        "text": "remove compatibility logic from #244 that was designed to\n  synchronize toplevel printing margins with Format.std_formatter,\n  but also resulted in unpredictable/fragile changes to formatter\n  margins.\n  Setting the margins on the desired formatters should now work.\n  typically on `Format.std_formatter`.\n  Note that there currently is no robust way to do this from the\n  toplevel, as applications may redirect toplevel printing. In\n  a compiler/toplevel driver, one should instead access\n  `Location.formatter_for_warnings`; it is not currently exposed\n  to the toplevel.\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 9207, 9210 ],
        "text": "fix ocamlyacc to work correctly with up to 255 entry\n  points to the grammar.\n  ",
        "breaking change": false,
        "authors": [ [ "Andreas", "Abel" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9482, 9492 ],
        "text": "use diversions (@file) to work around OS limitations\n  on length of Sys.command argument.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 9141 ],
        "text": "beginning of the ocamltest reference manual\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9228 ],
        "text": "Various Map documentation improvements: add missing key argument in\n  the 'merge' example; clarify the relationship between input and output keys\n  in 'union'; note that find and find_opt return values, not bindings.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9255, 9300 ],
        "text": "reference chapter, split the expression grammar\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Harrison", "Ainsworth" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9325 ],
        "text": "documented base case for `List.for_all` and `List.exists`\n  ",
        "breaking change": false,
        "authors": [ [ "Glenn", "Slotte" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9410, 9422 ],
        "text": "replaced naive fibonacci example with gcd\n  ",
        "breaking change": false,
        "authors": [ [ "Anukriti", "Kumar" ] ],
        "review": [
          [ "San", "Vu", "Ngoc" ],
          [ "Florian", "Angeletti" ],
          [ "Léo", "Andrès" ]
        ]
      },
      {
        "references": [ 9541 ],
        "text": "Add a documentation page for the instrumented runtime;\n  additional changes to option names in the instrumented runtime.\n  ",
        "breaking change": false,
        "authors": [ [ "Enguerrand", "Decorne" ] ],
        "review": [
          [ "Anil", "Madhavapeddy" ],
          [ "Gabriel", "Scherer" ],
          [ "Daniel", "Bünzli" ],
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 9610 ],
        "text": "manual, C FFI: naked pointers are deprecated, detail the\n  forward-compatible options for handling out-of-heap pointers.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 9618 ],
        "text": "clarify the Format documentation on the margin and maximum indentation\n  limit\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Josh", "Berdine" ] ]
      },
      {
        "references": [ 8644 ],
        "text": "fix formatting comment about @raise in stdlib's mli files\n  ",
        "breaking change": false,
        "authors": [ [ "Élie", "Brami" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9327, 9401 ],
        "text": "manual, fix infix attribute examples\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "David", "Cadé" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9403 ],
        "text": "added a description for warning 67 and added a \".\" at the end of\n  warnings for consistency.\n  ",
        "breaking change": false,
        "authors": [ [ "Muskan", "Garg" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7708, 9580 ],
        "text": "Ensure Stdlib documentation index refers to Stdlib.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 9712 ],
        "text": "Update the version format to allow \"~\".\n  The new format is \"major.minor[.patchlevel][(+|~)additional-info]\",\n  for instance \"4.12.0~beta1+flambda\".\n  This is a documentation-only change for the 4.11 branch, the new format\n  will be used starting with the 4.12 branch.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1664 ],
        "text": "make -output-complete-obj link the runtime native c libraries when\n  building shared libraries like `-output-obj`.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9349 ],
        "text": "Support [@inlined hint] attribute.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 2141 ],
        "text": "generate .annot files from cmt data; deprecate -annot.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 7678, 8631 ],
        "text": "ocamlc -c and ocamlopt -c pass same switches to the C\n  compiler when compiling .c files (in particular, this means ocamlopt\n  passes -fPIC on systems requiring it for shared library support).\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9074 ],
        "text": "reworded error message for non-regular structural types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Chas", "Emerick" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 8938 ],
        "text": "Extend ocamlopt option \"-stop-after\" to handle \"scheduling\" argument.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Florian", "Angeletti" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 8945, 9086 ],
        "text": "Fix toplevel show directive to work with constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Parry" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ],
          [ "Alain", "Frisch" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 9107 ],
        "text": "improved error message for exceptions in module signature errors\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9208 ],
        "text": "-dno-locations option to hide source locations (and debug events)\n  from intermediate-representation dumps (-dfoo).\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 9393 ],
        "text": "Improve recursive module usage warnings\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9486 ],
        "text": "Fix configuration for the Haiku operating system\n  ",
        "breaking change": false,
        "authors": [ [ "Sylvain", "Kerjean" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 9021 ],
        "text": "expose compiler Longident.t parsers\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9452 ],
        "text": "Add locations to docstring attributes\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 463 ],
        "text": "a new Misc.Magic_number module for user-friendly parsing\n  and validation of OCaml magic numbers.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1176 ],
        "text": "encourage better compatibility with older Microsoft C compilers by\n  using GCC's -Wdeclaration-after-statement when available. Introduce\n  Caml_inline to stop abuse of the inline keyword on MSVC and to help ensure\n  that only static inline is used in the codebase (erroneous instance in\n  runtime/win32.c removed).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Oliver", "Andrieu" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8934 ],
        "text": "Stop relying on location to track usage\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 8970 ],
        "text": "separate value patterns (matching on values) from computation patterns\n  (matching on the effects of a copmutation) in the typedtree.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 9060 ],
        "text": "ensure that Misc.protect_refs preserves backtraces\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ], [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 9078 ],
        "text": "make all compilerlibs/ available to ocamltest.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9079 ],
        "text": "typecore/parmatch: refactor ppat_of_type and refine\n  the use of backtracking on wildcard patterns\n  ",
        "breaking change": false,
        "authors": [
          [ "Florian", "Angeletti" ],
          [ "Jacques", "Garrigue" ],
          [ "Gabriel", "Scherer" ]
        ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9081 ],
        "text": "typedtree, make the pat_env field of pattern data immutable\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9178, 9182, 9196 ],
        "text": "refactor label-disambiguation (Typecore.NameChoice)\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Thomas", "Refis" ],
          [ "Florian", "Angeletti" ],
          [ "Jacques", "Garrigue" ],
          [ "Author group review" ]
        ]
      },
      {
        "references": [ 9321, 9322, 9359, 9361, 9417, 9447 ],
        "text": "refactor the\n  pattern-matching compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9211, 9215, 9222 ],
        "text": "fix Makefile dependencies in\n  compilerlibs, dynlink, ocamltest.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9275 ],
        "text": "Short circuit simple inclusion checks\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9305 ],
        "text": "Avoid polymorphic compare in Ident\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7927 ],
        "text": "refactor val_env met_env par_env to class_env\n  ",
        "breaking change": false,
        "authors": [ [ "Muskan", "Garg" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 2324, 9613 ],
        "text": "Replace the caml_int_compare and caml_float_compare\n  (C functions) with primitives.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 9246 ],
        "text": "Avoid rechecking functor applications\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9402 ],
        "text": "Remove `sudo:false` from .travis.yml\n  ",
        "breaking change": false,
        "authors": [ [ "Hikaru", "Yoshimura" ] ]
      },
      {
        "references": [ 9411 ],
        "text": "forbid optional arguments reordering with -nolabels\n  ",
        "breaking change": true,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9414 ],
        "text": "testsuite, ocamltest: keep test artifacts only on failure.\n  Use KEEP_TEST_DIR_ON_SUCCESS=1 to keep all artifacts.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 9250 ],
        "text": "Add --disable-ocamltest to configure and disable building for\n  non-development builds.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 7520, 9547 ],
        "text": "Odd behaviour of refutation cases with polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "reviews": [ [ "Gabriel", "Scherer" ], [ "Leo" ] ]
      },
      {
        "references": [ 7562, 9456 ],
        "text": "ocamlopt-generated code crashed on Alpine Linux on\n  ppc64le, arm, and i386.  Fixed by turning PIE off for musl-based Linux\n  systems except amd64 (x86_64) and s390x.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7683, 1499 ],
        "text": "Fixes one case where the evaluation order in native-code\n  may not match the one in bytecode.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7696, 6608 ],
        "text": "Record expression deleted when all fields specified\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7741, 9645 ],
        "text": "Failure to report escaping type variable\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7817, 9546 ],
        "text": "Unsound inclusion check for polymorphic variant\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mikhail", "Mandrykin" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7897, 9537 ],
        "text": "Fix warning 38 for rebound extension constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7917, 9426 ],
        "text": "Use GCC option -fexcess-precision=standard when available,\n  avoiding a problem with x87 excess precision in Float.round.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9011 ],
        "text": "Allow linking .cmxa files with no units on MSVC by not requiring the\n  .lib file to be present.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Dimitry", "Bely" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9064 ],
        "text": "Relax the level handling when unifying row fields\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 9097 ],
        "text": "Do not emit references to dead labels introduced by #2321 (spacetime).\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9163 ],
        "text": "Treat loops properly in un_anf\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Pierre", "Chambart" ],
          [ "Vincent", "Laviron" ]
        ]
      },
      {
        "references": [ 9189, 9281 ],
        "text": "fix a conflict with Gentoo build system\n  by removing an one-letter Makefile variable.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Ralph", "Seichter" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9225 ],
        "text": "Do not drop bytecode debug info after C calls.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 9231 ],
        "text": "Make sure a debug event (and the corresponding debug\n  information) is inserted after every primitive that can appear in a\n  collected call stack, and make sure ocamlc preserves such events\n  even if they are at tail position.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9244 ],
        "text": "Fix some missing usage warnings\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9274 ],
        "text": ", avoid reading cmi file while printing types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9307, 9345 ],
        "text": "reproducible env summaries for reproducible compilation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 9309, 9318 ],
        "text": "Fix exhaustivity checking with empty types\n  ",
        "breaking change": false,
        "authors": [
          [ "Florian", "Angeletti" ],
          [ "Stefan", "Muenzel" ],
          [ "Thomas", "Refis" ]
        ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9335 ],
        "text": "actually have --disable-stdlib-manpages not build the manpages\n  (implementation conflicted with #8837 which wasn't picked up in review)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [
          [ "Florian", "Angeletti" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 9343 ],
        "text": "Re-enable `-short-paths` for some error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9355, 9356 ],
        "text": "ocamldebug, fix a fatal error when printing values\n  whose type involves a functor application.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Cyril", "Six" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9367 ],
        "text": "Make bytecode and native-code backtraces agree.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9375, 9477 ],
        "text": "add forgotten substitution when compiling anonymous modules\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Andreas", "Hauptmann" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 9384, 9385 ],
        "text": "Fix copy scope bugs in substitutions\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Nick", "Roberts" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9388 ],
        "text": "Prohibit signature local types with constraints\n  ",
        "breaking change": true,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7141, 9389 ],
        "text": "returns exit_code for better user response on linking_error\n  ",
        "breaking change": false,
        "authors": [ [ "Anukriti", "Kumar" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Valentin", "Gatien-Baron" ]
        ]
      },
      {
        "references": [ 9406, 9409 ],
        "text": "fix an error with packed module types from missing\n  cmis.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Thomas", "Leonard" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9415 ],
        "text": "Treat `open struct` as `include struct` in toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9416 ],
        "text": "Avoid warning 58 in flambda ocamlnat\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9420 ],
        "text": "Fix memory leak when `caml_output_value_to_block` raises an exception\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Guillaume", "Munch-Maccagnoni" ] ]
      },
      {
        "references": [ 9428 ],
        "text": "Fix truncated exception backtrace for C->OCaml callbacks\n  on Power and Z System\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9623, 9642 ],
        "text": "fix typing environments in Typedecl.transl_with_constraint\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 9695, 9702 ],
        "text": "no error when opening an alias to a missing module\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9714, 9724 ],
        "text": "Add a terminator to the `caml_domain_state` structure\n  to better ensure that members are correctly spaced.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.10 maintenance branch": {
    " Runtime system:": [
      {
        "references": [ 9344, 9368 ],
        "text": "Disable exception backtraces in bytecode programs\n  built with \"-output-complete-exe\". At the moment, such programs do\n  not embed debug information and exception backtraces where causing\n  them to crash.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 9531 ],
        "text": "fix support for the BFD library on FreeBSD\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 9068, 9437 ],
        "text": "ocamlopt -output-complete-obj failure on FreeBSD 12\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 9165, 9840 ],
        "text": "Add missing -function-sections flag in Makefiles.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9495 ],
        "text": "fix a bug where bytecode binaries compiled with `-output-complete-exe`\n  would not execute `at_exit` hooks at program termination (in particular,\n  output channels would not be flushed).\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9714, 9724 ],
        "text": "Use the C++ alignas keyword when compiling in C++ in MSVC.\n  Fixes a bug with MSVC C++ 2015 onwards.\n  ",
        "breaking change": false,
        "authors": [ [ "Antonin", "Décimo" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9736, 9749 ],
        "text": "Compaction must start in a heap where all free blocks are\n  blue, which was not the case with the best-fit allocator.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 9552 ],
        "text": "restore ocamloptp build and installation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.10.0 (21 February 2020)": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Language features": [
      {
        "references": [ 7757, 1726 ],
        "text": "multi-indices for extended indexing operators:\n  `a.%{0;1;2}` desugars to `( .%{ ;.. } ) a [|0;1;2|]`\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1859, 9117 ],
        "text": "enforce safe (immutable) strings by removing\n  the -unsafe-string option by default. This can be overridden by\n  a configure-time option (available since 4.04 in 2016):\n  --disable-force-safe-string since 4.08, -no-force-safe-since\n  between 4.07 and 4.04.\n  In the force-safe-string mode (now the default), the return type of the\n  String_val macro in C stubs is `const char*` instead of\n  `char*`. This change may break C FFI code.\n  ",
        "breaking change": true,
        "authors": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6662, 8908 ],
        "text": "allow writing \"module _ = E\" to ignore module expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 8809, 9292 ],
        "text": "Add a best-fit allocator for the major heap; still\n  experimental, it should be much better than current allocation\n  policies (first-fit and next-fit) for programs with large heaps,\n  reducing both GC cost and memory usage.\n  This new best-fit is not (yet) the default; set it explicitly with\n  OCAMLRUNPARAM=\"a=2\" (or Gc.set from the program). You may also want\n  to increase the `space_overhead` parameter of the GC (a percentage,\n  80 by default), for example OCAMLRUNPARAM=\"o=85\", for optimal\n  speed.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Xavier", "Leroy" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 8713, 8940, 9115, 9143, 9202, 9251 ],
        "text": "Introduce a state table in the runtime to contain the global variables.\n  (The Multicore runtime will have one such state for each domain.)\n   This changes the status of some internal variables of the OCaml runtime;\n   in many cases the header file originally defining the internal variable\n   provides a compatibility macro with the old name, but programs\n   re-defining those variables by hand need to be fixed.\n   ",
        "breaking change": true,
        "authors": [ [ "KC", "Sivaramakrishnan" ], [ "Stephen", "Dolan" ] ],
        "compatibility": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Kate", "Deplaix" ],
          [ "Jacques", "Garrigue" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Alain", "Frisch" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 8993 ],
        "text": "New C functions caml_process_pending_actions{,_exn} in\n  caml/signals.h, intended for executing all pending actions inside\n  long-running C functions (requested minor and major collections,\n  signal handlers, finalisers, and memprof callbacks). The function\n  caml_process_pending_actions_exn returns any exception arising\n  during their execution, allowing resources to be cleaned-up before\n  re-raising.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "Jacques-Henri", "Jourdan" ],
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 8691, 8897, 9027 ],
        "text": "Allocation functions are now guaranteed not to\n  trigger any OCaml callback when called from C. In long-running C\n  functions, this can be replaced with calls to\n  caml_process_pending_actions at safe points.\n  Side effect of this change: in bytecode mode, polling for\n  asynchronous callbacks is performed at every minor heap allocation,\n  in addition to function calls and loops as in previous OCaml\n  releases.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 9037 ],
        "text": "caml_check_urgent_gc is now guaranteed not to trigger any\n  finaliser. In long-running C functions, this can be replaced\n  with calls to caml_process_pending_actions at safe points.\n  ",
        "breaking change": true,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 8619 ],
        "text": "Ensure Gc.minor_words remains accurate after a GC.\n  ",
        "breaking change": false,
        "authors": [
          [ "Stephen", "Dolan" ],
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ]
        ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8667 ],
        "text": "Limit GC credit to 1.0\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 8670 ],
        "text": "Fix stack overflow detection with systhreads\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Anil", "Madhavapeddy" ],
          [ "Gabriel", "Scherer" ],
          [ "Frédéric", "Bour" ],
          [ "Guillaume", "Munch-Maccagnoni" ]
        ]
      },
      {
        "references": [ 8711 ],
        "text": "The major GC hooks are no longer allowed to interact with the\n   OCaml heap.\n   ",
        "breaking change": true,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 8630 ],
        "text": "Use abort() instead of exit(2) in caml_fatal_error, and add\n  the new hook caml_fatal_error_hook.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8641 ],
        "text": "Better call stacks when a C call is involved in byte code mode\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8634, 8668, 8684, 9103 ],
        "text": "(originally #847): Statistical memory profiling.\n  In OCaml 4.10, support for allocations in the minor heap in native\n  mode is not available, and callbacks for promotions and\n  deallocations are not available.\n  Hence, there is not any public API for this feature yet.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 9268, 9271 ],
        "text": "Fix bytecode backtrace generation with large integers present.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Mark", "Shinwell" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Jacques-Henri", "Jourdan" ]
        ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 8760 ],
        "text": "List.concat_map : ('a -> 'b list) -> 'a list -> 'b list\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8832 ],
        "text": "List.find_map : ('a -> 'b option) -> 'a list -> 'b option\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 7672, 1492 ],
        "text": "Add `Filename.quote_command` to produce properly-quoted\n  commands for execution by Sys.command.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 8971 ],
        "text": "Add `Filename.null`, the conventional name of the \"null\" device.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 8651 ],
        "text": "add '%#F' modifier in printf to output OCaml float constants\n  in hexadecimal\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Roux" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8657 ],
        "text": "Optimization in [Array.make] when initializing with unboxed\n   or young values.\n   ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 8716 ],
        "text": "Optimize [Array.fill] and [Hashtbl.clear] with a new runtime primitive\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Stephen", "Dolan" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 8530 ],
        "text": "List.sort: avoid duplicate work by chop\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Munch-Maccagnoni" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 1939, 2023 ],
        "text": "Implement Unix.truncate and Unix.ftruncate on Windows.\n  ",
        "breaking change": false,
        "authors": [
          [ "Florent", "Monnier" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 8806 ],
        "text": "Add an [@@immediate64] attribute for types that are known to\n  be immediate only on 64 bit platforms\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Vladimir", "Keleshev" ] ]
      },
      {
        "references": [ 9028, 9032 ],
        "text": "Fix miscompilation by no longer assuming that\n  untag_int (tag_int x) = x in Cmmgen; the compilation of `(n lsl 1) + 1`,\n  for example, would be incorrect if evaluated with a large value for `n`.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8672 ],
        "text": "Optimise Switch code generation on booleans.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 8990 ],
        "text": "amd64: Emit 32bit registers for Iconst_int when we can\n  ",
        "breaking change": false,
        "authors": [
          [ "Xavier", "Clerc" ], [ "Tom", "Kelly" ], [ "Mark", "Shinwell" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 2322 ],
        "text": "Add pseudo-instruction `Ladjust_trap_depth` to replace\n  dummy Lpushtrap generated in linearize\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ], [ "Vincent", "Laviron" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8707 ],
        "text": "Simplif: more regular treatment of Tupled and Curried functions\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Leo", "White" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 8526 ],
        "text": "Add compile-time option -function-sections in ocamlopt to emit\n  each function in a separate named text section on supported targets.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 2321 ],
        "text": "Eliminate dead ICatch handlers\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 8919 ],
        "text": "lift mutable lets along with immutable ones\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 8909 ],
        "text": "Graph coloring register allocator: the weights put on\n  preference edges should not be divided by 2 in branches of\n  conditional constructs, because it is not good for performance\n  and because it leads to ignoring preference edges with 0 weight.\n  ",
        "breaking change": false,
        "authors": [ [ "Eric", "Stavarache" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9006 ],
        "text": "int32 code generation improvements\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "design": [ [ "Greta", "Yorsh" ] ],
        "review": [
          [ "Xavier", "Clerc" ], [ "Xavier", "Leroy" ], [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 9041 ],
        "text": "amd64: Avoid stall in sqrtsd by clearing destination.\n  ",
        "breaking change": false,
        "Review": [ [ "Xavier", "Leroy" ] ],
        "authors": [ [ "Stephen", "Dolan" ] ],
        "thanks": [
          [ "Andrew", "Hunter" ],
          [ "Will", "Hasenplaugh" ],
          [ "Spiros", "Eliopoulos" ],
          [ "Brian", "Nigito" ]
        ]
      },
      {
        "references": [ 2165 ],
        "text": "better unboxing heuristics for let-bound identifiers\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8735 ],
        "text": "unbox across static handlers\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 8718, 9089 ],
        "text": "syntactic highlighting for code examples in the manual\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Anton", "Kochkov" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9101 ],
        "text": "add links to section anchor before the section title,\n  make the name of those anchor explicit.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Sébastien", "Hinderer" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 9257 ],
        "text": ", cautionary guidelines for using the internal runtime API\n  without too much updating pain.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Guillaume", "Munch-Maccagnoni" ],
          [ "KC", "Sivaramakrishnan" ]
        ]
      },
      {
        "references": [ 8950 ],
        "text": "move local opens in pattern out of the extension chapter\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9088, 9097 ],
        "text": "fix operator character classes\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Clément", "Busschaert" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9169 ],
        "text": "better documentation for the best-fit allocation policy\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Guillaume", "Munch-Maccagnoni" ], [ "Florian", "Angeletti" ]
        ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 8833 ],
        "text": "Hint for (type) redefinitions in toplevel session\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2127, 9185 ],
        "text": "Refactor lookup functions\n  Included observable changes:\n    - makes the location of usage warnings and alerts for constructors more\n      precise\n    - don't warn about a constructor never being used to build values when it\n      has been defined as private\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 8702, 8777 ],
        "text": "improved error messages for fixed row polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8844 ],
        "text": "Printing faulty constructors, inline records fields and their types\n  during type mismatches. Also slightly changed other type mismatches error\n  output.\n  ",
        "breaking change": false,
        "authors": [ [ "Mekhrubon", "Turaev" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 8885 ],
        "text": "Warn about unused local modules\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 8872 ],
        "text": "Add ocamlc option \"-output-complete-exe\" to build a self-contained\n  binary for bytecode programs, containing the runtime and C stubs.\n  ",
        "breaking change": false,
        "authors": [
          [ "Stéphane", "Glondu" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [ [ "Jérémie", "Dimino" ], [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 8874 ],
        "text": "add tests for typechecking error messages and pack them into\n  pretty-printing boxes.\n  ",
        "breaking change": false,
        "authors": [ [ "Oxana", "Kostikova" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8891 ],
        "text": "Warn about unused functor parameters\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 8903 ],
        "text": "Improve errors for first-class modules\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8914 ],
        "text": "clarify the warning on unboxable types used in external primitives (61)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Discourse", "forum" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9046 ],
        "text": "disable warning 30 by default\n  This outdated warning complained on label/constructor name conflicts\n  within a mutually-recursive type declarations; there is now no need\n  to complain thanks to type-based disambiguation.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 6792, 8654 ],
        "text": "ocamldebug now supports programs using Dynlink. This\n  changes ocamldebug messages, which may break compatibility\n  with older emacs modes.\n  ",
        "breaking change": true,
        "authors": [ [ "whitequark" ], [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Clerc" ] ]
      },
      {
        "references": [ 8621 ],
        "text": "Make ocamlyacc a Windows Unicode application\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 8834 ],
        "text": ", `ocaml`: adhere to the XDG base directory specification to\n  locate an `.ocamlinit` file. Reads an `$XDG_CONFIG_HOME/ocaml/init.ml`\n  file before trying to lookup `~/.ocamlinit`. On Windows the behaviour\n  is unchanged.\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Armaël", "Guéneau" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 9113 ],
        "text": "ocamldoc: fix the rendering of multi-line code blocks\n  in the 'man' backend.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9127, 9130 ],
        "text": "ocamldoc: fix the formatting of closing brace in record types.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "San", "Vu", "Ngoc" ] ]
      },
      {
        "references": [ 9181 ],
        "text": "make objinfo work on Cygwin and look for the caml_plugin_header\n  symbol in both the static and the dynamic symbol tables.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 8840 ],
        "text": "use ocaml{c,opt}.opt when available to build internal tools\n  On my machine this reduces parallel-build times from 3m30s to 2m50s.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8650 ],
        "text": "ensure that \"make\" variables are defined before use;\n  revise generation of config/util.ml to better quote special characters\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8690, 8696 ],
        "text": "avoid rebuilding the world when files containing primitives\n  change.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Sébastien", "Hinderer" ],
          [ "Thomas", "Refis" ]
        ]
      },
      {
        "references": [ 8835 ],
        "text": "new configure option --disable-stdlib-manpages to disable building\n  and installation of the library manpages.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8837 ],
        "text": "build manpages using ocamldoc.opt when available\n  cuts the manpages build time from 14s to 4s\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "David", "Allsopp" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8843, 8841 ],
        "text": "fix use of off_t on 32-bit systems.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Richard", "Jones" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8947, 9134, 9302, 9311 ],
        "text": "fix/improve support for the BFD library\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8951 ],
        "text": "let make's default target build the compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8995 ],
        "text": "allow developers to specify frequently-used configure options in\n  Git (ocaml.configure option) and a directory for host-specific, shareable\n  config.cache files (ocaml.configure-cache option). See HACKING.adoc for\n  further details.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9136 ],
        "text": "Don't propagate Cygwin-style prefix from configure to\n  Makefile.config on Windows ports.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 8828 ],
        "text": "Added abstractions for variants, records, constructors, fields and\n  extension constructor types mismatch.\n  ",
        "breaking change": false,
        "authors": [ [ "Mekhrubon", "Turaev" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 7927, 8527 ],
        "text": "Replace long tuples into records in typeclass.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Ulugbek", "Abdullaev" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1963 ],
        "text": "split cmmgen into generic Cmm helpers and clambda transformations\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1901 ],
        "text": "Fix lexing of character literals in comments\n  ",
        "breaking change": false,
        "authors": [ [ "Pieter", "Goetschalckx" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1932 ],
        "text": "Allow octal escape sequences and identifiers containing apostrophes\n  in ocamlyacc actions and comments.\n  ",
        "breaking change": false,
        "authors": [ [ "Pieter", "Goetschalckx" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2288 ],
        "text": "Move middle end code from [Asmgen] to [Clambda_middle_end] and\n  [Flambda_middle_end].  Run [Un_anf] from the middle end, not [Cmmgen].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 8692 ],
        "text": "Remove Misc.may_map and similar\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8677 ],
        "text": "Use unsigned comparisons in amd64 and i386 emitter of Lcondbranch3.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8766 ],
        "text": "Parmatch: introduce a type for simplified pattern heads\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Stephen", "Dolan" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 8774 ],
        "text": "New implementation of Env.make_copy_of_types\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [
          [ "Thomas", "Refis" ],
          [ "Leo", "White" ],
          [ "Jacques", "Garrigue" ]
        ]
      },
      {
        "references": [ 7924 ],
        "text": "Use a variant instead of an int in Bad_variance exception\n  ",
        "breaking change": false,
        "authors": [ [ "Rian", "Douglas" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8890 ],
        "text": "in -dtimings output, show time spent in C linker clearly\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 8910, 8911 ],
        "text": "minor improvements to the printing of module types\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 8913 ],
        "text": "ocamltest: improve 'promote' implementation to take\n  skipped lines/bytes into account\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8908 ],
        "text": "Use an option instead of a string for module names (\"_\" becomes None),\n  and a dedicated type for functor parameters: \"()\" maps to \"Unit\" (instead of\n  \"*\").\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 8928 ],
        "text": "Move contains_calls and num_stack_slots from Proc to Mach.fundecl\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 8959, 8960, 8968, 9023 ],
        "text": "minor refactorings in the typing of patterns:\n  + refactor the {let,pat}_bound_idents* functions\n  + minor bugfix in type_pat\n  + refactor the generic pattern-traversal functions\n    in Typecore and Typedtree\n  + restrict the use of Need_backtrack\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9030 ],
        "text": "clarify and document the parameter space of type_pat\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ],
          [ "Jacques", "Garrigue" ]
        ],
        "review": [ [ "Florian", "Angeletti" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8975 ],
        "text": "\"ocamltests\" files are no longer required or used by\n  \"ocamltest\". Instead, any text file in the testsuite directory containing a\n  valid \"TEST\" block will be automatically included in the testsuite.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8992 ],
        "text": "share argument implementations between executables\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9015 ],
        "text": "fix fatal error in pprint_ast (#8789)\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 5673, 7636 ],
        "text": "unused type variable causes generalization error\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ],
        "reports": [
          [ "Jean-Louis", "Giavitto" ], [ "Christophe", "Raffalli" ]
        ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6922, 8955 ],
        "text": "Fix regression with -principal type inference for inherited\n  methods, allowing to compile ocamldoc with -principal\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7925, 8611 ],
        "text": "fix error highlighting for exceptionally\n  long toplevel phrases\n  ",
        "breaking change": false,
        "authors": [ [ "Kyle", "Miller" ] ],
        "reported": [ [ "Armaël", "Guéneau" ] ],
        "review": [
          [ "Armaël", "Guéneau" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 8622 ],
        "text": "Don't generate #! headers over 127 characters.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 8715 ],
        "text": "minor bugfixes in CamlinternalFormat; removes the unused\n  and misleading function CamlinternalFormat.string_of_formatting_gen\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 8792, 9018 ],
        "text": "Possible (latent) bug in Ctype.normalize_type\n  removed incrimined Btype.log_type, replaced by Btype.set_type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8856, 8860 ],
        "text": "avoid stackoverflow when printing cyclic type expressions\n  in some error submessages.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Mekhrubon", "Turaev" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 8875 ],
        "text": "fix missing newlines in the output from MSVC invocation.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8921, 8924 ],
        "text": "Fix stack overflow with Flambda\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Aleksandr", "Kuzmenko" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 8892, 8895 ],
        "text": "fix the definition of Is_young when CAML_INTERNALS is not\n  defined.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8896 ],
        "text": "deprecate addr typedef in misc.h\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "suggestion": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8981 ],
        "text": "Fix check for incompatible -c and -o options.\n  ",
        "breaking change": false,
        "authors": [ [ "Greta", "Yorsh" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9019, 9154 ],
        "text": "Unsound exhaustivity of GADTs from incomplete unification\n  Also fixes bug found by Thomas Refis in #9012\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Leo", "White" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 9031 ],
        "text": "Unregister Windows stack overflow handler while shutting\n  the runtime down.\n  ",
        "breaking change": false,
        "authors": [ [ "Dmitry", "Bely" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 9051 ],
        "text": "fix unregistered local root in win32unix/select.c (could result in\n  `select` returning file_descr-like values which weren't in the original sets)\n  and correct initialisation of some blocks allocated with caml_alloc_small.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 9073, 9120 ],
        "text": "fix incorrect GC ratio multiplier when allocating custom blocks\n  with caml_alloc_custom_mem in runtime/custom.c\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 9209, 9212 ],
        "text": "fix a development-version regression caused by #2288\n  ",
        "breaking change": false,
        "authors": [ [ "Kate", "Deplaix" ], [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9218, 9269 ],
        "text": "avoid a rare wrong module name error with \"-annot\" and\n  inline records.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 9261 ],
        "text": "Fix a soundness bug in Rec_check, new in 4.10 (from #8908)\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Gabriel", "Scherer" ] ]
      }
    ]
  },
  "OCaml 4.09 maintenance branch": {
    " Build system:": [
      {
        "references": [ 9383 ],
        "text": "Don't assume that AWKPATH includes .\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Ian", "Zimmerman" ] ]
      }
    ]
  },
  "OCaml 4.09.1 (16 Mars 2020)": {
    "Release documentation": [
      {
        "references": [ 8855, 8858 ],
        "text": "Links for tools not created when installing with\n  --disable-installing-byecode-programs (e.g. ocamldep.opt installed, but\n  ocamldep link not created)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Thomas", "Leonard" ] ]
      },
      {
        "references": [ 8953, 8954 ],
        "text": "Fix error submessages in the toplevel: do not display\n  dummy locations\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8965, 8979 ],
        "text": "Alpine build failure caused by check-parser-uptodate-or-warn.sh\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ],
        "report": [ [ "Anton", "Kochkov" ] ]
      },
      {
        "references": [ 8985, 8986 ],
        "text": "fix generation of the primitives when the locale collation is\n  incompatible with C.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Sebastian", "Rasmussen" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 9050, 9076 ],
        "text": "install missing compilerlibs/ocamlmiddleend archives\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Olaf", "Hering" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 9180 ],
        "text": "pass -fno-common option to C compiler when available,\n  so as to detect problematic multiple definitions of global variables\n  in the C runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9144, 9180 ],
        "text": "multiple definitions of global variables in the C runtime,\n  causing problems with GCC 10.0 and possibly with other C compilers\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Jürgen", "Reuter" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 9128 ],
        "text": "Fix a bug in bytecode mode which could lead to a segmentation\n  fault. The bug was caused by the fact that the atom table shared a\n  page with some bytecode. The fix makes sure both the atom table and\n  the minor heap have their own pages.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [
          [ "Stephen", "Dolan" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ]
      }
    ]
  },
  "OCaml 4.09.0 (19 September 2019)": {
    " Runtime system:": [
      {
        "references": [ 1725, 2279 ],
        "text": "Deprecate Obj.set_tag and Obj.truncate\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 2240 ],
        "text": "Constify \"identifier\" in struct custom_operations\n  ",
        "breaking change": true,
        "authors": [ [ "Cedric", "Cellier" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 2293 ],
        "text": "Constify \"caml_named_value\"\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8787, 8788 ],
        "text": "avoid integer overflow in caml_output_value_to_bytes\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Marcello", "Seri" ] ]
      },
      {
        "references": [ 2075, 7729 ],
        "text": "rename _T macro used to support Unicode in the (Windows) runtime\n  in order to avoid compiler warning\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2250 ],
        "text": "Remove extra integer sign-extension in compare functions\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8607 ],
        "text": "Remove obsolete macros for pre-2002 MSVC support\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8656 ],
        "text": "Fix a bug in [caml_modify_generational_global_root]\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 2262 ],
        "text": "take precision (.<n>) and flags ('+' and ' ') into account\n  in printf %F\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Roux" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6148, 8596 ],
        "text": "optimize some buffer operations\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "reports": [ [ "John", "Whitington" ], [ "Alain", "Frisch" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 2318 ],
        "text": "Delete the graphics library. This library is now available\n  as a separate \"graphics\" package in opam. Its new home is:\n  https://github.com/ocaml/graphics\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Leroy" ],
          [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 2289 ],
        "text": "Delete the vmthreads library. This library was deprecated in 4.08.0.\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 2112 ],
        "text": "Fix Thread.yield unfairness with busy threads yielding to each\n  other.\n  ",
        "breaking change": false,
        "authors": [ [ "Andrew", "Hunter" ] ],
        "review": [
          [ "Jacques-Henri", "Jourdan" ],
          [ "Spiros", "Eliopoulos" ],
          [ "Stephen", "Weeks" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 7903, 2306 ],
        "text": "Make Thread.delay interruptible by signals again\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ], [ "Edwin", "Török" ] ]
      },
      {
        "references": [ 2248 ],
        "text": "Unix alloc_sockaddr: Fix read of uninitialized memory for an\n  unbound Unix socket. Add support for receiving abstract (Linux) socket paths.\n  ",
        "breaking change": false,
        "authors": [ [ "Tim", "Cuthbertson" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Jérémie", "Dimino" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 2276 ],
        "text": "Remove support for compiler plugins and hooks (also adds\n  [Dynlink.unsafe_get_global_value])\n  ",
        "breaking change": true,
        "authors": [ [ "Mark", "Shinwell" ], [ "Xavier", "Clerc" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 2301 ],
        "text": "Hint on type error on int literal\n  ",
        "breaking change": false,
        "authors": [ [ "Jules", "Aguillon" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Florian", "Angeletti" ],
          [ "Gabriel", "Scherer" ],
          [ "Armaël", "Guéneau" ]
        ]
      },
      {
        "references": [ 2314 ],
        "text": "Remove support for gprof profiling.\n  ",
        "breaking change": true,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Xavier", "Clerc" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 2190 ],
        "text": "fix pretty printing (using Pprintast) of \"lazy ...\" patterns and\n  \"fun (type t) -> ...\" expressions.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2277 ],
        "text": "Use newtype names as type variable names\n  The inferred type of (fun (type t) (x : t) -> x)\n  is now printed as ('t -> 't) rather than ('a -> 'a).\n  ",
        "breaking change": false,
        "authors": [ [ "Matthew", "Ryan" ] ]
      },
      {
        "references": [ 2309 ],
        "text": "New options -with-runtime and -without-runtime in ocamlopt/ocamlc\n  that control the inclusion of the runtime system in the generated program.\n  ",
        "breaking change": false,
        "authors": [ [ "Lucas", "Pluvinage" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Damien", "Doligez" ],
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 3819, 8546 ],
        "text": "more explanations and tests for illegal permutation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8537 ],
        "text": "fix the -runtime-variant option for bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8541 ],
        "text": "Correctly print multi-lines locations\n  ",
        "breaking change": false,
        "authors": [ [ "Louis", "Roché" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8579 ],
        "text": "Better error message for private constructors\n  of an extensible variant type\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Bury" ] ],
        "review": [ [ "many", "fine", "eyes" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 2278 ],
        "text": "Remove native code generation support for 32-bit Intel macOS,\n  iOS and other Darwin targets.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8547 ],
        "text": "Optimize matches that are an affine function of the input.\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1904, 7931 ],
        "text": "Add FreeBSD/aarch64 support\n  ",
        "breaking change": false,
        "authors": [ [ "Greg", "V" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ],
          [ "Stephen", "Dolan" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 8507 ],
        "text": "Shorten symbol names of anonymous functions in Flambda mode\n  (the directory portions are now hidden)\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 8681, 8699, 8712 ],
        "text": "Fix code generation with nested let rec of functions.\n  ",
        "breaking change": false,
        "authors": [
          [ "Stephen", "Dolan" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ],
          [ "Pierre", "Chambart" ]
        ],
        "reports": [ [ "Alexey", "Solovyev" ], [ "Jonathan", "French" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 7584, 8538 ],
        "text": "Document .cmt* files in the \"overview\" of ocaml{c,opt}\n  ",
        "breaking change": false,
        "authors": [ [ "Oxana", "Kostikova" ] ],
        "rewiew": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 8757 ],
        "text": "Rename Pervasives to Stdlib in core library documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "Ian", "Zimmerman" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8515 ],
        "text": "manual, precise constraints on reexported types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 2221 ],
        "text": "ocamldep will now correctly allow a .ml file in an include directory\n  that appears first in the search order to shadow a .mli appearing in a later\n  include directory.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 1579 ],
        "text": "Add a separate types for clambda primitives\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Vincent", "Laviron" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1965 ],
        "text": "remove loop constructors in Cmm and Mach\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 1973 ],
        "text": "fix compilation of catches with multiple handlers\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2228, 8545 ],
        "text": "refactoring the handling of .cmi files\n  by moving the logic from Env to a new module Persistent_env\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jérémie", "Dimino" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 2229 ],
        "text": "Env: remove prefix_idents cache\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2237, 8582 ],
        "text": "Reorder linearisation of Trywith to avoid a call instruction\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ], [ "Greta", "Yorsh" ] ],
        "fix": [
          [ "Mark", "Shinwell" ],
          [ "Xavier", "Leroy" ],
          [ "Anil", "Madhavapeddy" ]
        ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 2265 ],
        "text": "Add bytecomp/opcodes.mli\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2268 ],
        "text": "Improve packing mechanism used for building compilerlibs modules\n  into the Dynlink libraries\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Stephen", "Dolan" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2280 ],
        "text": "Don't make more Clambda constants after starting Cmmgen\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2281 ],
        "text": "Move some middle-end files around\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2283 ],
        "text": "Add [is_prefix] and [find_and_chop_longest_common_prefix] to\n  [Misc.Stdlib.List]\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 2284 ],
        "text": "Add various utility functions to [Misc] and remove functions\n  from [Misc.Stdlib.Option] that are now in [Stdlib.Option]\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 2286 ],
        "text": "Functorise [Consistbl]\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 2291 ],
        "text": "Add [Compute_ranges] pass\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2292 ],
        "text": "Add [Proc.frame_required] and [Proc.prologue_required].\n  Move tail recursion label creation to [Linearize].  Correctly position\n  [Lprologue] relative to [Iname_for_debugger] operations.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2308 ],
        "text": "More debugging information on [Cmm] terms\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7878, 8542 ],
        "text": "Replaced TypedtreeIter with tast_iterator\n  ",
        "breaking change": false,
        "authors": [ [ "Isaac", "\"Izzy\"", "Avram" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 8598 ],
        "text": "Replace \"not is_nonexpansive\" by \"maybe_expansive\".\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ]
        ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 2267 ],
        "text": "merge generation of header programs, also fixing parallel build on\n  Cygwin.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 8514 ],
        "text": "Use boot/ocamlc.opt for building, if available.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 8864, 8865 ],
        "text": "Fix native compilation of left shift by (word_size - 1)\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Murilo", "Giacometti", "Rocha" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 2296 ],
        "text": "Fix parsing of hexadecimal floats with underscores in the exponent.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8800 ],
        "text": "Fix soundness bug in extension constructor inclusion\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8848 ],
        "text": "Fix x86 stack probe CFI information in caml_c_call and\n  caml_call_gc\n  ",
        "breaking change": false,
        "authors": [ [ "Tom", "Kelly" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7156, 8594 ],
        "text": "make top level use custom printers if they are available\n  ",
        "breaking change": false,
        "authors": [ [ "Andrew", "Litteken" ] ],
        "report": [ [ "Martin", "Jambon" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Thomas", "Refis" ],
          [ "Armaël", "Guéneau" ],
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 3249 ],
        "text": "ocamlmklib should reject .cmxa files\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7937, 2287 ],
        "text": "fix uncaught Unify exception when looking for type\n  declaration\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8610, 8613 ],
        "text": "toplevel printing, consistent deduplicated name for types\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "reported": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8635, 8636 ],
        "text": "Fix a bad side-effect of the -allow-approx option of\n  ocamldep. It used to turn some errors into successes\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 8701, 8725 ],
        "text": "Variance of constrained parameters causes principality issues\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8777 ],
        "text": "(partial): fix position information in some polymorphic variant\n  error messages about missing tags\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 8779 ],
        "text": ", more cautious variance computation to avoid missing cmis\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Antonio", "Nuno", "Monteiro" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 8810 ],
        "text": "Env.lookup_module: don't allow creating loops\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8862, 8871 ],
        "text": "subst: preserve scopes\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8921, 8924 ],
        "text": "Fix stack overflow with Flambda\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "report": [ [ "Aleksandr", "Kuzmenko" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 8944 ],
        "text": "Fix \"open struct .. end\" on clambda backend\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Damon", "Wang" ], [ "Mark", "Shinwell" ] ],
        "review": [ [ "Leo", "White" ] ]
      }
    ]
  },
  "OCaml 4.08 maintenance branch": {
    " Bug fixes:": [
      {
        "references": [ 9326, 10125 ],
        "text": "Gc.set incorrectly handles the three `custom_*` fields,\n  causing a performance regression\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "fix": [ [ "Stephen", "Dolan" ] ],
        "report": [
          [ "Emilio", "Jesús", "Gallego", "Arias" ], [ "analysis" ]
        ],
        "review": [ [ "Hugo", "Heuzard" ], [ "Gabriel", "Scherer" ] ]
      }
    ]
  },
  "OCaml 4.08.1 (5 August 2019)": {
    " Bug fixes:": [
      {
        "references": [ 7887 ],
        "text": "ensure frame table is 8-aligned on ARM64 and PPC64\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Mark", "Hayden" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8751 ],
        "text": "fix bug that could result in misaligned data section when compiling to\n  native-code on amd64.  (observed with the mingw64 compiler)\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8769, 8770 ],
        "text": "Fix assertion failure with -pack\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Fabian", "@copy" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8816, 8818 ],
        "text": "fix loading of packed modules with Dynlink (regression in\n  #2176).\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Andre", "Maroneze" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 8830 ],
        "text": "configure script: fix tool prefix detection and Debian's armhf\n  detection\n  ",
        "breaking change": false,
        "authors": [ [ "Stéphane", "Glondu" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8843, 8841 ],
        "text": "fix use of off_t on 32-bit systems.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Richard", "Jones" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.08.0 (13 June 2019)": {
    " Language features:": [
      {
        "references": [ 1947 ],
        "text": "Introduce binding operators (let*, let+, and* etc.)\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1892 ],
        "text": "Allow shadowing of items coming from an include\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 2122 ],
        "text": "Introduce local substitutions in signatures: \"type t := type_expr\"\n  and \"module M := Extended(Module).Path\"\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "help": [ [ "Leo", "White" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1804 ],
        "text": "New notion of \"alerts\" that generalizes the deprecated warning\n      [@@ocaml.alert deprecated \"Please use bar instead!\"]\n      [@@ocaml.alert unsafe \"Please use safe_foo instead!\"]\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Leo", "White" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6422, 7083, 305, 1568 ],
        "text": "Allow `exception` under or-patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "help": [
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ],
          [ "Leo", "White" ],
          [ "Luc", "Maranget" ]
        ]
      },
      {
        "references": [ 1705 ],
        "text": "Allow @@attributes on exception declarations.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1506, 2147, 2166, 2167 ],
        "text": "Extended `open` to arbitrary module\n  expression in structures and to applicative paths in signatures\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Florian", "Angeletti" ],
          [ "Jeremy", "Yallop" ],
          [ "Leo", "White" ],
          [ "Thomas", "Refis" ]
        ]
      },
      {
        "references": [ 2106 ],
        "text": ".~ is now a reserved keyword, and is no longer available\n  for use in extended indexing operators\n  ",
        "breaking change": true,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 7841, 2041, 2235 ],
        "text": "allow modules from include directories\n  to shadow other ones, even in the toplevel; for a example, including\n  a directory that defines its own Result module will shadow the stdlib's.\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 2110 ],
        "text": "Partial support for GADTs inside or-patterns;\n  The type equalities introduced by the GADT constructor are only\n  available inside the or-pattern; they cannot be used in the\n  right-hand-side of the clause, when both sides of the or-pattern\n  agree on it.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1826 ],
        "text": "allow expanding a type to a private abbreviation instead of\n  abstracting when removing references to an identifier.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1942, 2244 ],
        "text": "simplification of the static check\n  for recursive definitions\n  ",
        "breaking change": false,
        "authors": [ [ "Alban", "Reynaud" ], [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Armaël", "Guéneau" ],
          [ "Damien", "Doligez" ]
        ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 2128 ],
        "text": "Add Fun module: `id, const, flip, negate, protect`\n  (protect is a \"try_finally\" combinator)\n  https://caml.inria.fr/pub/docs/manual-ocaml/libref/Fun.html\n  ",
        "breaking change": false,
        "authors": [ [ "many" ] ]
      },
      {
        "references": [ 2010 ],
        "text": "Add Bool module\n  https://caml.inria.fr/pub/docs/manual-ocaml/libref/Bool.html\n  ",
        "breaking change": false,
        "authors": [ [ "many" ] ]
      },
      {
        "references": [ 2011 ],
        "text": "Add Int module\n  https://caml.inria.fr/pub/docs/manual-ocaml/libref/Int.html\n  ",
        "breaking change": false,
        "authors": [ [ "many" ] ]
      },
      {
        "references": [ 1940 ],
        "text": "Add Option module and Format.pp_print_option\n  `none, some, value, get, bind, join, map, fold, iter`, etc.\n  https://caml.inria.fr/pub/docs/manual-ocaml/libref/Option.html\n  ",
        "breaking change": false,
        "authors": [ [ "many" ] ]
      },
      {
        "references": [ 1956 ],
        "text": "Add Result module and Format.pp_print_result\n  `ok, error, value, get_ok, bind, join, map, map_error`, etc.\n  https://caml.inria.fr/pub/docs/manual-ocaml/libref/Result.html\n  ",
        "breaking change": false,
        "authors": [ [ "many" ] ]
      },
      {
        "references": [ 1855, 2118 ],
        "text": "Add `Fun.protect ~finally` for enforcing local\n  invariants whether a function raises or not, similar to\n  `unwind-protect` in Lisp and `FINALLY` in Modula-2. It is careful\n  about preserving backtraces and treating exceptions in finally as\n  errors.\n  ",
        "breaking change": false,
        "authors": [
          [ "Marcello", "Seri" ], [ "Guillaume", "Munch-Maccagnoni" ]
        ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "François", "Bobot" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Clerc" ],
          [ "Boris", "Yakobowski" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 1605 ],
        "text": "Deprecate Stdlib.Pervasives. Following #1010, Pervasives\n  is no longer needed and Stdlib should be used instead.\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2185 ],
        "text": "Add `List.filter_map`\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1957 ],
        "text": "Add Stack.{top_opt,pop_opt} and Queue.{peek_opt,take_opt}.\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Keleshev" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1182 ],
        "text": "Add new Printf formats %#d %#Ld %#ld %#nd (idem for %i and %u) for\n  alternative integer formatting -- inserts '_' between blocks of digits.\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1959 ],
        "text": "Add Format.dprintf, a printing function which outputs a closure\n  usable with %t.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "request": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1986, 6450 ],
        "text": "Add Set.disjoint\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7812, 2125 ],
        "text": "Add Filename.chop_suffix_opt\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "suggestion": [ [ "whitequark" ] ]
      },
      {
        "references": [ 1864 ],
        "text": "Extend Bytes and Buffer with functions to read/write\n  binary representations of numbers\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 1458 ],
        "text": "Add unsigned operations unsigned_div, unsigned_rem, unsigned_compare\n  and unsigned_to_int to modules Int32, Int64, Nativeint.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Alain", "Frisch" ],
          [ "Max", "Mouratov" ]
        ]
      },
      {
        "references": [ 2002 ],
        "text": "Add Format.pp_print_custom_break, a new more general kind of break\n  hint that can emit non-whitespace characters.\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Keleshev" ], [ "Pierre", "Weis" ] ],
        "review": [ [ "Josh", "Berdine" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1966 ],
        "text": "Add Format semantic tags using extensible sum types.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1794 ],
        "text": "Add constants zero, one, minus_one and functions succ,\n  pred, is_finite, is_infinite, is_nan, is_integer, trunc, round,\n  next_after, sign_bit, min, max, min_max, min_num, max_num,\n  min_max_num to module Float.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Xavier", "Clerc" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 1354, 2177 ],
        "text": "Add fma support to Float module.\n  ",
        "breaking change": false,
        "authors": [ [ "Laurent", "Thévenoux" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 5072, 6655, 1876 ],
        "text": "add aliases in Stdlib for built-in types\n  and exceptions.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "reports": [ [ "Pierre", "Letouzey" ], [ "David", "Sheets" ] ],
        "review": [
          [ "Valentin", "Gatien-Baron" ],
          [ "Gabriel", "Scherer" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 1731 ],
        "text": "Format, use raise_notrace to preserve backtraces.\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "report": [ [ "Jules", "Villard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6701, 1185, 1803 ],
        "text": "make float_of_string and string_of_float\n  locale-independent.\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 7795, 1782 ],
        "text": "Fix off-by-one error in Weak.create.\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "François", "Bobot" ] ]
      },
      {
        "references": [ 7235 ],
        "text": "Format, flush err_formatter at exit.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ] ],
        "request": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 1857, 7812 ],
        "text": "Remove Sort module, deprecated since 2000 and emitting\n  a deprecation warning since 4.02.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 1923 ],
        "text": "Arg module sometimes misbehaved instead of rejecting invalid\n  -keyword=arg inputs\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1959 ],
        "text": "Small simplification and optimization to Format.ifprintf\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2119 ],
        "text": "clarify the documentation of Set.diff\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "John", "Skaller" ] ]
      },
      {
        "references": [ 2145 ],
        "text": "Deprecate the mutability of Gc.control record fields\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 2159, 7874 ],
        "text": "annotate {String,Bytes}.equal as being [@@noalloc].\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre-Marie", "Pédrot" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1936 ],
        "text": "Add module Float.Array\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Xavier", "Clerc" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 2183 ],
        "text": "Fix segfault in Array.create_float with -no-flat-float-array\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 1525 ],
        "text": "Make function set_max_indent respect documentation\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ], [ "Richard", "Bonichon" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 2202 ],
        "text": "Correct Hashtbl.MakeSeeded.{add_seq,replace_seq,of_seq} to use\n  functor hash function instead of default hash function. Hashtbl.Make.of_seq\n  shouldn't create randomized hash tables.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 2533, 1839, 1949 ],
        "text": "added Unix.fsync\n  ",
        "breaking change": false,
        "authors": [
          [ "François", "Berenger" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "review": [
          [ "Daniel", "Bünzli" ], [ "David", "Allsopp" ], [ "ygrek" ]
        ]
      },
      {
        "references": [ 1792, 7794 ],
        "text": "Add Unix.open_process_args{,_in,_out,_full} similar to\n  Unix.open_process{,_in,_out,_full}, but passing an explicit argv array.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "request": [ [ "Volker", "Diels-Grabsch" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1999 ],
        "text": "Add Unix.process{,_in,_out,_full}_pid to retrieve opened process's\n  pid.\n  ",
        "breaking change": false,
        "authors": [ [ "Romain", "Beauxis" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2222 ],
        "text": "Set default status in waitpid when pid is zero. Otherwise,\n  status value is undefined.\n  ",
        "breaking change": false,
        "authors": [ [ "Romain", "Beauxis" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 2104, 2211, 4127, 7709 ],
        "text": "Fix Thread.sigmask. When\n  system threads are loaded, Unix.sigprocmask is now an alias for\n  Thread.sigmask. This changes the behavior at least on MacOS, where\n  Unix.sigprocmask used to change the masks of all threads.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1061 ],
        "text": "Add ?follow parameter to Unix.link. This allows hardlinking\n  symlinks.\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ],
          [ "David", "Allsopp" ],
          [ "David", "Sheets" ]
        ]
      },
      {
        "references": [ 2038 ],
        "text": "Deprecate vm threads.\n  OCaml supported both \"native threads\", based on pthreads,\n  and its own green-threads implementation, \"vm threads\". We are not\n  aware of any recent usage of \"vm threads\", and removing them simplifies\n  further maintenance.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [
          4208, 4229, 4839, 6462, 6957, 6950, 1063, 2176, 2297
        ],
        "text": "Make (nat)dynlink sound by correctly failing when\n  dynlinked module names clash with other modules or interfaces.\n  ",
        "breaking change": true,
        "authors": [
          [ "Mark", "Shinwell" ],
          [ "Leo", "White" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Pierre", "Chambart" ]
        ]
      },
      {
        "references": [ 2263 ],
        "text": "Delete the deprecated Bigarray.*.map_file functions in\n  favour of `*_of_genarray (Unix.map_file ...)` functions instead. The\n  `Unix.map_file` function was introduced in OCaml 4.06.0 onwards.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "reviewed": [ [ "David", "Allsopp" ], [ "Anil", "Madhavapeddy" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 2096 ],
        "text": "Add source highlighting for errors & warnings in batch mode\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 2133 ],
        "text": "[@ocaml.warn_on_literal_pattern]: now warn on literal patterns\n  found anywhere in a constructor's arguments.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1720 ],
        "text": "Improve error reporting for missing 'rec' in let-bindings.\n  ",
        "breaking change": false,
        "authors": [
          [ "Arthur", "Charguéraud" ], [ "Armaël", "Guéneau" ]
        ],
        "help": [
          [ "Gabriel", "Scherer" ],
          [ "Frédéric", "Bour" ],
          [ "Xavier", "Clerc" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 7116, 1430 ],
        "text": "new -config-var option\n  to get the value of a single configuration variable in scripts.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "Adrien", "Nader" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1733 ],
        "text": ",1993,1998,2058,2094,2140: Typing error message improvements\n    - #1733, change the perspective of the unexpected existential error\n      message.\n    - #1993, expanded error messages for universal quantification failure\n    - #1998, more context for unbound type parameter error\n    - #2058, full explanation for unsafe cycles in recursive module\n      definitions (suggestion by Ivan Gotovchits)\n    - #2094, rewording for \"constructor has no type\" error\n    - #7565, #2140, more context for universal variable escape\n      in method type\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "reviews": [
          [ "Jacques", "Garrigue" ],
          [ "Armaël", "Guéneau" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ]
        ]
      },
      {
        "references": [ 1913 ],
        "text": "new flag -dump-into-file to print debug output like -dlambda into\n  a file named after the file being built, instead of on stderr.\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1921 ],
        "text": "in the compilation context passed to ppx extensions,\n  add more configuration options related to type-checking:\n  -rectypes, -principal, -alias-deps, -unboxed-types, -unsafe-string\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Gabriel", "Radanne" ],
          [ "Xavier", "Clerc" ],
          [ "Frédéric", "Bour" ]
        ]
      },
      {
        "references": [ 1976 ],
        "text": "Better error messages for extension constructor type mismatches\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1841, 7808 ],
        "text": "the environment variable OCAMLTOP_INCLUDE_PATH can now\n  specify a list of additional include directories for the ocaml toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6638, 1110 ],
        "text": "introduced a dedicated warning to report\n  unused \"open!\" statements\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "design": [ [ "Leo", "White" ] ],
        "report": [ [ "dwang" ] ],
        "review": []
      },
      {
        "references": [ 1974 ],
        "text": "Trigger warning 5 in \"let _ = e\" and \"ignore e\" if e is of function\n  type and syntactically an application. (For the case of \"ignore e\" the warning\n  already existed, but used to be triggered even when e was not an application.)\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7408, 7846, 2015 ],
        "text": "Check arity of primitives.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2091 ],
        "text": "Add a warning triggered by type declarations \"type t = ()\"\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "report": [ [ "linse" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2004 ],
        "text": "Use common standard library path `lib/ocaml` for Windows,\n  for consistency with OSX & Linux. Previously was located at `lib`.\n  ",
        "breaking change": false,
        "authors": [ [ "Bryan", "Phelps" ], [ "Jordan", "Walke" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 6416, 1120 ],
        "text": "unique printed names for identifiers\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1691 ],
        "text": "add shared_libraries to ocamlc -config exporting\n  SUPPORTS_SHARED_LIBRARIES from Makefile.config.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6913, 1786 ],
        "text": "new -match-context-rows option\n  to control the degree of optimization in the pattern matching compiler.\n  ",
        "breaking change": false,
        "authors": [ [ "Dwight", "Guth" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 1822 ],
        "text": "keep attributes attached to pattern variables from being discarded.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1845 ],
        "text": "new `-dcamlprimc` option to keep the generated C file containing\n  the information about primitives; pass `-fdebug-prefix-map` to the C compiler\n  when supported, for reproducible builds\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1856, 1869 ],
        "text": "use `BUILD_PATH_PREFIX_MAP` when compiling primitives\n  in order to make builds reproducible if code contains uses of\n  `__FILE__` or `__LOC__`\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1906 ],
        "text": "the -unsafe option does not apply to marshalled ASTs passed\n  to the compiler directly or by a -pp preprocessor; add a proper\n  warning (64) instead of a simple stderr message\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 1925 ],
        "text": "Print error locations more consistently between batch mode, toplevel\n  and expect tests\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [
          [ "Thomas", "Refis" ],
          [ "Gabriel", "Scherer" ],
          [ "François", "Bobot" ]
        ]
      },
      {
        "references": [ 1930 ],
        "text": "pass the elements from `BUILD_PATH_PREFIX_MAP` to the assembler\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 1945, 2032 ],
        "text": "new \"-stop-after [parsing|typing]\" option\n  to stop compilation after the parsing or typing pass\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1953 ],
        "text": "Add locations to attributes in the parsetree.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1954 ],
        "text": "Add locations to toplevel directives.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1979 ],
        "text": "Remove support for TERM=norepeat when displaying errors\n  ",
        "breaking change": true,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1960 ],
        "text": "The parser keeps previous location when relocating ast node.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 7864, 2109 ],
        "text": "remove duplicates from spelling suggestions.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Armaël", "Guéneau" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 7548 ],
        "text": "printf example in the tutorial part of the manual\n ",
        "breaking change": false,
        "authors": [ [ "Kostikova", "Oxana" ] ],
        "rewiew": [
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ],
          [ "Marcello", "Seri" ],
          [ "Armaël", "Guéneau" ]
        ]
      },
      {
        "references": [ 7546, 2020 ],
        "text": "preambles and introduction for compiler-libs.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 7547, 2273 ],
        "text": "Tutorial on Lazy expressions and patterns in OCaml Manual\n  ",
        "breaking change": false,
        "authors": [ [ "Ulugbek", "Abdullaev" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7720, 1596 ],
        "text": ", precise the documentation\n  of the maximum indentation limit in Format.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Richard", "Bonichon" ], [ "Pierre", "Weis" ] ]
      },
      {
        "references": [ 7825 ],
        "text": "html manual split compilerlibs from stdlib in the html\n  index of modules\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Perry", "E.", "Metzger" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1209, 2008 ],
        "text": "in the Extension section, use the caml_example environment\n  (uses the compiler to check the example code).\n  This change was made possible by a lot of tooling work from Florian Angeletti:\n  #1702, #1765, #1863, and Gabriel Scherer's #1903.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1788 ],
        "text": ", 1831, 2007, 2198, 2232, move language extensions to the core\n  chapters:\n     - #1788: quoted string description\n     - #1831: local exceptions and exception cases\n     - #2007: 32-bit, 64-bit and native integer literals\n     - #2198: lazy patterns\n     - #2232: short object copy notation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Xavier", "Clerc" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Gabriel", "Scherer" ],
          [ "Jeremy", "Yallop" ]
        ]
      },
      {
        "references": [ 1863 ],
        "text": "caml-tex2, move to compiler-libs\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2105 ],
        "text": "Change verbatim to caml_example in documentation\n  ",
        "breaking change": false,
        "authors": [ [ "Maxime", "Flin" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 2114 ],
        "text": "ocamldoc, improved manpages for documentation inside modules\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2117 ],
        "text": "stdlib documentation, duplicate the operator precedence table\n  from the manual inside a separate \"OCaml_operators\" module.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 2187 ],
        "text": "document \"exception A | pat\" patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Perry", "E.", "Metzger" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 8508 ],
        "text": "refresh \\moduleref macro\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 7725, 1754 ],
        "text": "improve AFL instrumentation for objects and lazy values.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 1631 ],
        "text": "AMD64 code generator: emit shorter instruction sequences for the\n  sign-extension operations.\n  ",
        "breaking change": false,
        "authors": [ [ "LemonBoy" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7246, 2146 ],
        "text": "make a few int64 primitives use [@@unboxed]\n  stubs on 32bits\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1917 ],
        "text": "comballoc: ensure object allocation order is preserved\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6242, 2143, 8558, 8559 ],
        "text": "Optimize some local functions.\n  Local functions that do not escape and whose calls all have\n  the same continuation are lowered into a static-catch handler.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2082 ],
        "text": "New options [-insn-sched] and [-no-insn-sched] to control\n  instruction scheduling.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2239 ],
        "text": "Fix match miscompilation with flambda\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 7198, 7750, 1738 ],
        "text": "add a function (caml_alloc_custom_mem)\n  and three GC parameters to give the user better control of the\n  out-of-heap memory retained by custom values; use the function to\n  allocate bigarrays and I/O channels.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1793 ],
        "text": "add the -m and -M command-line options to ocamlrun.\n  Option -m prints the magic number of the bytecode executable passed\n  as argument, -M prints the magic number expected by ocamlrun.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Xavier", "Clerc" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1867 ],
        "text": "Remove the C plugins mechanism.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Damien", "Doligez" ],
          [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 8627 ],
        "text": "Require SSE2 for 32-bit mingw port to generate correct code\n  for caml_round with GCC 7.4.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7676, 2144 ],
        "text": "Remove old GC heuristic\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1683 ],
        "text": "Change Marshal format to make Custom_tag objects store their\n  length. Old versions of OCaml will no longer be able to parse new marshalled\n  files containing custom blocks, but old files will still parse.\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 1723 ],
        "text": "Remove internal Meta.static_{alloc,free} primitives.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1895 ],
        "text": "Printexc.get_callstack would return only one frame in native\n  code in threads other then the initial one\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1900, 7814 ],
        "text": "avoid exporting non-prefixed identifiers in the debug\n  and instrumented runtimes.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2079 ],
        "text": "Avoid page table lookup in Pervasives.compare with\n  no-naked-pointers\n  ",
        "breaking change": false,
        "authors": [ [ "Sam", "Goldman" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ],
          [ "Stephen", "Dolan" ]
        ]
      },
      {
        "references": [ 7829, 8585 ],
        "text": "Fix pointer comparisons in freelist.c (for 32-bit platforms)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 8567, 8569 ],
        "text": "on ARM64, use 32-bit loads to access caml_backtrace_active\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Greta", "Yorsh" ] ]
      },
      {
        "references": [ 8568 ],
        "text": "Fix a memory leak in mmapped bigarrays\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Jérémie", "Dimino" ] ]
      }
    ],
    " Tools": [
      {
        "references": [ 2182 ],
        "text": "Split Emacs caml-mode as an independent project.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1865 ],
        "text": "support dark themes in Emacs, and clean up usage of\n  deprecated Emacs APIs\n  ",
        "breaking change": false,
        "authors": [ [ "Wilfred", "Hughes" ] ],
        "review": [ [ "Clément", "Pit-Claudel" ] ]
      },
      {
        "references": [ 1590 ],
        "text": "ocamllex-generated lexers can be instructed not to update\n  their lex_curr_p/lex_start_p fields, resulting in a significant\n  performance gain when those fields are not required.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 7843, 2013 ],
        "text": "ocamldoc, better handling of {{!label}text} in the latex\n  backend.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 7844, 2040 ],
        "text": "Emacs, use built-in detection of comments,\n  fixes an imenu crash.\n  ",
        "breaking change": false,
        "authors": [ [ "Wilfred", "Hughes" ] ],
        "review": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 7850 ],
        "text": "Emacs, use symbol boundaries in regular expressions,\n  fixes an imenu crash.\n  ",
        "breaking change": false,
        "authors": [ [ "Wilfred", "Hughes" ] ],
        "review": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 1711 ],
        "text": "the new 'open' flag in OCAMLPARAM takes a comma-separated list of\n  modules to open as if they had been passed via the command line -open flag.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 2000 ],
        "text": "ocamdoc, extended support for \"include module type of ...\"\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 2045 ],
        "text": "ocamlmklib now supports options -args and -args0 to provide extra\n  command-line arguments in a file.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 2189 ],
        "text": "change ocamldep Makefile-output to print each dependency\n  on a new line, for more readable diffs of versioned dependencies.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2223 ],
        "text": "ocamltest: fix the \"bsd\" and \"not-bsd\" built-in actions to\n  recognize all BSD variants\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 1776 ],
        "text": "add -no-install-bytecode-programs and related configure options to\n  control (non-)installation of \".byte\" executables.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1777 ],
        "text": "add -no-install-source-artifacts and related configure options to\n  control installation of .cmt, .cmti, .mli and .ml files.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Sébastien", "Hinderer" ]
        ]
      },
      {
        "references": [ 1781 ],
        "text": "cleanup of the manual's build process.\n  ",
        "breaking change": false,
        "authors": [ [ "steinuil" ] ],
        "review": [
          [ "Marcello", "Seri" ],
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 1797 ],
        "text": "remove the deprecated Makefile.nt files.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1805 ],
        "text": "fix the bootstrap procedure and its documentation.\n  ",
        "breaking change": false,
        "authors": [
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ]
        ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1840 ],
        "text": "build system enhancements.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 1852 ],
        "text": "merge runtime directories\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1854 ],
        "text": "remove the no longer defined BYTECCCOMPOPTS build variable.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2024 ],
        "text": "stop supporting obsolete platforms: Rhapsody (old beta\n  version of MacOS X, BeOS, alpha*-*-linux*, mips-*-irix6*,\n  alpha*-*-unicos, powerpc-*-aix, *-*-solaris2*, mips*-*-irix[56]*,\n  i[3456]86-*-darwin[89].*, i[3456]86-*-solaris*, *-*-sunos* *-*-unicos.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "Armaël", "Guéneau" ]
        ]
      },
      {
        "references": [ 2053 ],
        "text": "allow unix, vmthreads and str not to be built.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 2059 ],
        "text": "stop defining OCAML_STDLIB_DIR in s.h.\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2066 ],
        "text": "remove the standard_runtime configuration variable.\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Stephen", "Dolan" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 2139 ],
        "text": "use autoconf to generate the compiler's configuration script\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2148 ],
        "text": "fix a parallel build bug involving CamlinternalLazy.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 2264, 7904 ],
        "text": "the configure script now sets the Unicode handling mode\n  under Windows according to the value of the variable WINDOWS_UNICODE_MODE. If\n  WINDOWS_UNICODE_MODE is \"ansi\" then it is assumed to be the current code page\n  encoding. If WINDOWS_UNICODE_MODE is \"compatible\" or empty or not set at all,\n  then encoding is UTF-8 with code page fallback.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2266 ],
        "text": "ensure Cygwin ports configure with `EXE=.exe`, or the compiler is\n  unable to find the camlheader files (subtle regression of #2139/2041)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 7919, 2311 ],
        "text": "Fix assembler detection in configure\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2295 ],
        "text": "Restore support for bytecode target XLC/AIX/Power\n  ",
        "breaking change": false,
        "authors": [ [ "Konstantin", "Romanov" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 8528 ],
        "text": "get rid of the direct call to the C preprocessor in the testsuite\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7938, 8532 ],
        "text": "Fix alignment detection for ints on 32-bits platforms\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 8533 ],
        "text": "Remove some unused configure tests\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 2207, 8604 ],
        "text": "Add opam files to allow pinning\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Greta", "Yorsh" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 8616 ],
        "text": "configure: use variables rather than arguments for a few options\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 8632 ],
        "text": "Correctly propagate flags for --with-pic in configure.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 8673 ],
        "text": "restore SpaceTime and libunwind support in configure script\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 7918, 1703, 1944, 2213, 2257 ],
        "text": "Add the module\n  Compile_common, which factorizes the common part in Compile and\n  Optcompile. This also makes the pipeline more modular.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "help": [ [ "Gabriel", "Scherer" ], [ "Valentin", "Gatien-Baron" ] ],
        "report": [ [ "by", "Clément", "Franchini" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 292 ],
        "text": "use Menhir as the parser generator for the OCaml parser.\n  Satellite GPRs: #1844, #1846, #1853, #1850, #1934, #2151,\n  #2174\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Frédéric", "Bour" ],
          [ "Thomas", "Refis" ],
          [ "François", "Pottier" ]
        ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Leo", "White" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 374 ],
        "text": "use Misc.try_finally for resource cleanup in the compiler\n  codebase. This should fix the problem of catch-and-reraise `try .. with`\n  blocks destroying backtrace information -- in the compiler.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "help": [ [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1148, 1287, 1288, 1874 ],
        "text": "significant improvements\n  of the tools/check-typo script used over the files of the whole repository;\n  contributors are now expected to check that check-typo passes on their\n  pull requests; see CONTRIBUTING.md for more details.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1610, 2252 ],
        "text": "Remove positions from paths\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1745 ],
        "text": "do not generalize the type of every sub-pattern,\n  only of variables. (preliminary work for GADTs in or-patterns)\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1909 ],
        "text": "unsharing pattern types (preliminary work for GADTs in or-patterns)\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "help": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1748 ],
        "text": "do not error when instantiating polymorphic fields in patterns.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2317 ],
        "text": "type_let: be more careful generalizing parts of the pattern\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1746 ],
        "text": "remove unreachable error variant: Make_seltype_nongen.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1747 ],
        "text": "type_cases: always propagate (preliminary work\n  for GADTs in or-patterns)\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1811 ],
        "text": "shadow the polymorphic comparison in the middle-end\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1833 ],
        "text": "allow non-val payloads in CMM Ccatch handlers\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Fowler" ] ],
        "review": [ [ "Xavier", "Clerc" ] ]
      },
      {
        "references": [ 1866 ],
        "text": "document the release process\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 1886 ],
        "text": "move the Location.absname reference to Clflags.absname\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1894 ],
        "text": "generalize highlight_dumb in location.ml to handle highlighting\n  several locations\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1903 ],
        "text": "parsetree, add locations to all nodes with attributes\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1905 ],
        "text": "add check-typo-since to check the files changed\n  since a given git reference\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1910 ],
        "text": "improve the check-typo use of .gitattributes\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1938 ],
        "text": "always check ast invariants after preprocessing\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1941 ],
        "text": "refactor the command line parsing of ocamlcp and ocamloptp\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1948 ],
        "text": "Refactor Stdlib.Format. Notably, use Stdlib.Stack and Stdlib.Queue,\n  and avoid exceptions for control flow.\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Keleshev" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1952 ],
        "text": "refactor the code responsible for displaying errors and warnings\n  `Location.report_error` is removed, use `Location.print_report` instead\n  ",
        "breaking change": true,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7835, 1980, 8548, 8586 ],
        "text": "separate scope from stamp in idents and explicitly\n  rescope idents when substituting signatures.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 1996 ],
        "text": "expose Pprintast.longident to help compiler-libs users print\n  Longident.t values.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 2030 ],
        "text": "makefile targets to build AST files of sources\n  for parser testing. See parsing/HACKING.adoc.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 2041 ],
        "text": "add a cache for looking up files in the load path\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 2047, 2269 ],
        "text": "a new type for unification traces\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2055 ],
        "text": "Add [Linearize.Lprologue].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 2056 ],
        "text": "Use [Backend_var] rather than [Ident] from [Clambda] onwards;\n  use [Backend_var.With_provenance] for variables in binding position.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 2060 ],
        "text": "\"Phantom let\" support for the Clambda language.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2065 ],
        "text": "Add [Proc.destroyed_at_reloadretaddr].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2070 ],
        "text": "\"Phantom let\" support for the Cmm language.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 2072 ],
        "text": "Always associate a scope to a type\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 2074 ],
        "text": "Correct naming of record field inside [Ialloc] terms.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 2076 ],
        "text": "Add [Targetint.print].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 2080 ],
        "text": "Add [Proc.dwarf_register_numbers] and\n  [Proc.stack_ptr_dwarf_register_number].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Bernhard", "Schommer" ] ]
      },
      {
        "references": [ 2088 ],
        "text": "Add [Clambda.usymbol_provenance].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 2152, 2517 ],
        "text": "refactorize the fixpoint to compute type-system\n  properties of mutually-recursive type declarations.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Rodolphe", "Lepigre" ] ],
        "review": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 2156 ],
        "text": "propagate more type information through Lambda and Clambda\n  intermediate language, as a preparation step for more future optimizations\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Alain", "Frisch" ] ],
        "cross-reviewed": [ [ "themselves" ] ]
      },
      {
        "references": [ 2160 ],
        "text": "restore --disable-shared support and ensure testsuite runs correctly\n  when compiled without shared library support.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 2173 ],
        "text": "removed TypedtreeMap\n  ",
        "breaking change": true,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7867 ],
        "text": "Fix #mod_use raising an exception for filenames with no\n  extension.\n  ",
        "breaking change": false,
        "authors": [ [ "Geoff", "Gole" ] ]
      },
      {
        "references": [ 2100 ],
        "text": "Fix Unix.getaddrinfo when called on strings containing\n  null bytes; it would crash the GC later on.\n  ",
        "breaking change": false,
        "authors": [ [ "Joe" ] ],
        "report": [ [ "Joe" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 7847, 2019 ],
        "text": "Fix an infinite loop that could occur when the\n  (Menhir-generated) parser encountered a syntax error in a certain\n  specific state.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Pottier" ] ],
        "report": [ [ "Stefan", "Muenzel" ] ],
        "review": [
          [ "Frédéric", "Bour" ],
          [ "Thomas", "Refis" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1626 ],
        "text": "Do not allow recursive modules in `with module`\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 7726, 1676 ],
        "text": "Recursive modules, equi-recursive types and stack overflow\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7723, 1698 ],
        "text": "Ensure `with module` and `with type` do not weaken\n  module aliases.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1719 ],
        "text": "fix Pervasives.LargeFile functions under Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1739 ],
        "text": "ensure ocamltest waits for child processes to terminate on Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 7554, 1751 ],
        "text": "Lambda.subst: also update debug event environments\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7238, 1825 ],
        "text": "in Unix.in_channel_of_descr and Unix.out_channel_of_descr,\n  raise an error if the given file description is not suitable for\n  character-oriented I/O, for example if it is a block device or a\n  datagram socket.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Jérémie", "Dimino" ], [ "Perry", "E.", "Metzger" ] ]
      },
      {
        "references": [ 7799, 1820 ],
        "text": "fix bug where Scanf.format_from_string could fail when\n  the argument string contained characters that require escaping.\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ], [ "Nicolás", "Ojeda", "Bär" ]
        ],
        "report": [ [ "Guillaume", "Melquiond" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1843 ],
        "text": "ocamloptp was doing the wrong thing with option -inline-max-unroll.\n  ",
        "breaking change": false,
        "authors": [ [ "@poechsel" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1890 ],
        "text": "remove last use of Ctype.unroll_abbrev\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1893 ],
        "text": "dev-branch only, warning 40(name not in scope) triggered spurious\n  warnings 49(missing cmi) with -no-alias-deps.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1912 ],
        "text": "Allow quoted strings, octal/unicode escape sequences and identifiers\n  containing apostrophes in ocamllex actions and comments.\n  ",
        "breaking change": false,
        "authors": [ [ "Pieter", "Goetschalckx" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 7828, 1935 ],
        "text": "correct the conditions that generate warning 61,\n  Unboxable_type_in_prim_decl\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Muenzel" ] ]
      },
      {
        "references": [ 1958 ],
        "text": "allow [module M(_:S) = struct end] syntax\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1970 ],
        "text": "fix order of floatting documentation comments in classes\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1977 ],
        "text": "[@@ocaml.warning \"...\"] attributes attached to type declarations are\n  no longer ignored.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7830, 1987 ],
        "text": "fix ocamldebug crash when printing a value in the scope of\n  an `open` statement for which the `.cmi` is not available.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Jocelyn", "Sérot" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7854, 2062 ],
        "text": "fix an issue where the wrong locale may be used when using\n  the legacy ANSI encoding under Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Tiphaine", "Turpin" ] ]
      },
      {
        "references": [ 2083 ],
        "text": "Fix excessively aggressive float unboxing and introduce similar fix\n  as a preventative measure for boxed int unboxing.\n  ",
        "breaking change": false,
        "authors": [
          [ "Thomas", "Refis" ], [ "Mark", "Shinwell" ], [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 2130 ],
        "text": "fix printing of type variables with a quote in their name\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Armaël", "Guéneau" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2131 ],
        "text": "fix wrong calls to Env.normalize_path on non-module paths\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 2175 ],
        "text": "Apply substitution to all modules when packing\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 2220 ],
        "text": "Remove duplicate process management code in\n  otherlibs/threads/unix.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Romain", "Beauxis" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 2231 ],
        "text": "Env: always freshen persistent signatures before using them\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 7851, 8570 ],
        "text": "Module type of allows to transform a malformed\n  module type into a vicious signature, breaking soundness\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7923, 2259 ],
        "text": "fix regression in FlexDLL bootstrapped build caused by\n  refactoring the root Makefile for Dune in #2093)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Marc", "Lasson" ] ]
      },
      {
        "references": [ 7929, 2261 ],
        "text": "Subst.signature: call cleanup_types exactly once\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Daniel", "Bünzli" ], [ "Jon", "Ludlam" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 8550, 8552 ],
        "text": "Soundness issue with class generalization\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Leo", "White" ], [ "Thomas", "Refis" ] ]
      }
    ]
  },
  "OCaml 4.07.1 (4 October 2018)": {
    " Bug fixes:": [
      {
        "references": [ 7815, 1896 ],
        "text": "major GC crash with first-fit policy\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Damien", "Doligez" ] ],
        "report": [ [ "Joris", "Giovannangeli" ] ]
      },
      {
        "references": [ 7818, 2051 ],
        "text": "Remove local aliases in functor argument types,\n  to prevent the aliasing of their target.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "mandrykin" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7820, 1897 ],
        "text": "Fix Array.of_seq. This function used to apply a circular\n  permutation of one cell to the right on the sequence.\n  ",
        "breaking change": false,
        "authors": [ [ "Thierry", "Martinez" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 7821, 1908 ],
        "text": "make sure that the compilation of extension\n  constructors doesn't cause the compiler to load more cmi files\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7824, 1914 ],
        "text": "subtype_row: filter out absent fields when row is closed\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Thomas", "Refis" ] ],
        "report": [ [ "talex" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1915 ],
        "text": "rec_check.ml is too permissive for certain class declarations.\n  ",
        "breaking change": false,
        "authors": [ [ "Alban", "Reynaud" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7833, 1946 ],
        "text": "typecore: only 1k existential per match, not 100k\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Jerome", "Simeon" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7838 ],
        "text": "-principal causes assertion failure in type checker\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      }
    ]
  },
  "OCaml 4.07.0 (10 July 2018)": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Language features:": [
      {
        "references": [ 6023, 1648 ],
        "text": "Allow type-based selection of GADT constructors.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1546 ],
        "text": "Allow empty variants.\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [ [ "Gabriel", "Radanne" ], [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 4170, 1674 ],
        "text": "add the constant `Float.pi`.\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6139, 1685 ],
        "text": "Move the Bigarray module to the standard library. Keep the\n  bigarray library as on overlay adding the deprecated map_file functions.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7528, 1500 ],
        "text": "add a Format.pp_set_geometry function to avoid memory\n  effects in set_margin and set_max_indent.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Richard", "Bonichon" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabiel", "Scherer" ],
          [ "Pierre", "Weis" ]
        ]
      },
      {
        "references": [ 7690, 1528 ],
        "text": "fix the float_of_string function for hexadecimal floats\n  with very large values of the exponent.\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 1002 ],
        "text": "add a new `Seq` module defining a list-of-thunks style iterator.\n  Also add `{to,of}_seq` to several standard modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "François", "Bobot" ] ]
      },
      {
        "references": [ 1010 ],
        "text": "pack all standard library modules into a single module Stdlib\n  which is the default opened module (Stdlib itself includes Pervasives) to free\n  up the global namespace for other standard libraries, while still allowing any\n  OCaml standard library module to be referred to as Stdlib.Module). This is\n  implemented efficiently using module aliases (prefixing all modules with\n  Stdlib__, e.g. Stdlib__string).\n  ",
        "breaking change": true,
        "authors": [
          [ "Jérémie", "Dimino" ],
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ]
        ],
        "review": [ [ "David", "Allsopp" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1637 ],
        "text": "String.escaped is faster and does not allocate when called with a\n  string that does not contain any characters needing to be escaped.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1638 ],
        "text": "add a Float module.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 1697 ],
        "text": "Tune [List.init] tailrec threshold so that it does not stack\n  overflow when compiled with the Js_of_ocaml backend.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "reviewed": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 7745, 1629 ],
        "text": "Graphics.open_graph displays the correct window title on\n  Windows again (fault introduced by 4.06 Unicode changes).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1406 ],
        "text": "Unix.isatty now returns true in the native Windows ports when\n  passed a file descriptor connected to a Cygwin PTY. In particular, compiler\n  colors for the native Windows ports now work under Cygwin/MSYS2.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 1451 ],
        "text": "[getpwuid], [getgrgid], [getpwnam], [getgrnam] now raise Unix error\n  instead of returning [Not_found] when interrupted by a signal.\n  ",
        "breaking change": false,
        "authors": [ [ "Arseniy", "Alekseyev" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1477 ],
        "text": "raw_spacetime_lib can now be used in bytecode.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1533 ],
        "text": "(a) The implementation of Thread.yield for system thread\n  now uses nanosleep(1) for enabling better preemption.\n  (b) Thread.delay is now an alias for Unix.sleepf.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 7663, 1694 ],
        "text": "print the whole cycle and add a reference to the manual in\n  the unsafe recursive module evaluation error message.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Matej", "Košík" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1166 ],
        "text": "In OCAMLPARAM, an alternative separator can be specified as\n  first character (instead of comma) in the set \":|; ,\"\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 1358 ],
        "text": "Fix usage warnings with no mli file.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1428 ],
        "text": "give a non dummy location for warning 49 (no cmi found).\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 1491 ],
        "text": "Improve error reporting for ill-typed applicative functor\n  types, F(M).t.\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1496 ],
        "text": "Refactor the code printing explanation for unification type errors,\n  in order to avoid duplicating pattern matches.\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1505 ],
        "text": "Add specific error messages for unification errors involving\n  functions of type \"unit -> _\".\n  ",
        "breaking change": false,
        "authors": [
          [ "Arthur", "Charguéraud" ], [ "Armaël", "Guéneau" ]
        ],
        "help": [ [ "Leo", "White" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1510 ],
        "text": "Add specific explanation for unification errors caused by type\n  constraints propagated by keywords (such as if, while, for...).\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ], [ "Gabriel", "Scherer" ] ],
        "design": [ [ "Arthur", "Charguéraud" ] ],
        "review": [
          [ "Frédéric", "Bour" ],
          [ "Gabriel", "Radanne" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 1515 ],
        "text": "honor the BUILD_PATH_PREFIX_MAP environment variable\n  to enable reproducible builds.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "help": [ [ "Ximin", "Luo" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1534 ],
        "text": "Extend the warning printed when (*) is used, adding a hint to\n  suggest using ( * ) instead.\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ],
        "help": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1552, 1577 ],
        "text": "do not warn about ambiguous variables in guards\n  (warning 57) when the ambiguous values have been filtered by\n  a previous clause.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 1554 ],
        "text": "warnings 52 and 57: fix reference to manual detailed explanation.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1618 ],
        "text": "add the -dno-unique-ids and -dunique-ids compiler flags.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Leo", "White" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1649 ],
        "text": "change compilation order of toplevel definitions, so that some\n  warnings emitted by the bytecode compiler appear more in-order than before.\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ], [ "advice" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1806 ],
        "text": "add linscan to OCAMLPARAM options.\n  ",
        "breaking change": false,
        "authors": [ [ "Raja", "Boujbel" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 7630, 1401 ],
        "text": "Faster compilation of large modules with Flambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [
          [ "Emilio", "Jesús", "Gallego", "Arias" ],
          [ "Pierre-Marie", "Pédrot" ],
          [ "Paul", "Steckler" ]
        ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7630, 1455 ],
        "text": "Disable CSE for the initialization function.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [ [ "Emilio", "Jesús", "Gallego", "Arias" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1370 ],
        "text": "Fix code duplication in Cmmgen.\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ] ],
        "help": [ [ "Pierre", "Chambart" ] ],
        "reviews": [ [ "Gabriel", "Scherer" ], [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 1486 ],
        "text": "ARM 32-bit port: add support for ARMv8 in 32-bit mode,\n  a.k.a. AArch32.\n  For this platform, avoid ITE conditional instruction blocks and use\n  simpler IT blocks instead.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1487 ],
        "text": "Treat negated float comparisons more directly.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1573 ],
        "text": "emitcode: merge events after instructions reordering.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "help": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 1606 ],
        "text": "Simplify the semantics of Lambda.free_variables and Lambda.subst,\n  including some API changes in bytecomp/lambda.mli.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1613 ],
        "text": "ensure that set-of-closures are processed first so that other\n  entries in the let-rec symbol do not get dummy approximations.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Xavier", "Clerc" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1617 ],
        "text": "Make string/bytes distinguishable in the bytecode.\n  ",
        "breaking change": true,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "reviewed": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 1627 ],
        "text": "Reduce cmx sizes by sharing variable names (Flambda only).\n  ",
        "breaking change": false,
        "authors": [ [ "Fuyong", "Quah" ], [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Clerc" ] ]
      },
      {
        "references": [ 1665 ],
        "text": "reduce the size of cmx files in classic mode by dropping the\n  bodies of functions that will not be inlined.\n  ",
        "breaking change": false,
        "authors": [ [ "Fuyong", "Quah" ] ],
        "review": [ [ "Leo", "White" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1666 ],
        "text": "reduce the size of cmx files in classic mode by dropping the\n  bodies of functions that cannot be reached from the module block.\n  ",
        "breaking change": false,
        "authors": [ [ "Fuyong", "Quah" ] ],
        "review": [ [ "Leo", "White" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1686 ],
        "text": "Turn off by default flambda invariants checks.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1707 ],
        "text": "Add [Closure_origin.t] to trace inlined functions to prevent\n  infinite loops from repeatedly inlining copies of the same function.\n  ",
        "breaking change": false,
        "authors": [ [ "Fu", "Yong", "Quah" ] ]
      },
      {
        "references": [ 1740 ],
        "text": "make sure startup.o is always linked in when using\n  \"-output-complete-obj\". Previously, it was always linked in only on some\n  platforms, making this option unusable on platforms where it wasn't.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Sébastien", "Hinderer" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 515 ],
        "text": "#676 #7173: Add a public C API for weak arrays and\n  ephemerons. Update the documentation for a 4.03 change: finalisation\n  functions are now run before the erasure of the corresponding\n  values.\n  ",
        "breaking change": false,
        "authors": [
          [ "François", "Bobot" ], [ "Jacques-Henri", "Jourdan" ]
        ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Damien", "Doligez" ],
          [ "Frédéric", "Bour" ]
        ]
      },
      {
        "references": [ 6411, 1535 ],
        "text": "don't compile everything with -static-libgcc on mingw32,\n  only dllbigarray.dll and libbigarray.a. Allows the use of C++ libraries which\n  raise exceptions.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7100, 1476 ],
        "text": "trigger a minor GC when custom blocks accumulate\n  in minor heap.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "talex" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1431 ],
        "text": "remove ocamlrun dependencies on curses/terminfo/termcap C library.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 1478 ],
        "text": "The Spacetime profiler now works under Windows (but it is not yet\n  able to collect profiling information from C stubs).\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1483 ],
        "text": "fix GC freelist accounting for chunks larger than the maximum block\n  size.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1526 ],
        "text": "install the debug and instrumented runtimes\n  (lib{caml,asm}run{d,i}.a).\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "reminded": [ [ "Julia", "Lawall" ] ]
      },
      {
        "references": [ 1563 ],
        "text": "simplify implementation of LSRINT and ASRINT.\n  ",
        "breaking change": false,
        "authors": [ [ "Max", "Mouratov" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 1644 ],
        "text": "remove caml_alloc_float_array from the bytecode primitives list\n  (it's a native code primitive).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1701 ],
        "text": "fix missing root bug in #1476.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1752 ],
        "text": "do not alias function arguments to sigprocmask.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 1753 ],
        "text": "avoid potential off-by-one overflow in debugger socket path length.\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 7643, 1377 ],
        "text": "ocamldep, fix an exponential blowup in presence of nested\n  structures and signatures, e.g. \"include struct … include(struct … end) … end\"\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7687, 1653 ],
        "text": "deprecate -thread option,\n  which is equivalent to -I +threads.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7710 ],
        "text": "`ocamldep -sort` should exit with nonzero code in case of\n  cyclic dependencies.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Mantis", "user", "baileyparker" ] ]
      },
      {
        "references": [ 1537 ],
        "text": "boot/ocamldep is no longer included in the source distribution;\n  boot/ocamlc -depend can be used in its place.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1585 ],
        "text": "optimize output of \"ocamllex -ml\".\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1667 ],
        "text": "add command-line options -no-prompt, -no-version, -no-time,\n  -no-breakpoint-message and -topdirs-path to ocamldebug.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1695 ],
        "text": "add the -null-crc command-line option to ocamlobjinfo.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1710 ],
        "text": "ocamldoc, improve the 'man' rendering of subscripts and\n  superscripts.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1771 ],
        "text": "ocamldebug, avoid out of bound access.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 7613 ],
        "text": "minor rewording of the \"refutation cases\" paragraph.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7647, 1384 ],
        "text": "emphasize ocaml.org website and forum in README.\n  ",
        "breaking change": false,
        "authors": [ [ "Yawar", "Amin" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7698, 1545 ],
        "text": "improve wording in OCaml manual in several places,\n  mostly in Chapter 1.  This addresses the easier changes suggested in the PR.\n  ",
        "breaking change": false,
        "authors": [ [ "Jim", "Fehrle" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1540 ],
        "text": "manual, decouple verbatim and toplevel style in code examples.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1556 ],
        "text": "manual, add a consistency test for manual references inside\n  the compiler source code.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1647 ],
        "text": "manual, subsection on record and variant disambiguation.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1702 ],
        "text": "manual, add a signature mode for code examples.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1741 ],
        "text": "manual, improve typesetting and legibility in HTML output.\n  ",
        "breaking change": false,
        "authors": [ [ "steinuil" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1757 ],
        "text": "style the html manual, changing type and layout.\n  ",
        "breaking change": false,
        "authors": [ [ "Charles", "Chamberlain" ] ],
        "review": [
          [ "Florian", "Angeletti" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Radanne" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1765 ],
        "text": "manual, ellipsis in code examples.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1767 ],
        "text": "change html manual to use relative font sizes.\n  ",
        "breaking change": false,
        "authors": [ [ "Charles", "Chamberlain" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Perry", "E.", "Metzger" ],
          [ "Josh", "Berdine" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1779 ],
        "text": "integrate the Bigarray documentation into the main manual.\n  ",
        "breaking change": false,
        "authors": [ [ "Perry", "E.", "Metzger" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Xavier", "Clerc" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 7611, 1491 ],
        "text": "reject the use of generative functors as applicative.\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7706, 1565 ],
        "text": "in recursive value declarations, track\n  static size of locally-defined variables.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7717, 1593 ],
        "text": "in recursive value declarations, don't treat\n  unboxed constructor size as statically known.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7767, 1712 ],
        "text": "restore legacy treatment of partially-applied\n  labeled functions in 'let rec' bindings.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Ivan", "Gotovchits" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7787, 1652, 1743 ],
        "text": "Don't remove module aliases in `module type of`\n  and `with module`.\n  The old behaviour can be obtained using the `[@remove_aliases]` attribute.\n  ",
        "breaking change": true,
        "authors": [ [ "Leo", "White" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1468 ],
        "text": "Do not enrich type_decls with incoherent manifests.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1469 ],
        "text": "Use the information from [@@immediate] annotations when\n  computing whether a type can be [@@unboxed].\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Stephan", "Muenzel" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1513 ],
        "text": "Allow compilation units to shadow sub-modules of Pervasives.\n  For instance users can now use a largeFile.ml file in their project.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Radanne" ]
        ]
      },
      {
        "references": [ 1516 ],
        "text": "Allow float array construction in recursive bindings\n  when configured with -no-flat-float-array.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1583 ],
        "text": "propagate refined ty_arg to Parmatch checks.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1609 ],
        "text": "Changes to ambivalence scope tracking.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1628 ],
        "text": "Treat reraise and raise_notrace as nonexpansive.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1778 ],
        "text": "Fix Soundness bug with non-generalized type variable and\n  local modules.  This is the same bug as #7414, but using local\n  modules instead of non-local ones.\n  ",
        "breaking change": true,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 5219, 1680, 1877 ],
        "text": "use 'install' instead of 'cp'\n  in install scripts.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Sébastien", "Hinderer" ], [ "Valentin", "Gatien-Baron" ]
        ]
      },
      {
        "references": [ 7679 ],
        "text": "make sure .a files are erased before calling ar rc, otherwise\n  leftover .a files from an earlier compilation may contain unwanted modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1571 ],
        "text": "do not perform architecture tests on 32-bit platforms, allowing\n  64-bit back-ends to use 64-bit specific constructs.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 7738, 1624 ],
        "text": "Asmlink.reset also resets lib_ccobjs/ccopts.\n  ",
        "breaking change": false,
        "authors": [ [ "Cedric", "Cellier" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1488, 1560 ],
        "text": "Refreshing parmatch.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 1502 ],
        "text": "more command line options for expect tests.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1511 ],
        "text": "show code at error location in expect-style tests,\n  using new Location.show_code_at_location function.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Armaël", "Guéneau" ] ],
        "review": [ [ "Valentin", "Gatien-Baron" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1519, 1532, 1570 ],
        "text": "migrate tests to ocamltest.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Valentin", "Gatien-Baron" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 1520 ],
        "text": "more robust implementation of Misc.no_overflow_mul.\n  ",
        "breaking change": false,
        "authors": [ [ "Max", "Mouratov" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1557 ],
        "text": "Organise and simplify translation of primitives.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [
          [ "François", "Bobot" ], [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 1567 ],
        "text": "register all idents relevant for reraise.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 1586 ],
        "text": "testsuite: 'make promote' for ocamltest tests.\n  (The new \"-promote\" option for ocamltest is experimental\n  and subject to change/removal).\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1619 ],
        "text": "expect_test: print all the exceptions, even the unexpected ones.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 1621 ],
        "text": "expect_test: make sure to not use the installed stdlib.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1646 ],
        "text": "add ocamldoc test to ocamltest and\n  migrate ocamldoc tests to ocamltest.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1663 ],
        "text": "refactor flambda specialise/inlining handling.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Xavier", "Clerc" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1679 ],
        "text": "remove Pbittest from primitives in lambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1704 ],
        "text": "Make Ident.t abstract and immutable.\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1699 ],
        "text": "Clean up Maps and Sets throughout the compiler.\n  Remove the Tbl module in favor of dedicated Maps.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 4499, 1479 ],
        "text": "Use native Windows API to implement Sys.getenv,\n  Unix.getenv and Unix.environment under Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 5250, 1435 ],
        "text": "on Cygwin, when ocamlrun searches the path\n  for a bytecode executable file, skip directories and other\n  non-regular files, like other Unix variants do.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6394, 1425 ],
        "text": "fix fatal_error from Parmatch.get_type_path.\n  ",
        "breaking change": false,
        "authors": [ [ "Virgile", "Prevosto" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Thomas", "Refis" ],
          [ "Jacques", "Garrigue" ]
        ]
      },
      {
        "references": [ 6604, 931 ],
        "text": "Only allow directives with filename and at the beginning of\n  the line.\n  ",
        "breaking change": true,
        "authors": [ [ "Tadeu", "Zagallo" ] ],
        "report": [ [ "Roberto", "Di", "Cosmo" ] ],
        "review": [
          [ "Hongbo", "Zhang" ],
          [ "David", "Allsopp" ],
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 7138, 7701, 1693 ],
        "text": "Keep documentation comments\n  even in empty structures and signatures.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Florian", "Angeletti" ] ],
        "report": [ [ "Anton", "Bachin" ] ]
      },
      {
        "references": [ 7178, 7253, 7796, 1790 ],
        "text": "Make sure a function\n  registered with \"at_exit\" is executed only once when the program exits.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ],
        "review": [ [ "Max", "Mouratov" ] ]
      },
      {
        "references": [ 7391, 1620 ],
        "text": "Do not put a dummy method in object types.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7660, 1445 ],
        "text": "Use native Windows API to implement Unix.utimes in order to\n  avoid unintended shifts of the argument timestamp depending on DST setting.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7668 ],
        "text": "-principal is broken with polymorphic variants.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 7680, 1497 ],
        "text": "Incorrect interaction between Matching.for_let and\n  Simplif.simplify_exits.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Vincent", "Laviron" ] ],
        "review": [ [ "Vincent", "Laviron" ] ]
      },
      {
        "references": [ 7682, 1495 ],
        "text": "fix [@@unboxed] for records with 1 polymorphic field.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Stéphane", "Graham-Lengrand" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7695, 1541 ],
        "text": "Fatal error: exception Ctype.Unify(_) with field override\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 7704, 1564 ],
        "text": "use proper variant tag in non-exhaustiveness warning.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7711, 1581 ],
        "text": "Internal typechecker error triggered by a constraint on\n   self type in a class type.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7712, 1576 ],
        "text": "assertion failure with type abbreviations.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Michael", "O'Connor" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7747 ],
        "text": "Type checker can loop infinitely and consume all computer memory.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "kantian" ] ]
      },
      {
        "references": [ 7751, 1657 ],
        "text": "The toplevel prints some concrete types as abstract.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Matej", "Kosik" ] ]
      },
      {
        "references": [ 7765, 1718 ],
        "text": "When unmarshaling bigarrays, protect against integer\n  overflows in size computations.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Maximilian", "Tschirschnitz" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7760, 1713 ],
        "text": "Exact selection of lexing engine, that is\n  correct \"Segfault in ocamllex-generated code using 'shortest'\".\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ], [ "Frédéric", "Bour" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7769, 1714 ],
        "text": "calls to Stream.junk could, under some conditions, be\n  ignored when used on streams based on input channels.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Michael", "Perin" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7793, 1766 ],
        "text": "the toplevel #use directive now accepts sequences of ';;'\n  tokens. This fixes a bug in which certain files accepted by the compiler were\n  rejected by ocamldep.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 1517 ],
        "text": "More robust handling of type variables in mcomp.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 1530, 1574 ],
        "text": "testsuite, fix 'make parallel' and 'make one DIR=...'\n  to work on ocamltest-based tests.\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ], [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1550, 1555 ],
        "text": "Make pattern matching warnings more robust\n  to ill-typed columns.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "help": [ [ "Gabriel", "Scherer" ], [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 1614 ],
        "text": "consider all bound variables when inlining, fixing a compiler\n  fatal error.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 1622 ],
        "text": "fix bug in the expansion of command-line arguments under Windows\n  which could result in some elements of Sys.argv being truncated in some cases.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1623 ],
        "text": "Segfault on Windows 64 bits when expanding wildcards in arguments.\n  ",
        "breaking change": false,
        "authors": [ [ "Marc", "Lasson" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Alain", "Frisch" ],
          [ "Sébastien", "Hinderer" ],
          [ "Xavier", "Leroy" ],
          [ "Nicolás", "Ojeda", "Bär" ]
        ]
      },
      {
        "references": [ 1661 ],
        "text": "more precise principality warning regarding record fields\n  disambiguation.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1687 ],
        "text": "fix bug in the printing of short functor types \"(S1 -> S2) -> S3\".\n  ",
        "breaking change": false,
        "authors": [ [ "Pieter", "Goetschalckx" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1722 ],
        "text": "Scrape types in Typeopt.maybe_pointer.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 1755 ],
        "text": "ensure that a bigarray is never collected while reading complex\n  values.\n  ",
        "breaking change": false,
        "authors": [
          [ "Xavier", "Clerc" ], [ "Mark", "Shinwell" ], [ "Leo", "White" ]
        ],
        "report": [ [ "Chris", "Hardin" ] ],
        "reviews": [ [ "Stephen", "Dolan" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1764 ],
        "text": "in byterun/memory.c, struct pool_block, use C99 flexible arrays\n  if available.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Max", "Mouratov" ] ]
      },
      {
        "references": [ 1774 ],
        "text": "ocamlopt for ARM could generate VFP loads and stores with bad\n  offsets, rejected by the assembler.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1808 ],
        "text": "handle `[@inlined]` attributes under a module constraint.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1810 ],
        "text": "use bit-pattern comparison when meeting float approximations.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Christophe", "Troestler" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1835 ],
        "text": "Fix off-by-one errors in Weak.get_copy and Weak.blit.\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ]
      },
      {
        "references": [ 1849 ],
        "text": "bug in runtime function generic_final_minor_update()\n  that could lead to crashes when Gc.finalise_last is used.\n  ",
        "breaking change": false,
        "authors": [ [ "Yuriy", "Vostrikov" ] ],
        "report": [ [ "Yuriy", "Vostrikov" ] ],
        "review": [ [ "François", "Bobot" ] ]
      }
    ]
  },
  "OCaml 4.06.1 (16 Feb 2018):": {
    " Bug fixes:": [
      {
        "references": [ 7661, 1459 ],
        "text": "fix faulty compilation of patterns\n  using extensible variants constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ] ],
        "report": [
          [ "Abdelraouf", "Ouadjaout" ], [ "Thibault", "Suzanne" ]
        ],
        "review": [ [ "Thomas", "Refis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7702, 1553 ],
        "text": "refresh raise counts when inlining a function\n  ",
        "breaking change": false,
        "authors": [ [ "Vincent", "Laviron" ], [ "Xavier", "Clerc" ] ],
        "report": [ [ "Cheng", "Sun" ] ]
      },
      {
        "references": [ 7704, 1559 ],
        "text": "Soundness issue with private rows and pattern-matching\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7705, 1558 ],
        "text": "add missing bounds check in Bigarray.Genarray.nth_dim.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7713, 1587 ],
        "text": "Make pattern matching warnings more robust\n  to ill-typed columns; this is a backport of #1550 from 4.07+dev\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Andreas", "Hauptmann" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1470 ],
        "text": "Don't commute negation with float comparison\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1538 ],
        "text": "Make pattern matching compilation more robust to ill-typed columns\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Luc", "Maranget" ] ]
      }
    ]
  },
  "OCaml 4.06.0 (3 Nov 2017):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Language features:": [
      {
        "references": [ 6271, 7529, 1249 ],
        "text": "Support \"let open M in ...\"\n  in class expressions and class type expressions.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "reviews": [ [ "Thomas", "Refis" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 792 ],
        "text": "fix limitations of destructive substitutions, by\n  allowing \"S with type t := type-expr\",\n  \"S with type M.t := type-expr\", \"S with module M.N := path\"\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 1064, 1392 ],
        "text": "extended indexing operators, add a new class of\n  user-defined indexing operators, obtained by adding at least\n  one operator character after the dot symbol to the standard indexing\n  operators: e,g \".%()\", \".?[]\", \".@{}<-\":\n    let ( .%() ) = List.nth in [0; 1; 2].%(1)\n  After this change, functions or methods with an explicit polymorphic type\n  annotation and of which the first argument is optional now requires a space\n  between the dot and the question mark,\n  e.g. \"<f:'a.?opt:int->unit>\" must now be written \"<f:'a. ?opt:int->unit>\".\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 1118 ],
        "text": "Support inherited field in object type expression\n    type t = < m : int >\n    type u = < n : int; t; k : int >\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [
          [ "Jeremy", "Yallop" ],
          [ "Leo", "White" ],
          [ "Jacques", "Garrigue" ],
          [ "Florian", "Angeletti" ]
        ]
      },
      {
        "references": [ 1232 ],
        "text": "Support Unicode character escape sequences in string\n  literals via the \\u{X+} syntax. These escapes are substituted by the\n  UTF-8 encoding of the Unicode character.\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Alain", "Frisch" ],
          [ "Xavier", "Leroy" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 1247 ],
        "text": "M.(::) construction for expressions\n  and patterns (plus fix printing of (::) in the toplevel)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1252 ],
        "text": "The default mode is now safe-string, can be overridden\n  at configure time or at compile time.\n  (See #1386 below for the configure-time options)\n  This breaks the code that uses the 'string' type as mutable\n  strings (instead of Bytes.t, introduced by 4.02 in 2014).\n  ",
        "breaking change": true,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1253 ],
        "text": "Private extensible variants\n  This change breaks code relying on the undocumented ability to export\n  extension constructors for abstract type in signature. Briefly,\n    module type S = sig\n      type t\n      type t += A\n    end\n   must now be written\n    module type S = sig\n      type t = private ..\n      type t += A\n   end\n  ",
        "breaking change": true,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1333 ],
        "text": "turn off warning 40 by default\n  (Constructor or label name used out of scope)\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1348 ],
        "text": "accept anonymous type parameters in `with` constraints:\n    S with type _ t = int\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      }
    ],
    " Type system": [
      {
        "references": [ 2642, 1225 ],
        "text": "unique names for weak type variables\n    # ref [];;\n    - : '_weak1 list ref = {contents = []}\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Frédéric", "Bour" ],
          [ "Jacques", "Garrigue" ],
          [ "Gabriel", "Radanne" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 6738, 7215, 7231, 556 ],
        "text": "Add a new check that 'let rec'\n  bindings are well formed.\n  ",
        "breaking change": true,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "reviews": [
          [ "Stephen", "Dolan" ],
          [ "Gabriel", "Scherer" ],
          [ "Leo", "White" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 1142 ],
        "text": "Mark assertions nonexpansive, so that 'assert false'\n  can be used as a placeholder for a polymorphic function.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 8223, 7309, 1026 ],
        "text": "Add update to maps. Allows to update a\n  binding in a map or create a new binding if the key had no binding\n    val update: key -> ('a option -> 'a option) -> 'a t -> 'a t\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Briais" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 7515, 1147 ],
        "text": "Arg.align now optionally uses the tab character '\\t' to\n  separate the \"unaligned\" and \"aligned\" parts of the documentation string. If\n  tab is not present, then space is used as a fallback. Allows to have spaces in\n  the unaligned part, which is useful for Tuple options.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 615 ],
        "text": "Format, add symbolic formatters that output symbolic\n  pretty-printing items. New fields have been added to the\n  formatter_out_functions record, thus this change will break any code building\n  such record from scratch.\n  When building Format.formatter_out_functions values redefining the out_spaces\n  field, \"{ fmt_out_funs with out_spaces = f; }\" should be replaced by\n  \"{ fmt_out_funs with out_spaces = f; out_indent = f; }\" to maintain the old\n  behavior.\n  ",
        "breaking change": true,
        "authors": [ [ "Richard", "Bonichon" ], [ "Pierre", "Weis" ] ],
        "feature request": [ [ "Spiros", "Eliopoulos" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 943 ],
        "text": "Fixed the divergence of the Pervasives module between the stdlib\n  and threads implementations.  In rare circumstances this can change the\n  behavior of existing applications: the implementation of Pervasives.close_out\n  used when compiling with thread support was inconsistent with the manual.\n  It will now not suppress exceptions escaping Pervasives.flush anymore.\n  Developers who want the old behavior should use Pervasives.close_out_noerr\n  instead.  The stdlib implementation, used by applications not compiled\n  with thread support, will now only suppress Sys_error exceptions in\n  Pervasives.flush_all.  This should allow exceedingly unlikely assertion\n  exceptions to escape, which could help reveal bugs in the standard library.\n  ",
        "breaking change": true,
        "authors": [ [ "Markus", "Mottl" ] ],
        "review": [
          [ "Hezekiah", "M.", "Carty" ],
          [ "Jérémie", "Dimino" ],
          [ "Damien", "Doligez" ],
          [ "Alain", "Frisch" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 1034 ],
        "text": "List.init : int -> (int -> 'a) -> 'a list\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "Degenne" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Thomas", "Braibant" ],
          [ "Florian", "Angeletti" ],
          [ "Gabriel", "Scherer" ],
          [ "Nathan", "Moreau" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 1091 ],
        "text": "Add the Uchar.{bom,rep} constants.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1091 ],
        "text": "Add Buffer.add_utf_{8,16le,16be}_uchar to encode Uchar.t\n  values to the corresponding UTF-X transformation formats in Buffer.t\n  values.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Max", "Mouratov" ] ]
      },
      {
        "references": [ 1175 ],
        "text": "Bigarray, add a change_layout function to each Array[N]\n  submodules.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1306 ],
        "text": "In the MSVC and Mingw ports, \"Sys.rename src dst\" no longer fails if\n  file \"dst\" exists, but replaces it with file \"src\", like in the other ports.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1314 ],
        "text": "Format, use the optional width information\n  when formatting a boolean: \"%8B\", \"%-8B\" for example\n  (Xavier Clerc, review by Gabriel Scherer)\n- c9cc0f25138ce58e4f4e68c4219afe33e2a9d034: Resurrect tabulation boxes\n  in module Format. Rewrite/extend documentation of tabulation boxes.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 7564, 1211 ],
        "text": "Allow forward slashes in the target of symbolic links\n  created by Unix.symlink under Windows.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7640, 1414 ],
        "text": "reimplementation of Unix.execvpe to fix issues\n  with the 4.05 implementation.  The main issue is that the current\n  directory was always searched (last), even if the current directory\n  is not listed in the PATH.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Louis", "Gesbert" ], [ "Arseniy", "Alekseyev" ] ],
        "review": [ [ "Ivan", "Gotovchits" ] ]
      },
      {
        "references": [ 997, 1077 ],
        "text": "Deprecate Bigarray.*.map_file and add Unix.map_file as a\n  first step towards moving Bigarray to the stdlib\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1178 ],
        "text": "remove the Num library for arbitrary-precision arithmetic.\n  It now lives as a separate project https://github.com/ocaml/num\n  with an OPAM package called \"num\".\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1217 ],
        "text": "Restrict Unix.environment in privileged contexts; add\n  Unix.unsafe_environment.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Damien", "Doligez" ],
          [ "Hannes", "Mehnert" ]
        ]
      },
      {
        "references": [ 1321 ],
        "text": "Reimplement Unix.isatty on Windows. It no longer returns true for\n  the null device.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 7361, 1248 ],
        "text": "support \"ocaml.warning\" in all attribute contexts, and\n  arrange so that \"ocaml.ppwarning\" is correctly scoped by surrounding\n  \"ocaml.warning\" attributes\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7444, 1138 ],
        "text": "trigger deprecation warning when a \"deprecated\"\n  attribute is hidden by signature coercion\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "bmillwood" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7472 ],
        "text": "ensure .cmi files are created atomically,\n  to avoid corruption of .cmi files produced simultaneously by a run\n  of ocamlc and a run of ocamlopt.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "suggestion": [ [ "Gerd", "Stolpmann" ] ]
      },
      {
        "references": [ 7514, 1152 ],
        "text": "add -dprofile option, similar to -dtimings but\n  also displays memory allocation and consumption.\n  The corresponding addition of a new compiler-internal\n  Profile module may affect some users of\n  compilers-libs/ocamlcommon (by creating module conflicts).\n  ",
        "breaking change": true,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7620, 1317 ],
        "text": "Typecore.force_delayed_checks does not run with -i option\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 7624 ],
        "text": "handle warning attributes placed on let bindings\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "dinosaure" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 896 ],
        "text": "\"-compat-32\" is now taken into account when building .cmo/.cma\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 948 ],
        "text": "the compiler now reports warnings-as-errors by prefixing\n  them with \"Error (warning ..):\", instead of \"Warning ..:\" and\n  a trailing \"Error: Some fatal warnings were triggered\" message.\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1032 ],
        "text": "display the output of -dtimings as a hierarchy\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1114, 1393, 1429 ],
        "text": "refine the (ocamlc -config) information\n  on C compilers: the variables `{bytecode,native}_c_compiler` are deprecated\n  (the distinction is now mostly meaningless) in favor of a single\n  `c_compiler` variable combined with `ocaml{c,opt}_cflags`\n  and `ocaml{c,opt}_cppflags`.\n  ",
        "breaking change": false,
        "authors": [
          [ "Sébastien", "Hinderer" ],
          [ "Jeremy", "Yallop" ],
          [ "Gabriel", "Scherer" ]
        ],
        "review": [ [ "Adrien", "Nader" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1189 ],
        "text": "allow MSVC ports to use -l option in ocamlmklib\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1332 ],
        "text": "fix ocamlc handling of \"-output-complete-obj\"\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 1336 ],
        "text": "-thread and -vmthread option information is propagated to\n  PPX rewriters.\n  ",
        "breaking change": false,
        "authors": [ [ "Jun", "Furuse" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 5324, 375 ],
        "text": "An alternative Linear Scan register allocator for\n  ocamlopt, activated with the -linscan command-line flag. This\n  allocator represents a trade-off between worse generated code\n  performance for higher compilation speed (especially interesting in\n  some cases graph coloring is necessarily quadratic).\n  ",
        "breaking change": false,
        "adapted": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "authors": [ [ "Marcell", "Fischbach" ], [ "Benedikt", "Meurer" ] ],
        "review": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6927, 988 ],
        "text": "On macOS, when compiling bytecode stubs, plugins,\n  and shared libraries through -output-obj, generate dylibs instead of\n  bundles.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 7447, 995 ],
        "text": "incorrect code generation for nested recursive bindings\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7501, 1089 ],
        "text": "Consider arrays of length zero as constants\n  when using Flambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7531, 1162 ],
        "text": "Erroneous code transformation at partial applications\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7614, 1313 ],
        "text": "Ensure that inlining does not depend on the order\n  of symbols (flambda)\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Xavier", "Clerc" ] ],
        "report": [ [ "Alex" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7616, 1339 ],
        "text": "don't warn on mutation of zero size blocks.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7631, 1355 ],
        "text": "\"-linscan\" option crashes ocamlopt\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Paul", "Steckler" ] ]
      },
      {
        "references": [ 7642, 1411 ],
        "text": "ARM port: wrong register allocation for integer\n  multiply on ARMv4 and ARMv5; possible wrong register allocation for\n  floating-point multiply and add on VFP and for floating-point\n  negation and absolute value on soft FP emulation.\n  ",
        "breaking change": false,
        "additional sightings": [ [ "Mark", "Shinwell" ] ],
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Stéphane", "Glondu" ], [ "Ximin", "Luo" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 659 ],
        "text": "Remove support for SPARC native code generation\n  ",
        "breaking change": true,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 850 ],
        "text": "Optimize away some physical equality\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 856 ],
        "text": "Register availability analysis\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Thomas", "Refis" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1143 ],
        "text": "tweaked several allocation functions in the runtime by\n  checking for likely conditions before unlikely ones and eliminating\n  some redundant checks.\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 1183 ],
        "text": "compile curried functors to multi-argument functions\n  earlier in the compiler pipeline; correctly propagate [@@inline]\n  attributes on such functors; mark functor coercion veneers as\n  stubs.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 1195 ],
        "text": "Merge functions based on partiality rather than\n  Parmatch.irrefutable.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [
          [ "Thomas", "Refis" ],
          [ "Alain", "Frisch" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1215 ],
        "text": "Improve compilation of short-circuit operators\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1250 ],
        "text": "illegal ARM64 assembly code generated for large combined allocations\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "initial fix": [ [ "Steve", "Walk" ] ],
        "report": [ [ "Steve", "Walk" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1271 ],
        "text": "Don't generate Ialloc instructions for closures that exceed\n  Max_young_wosize; instead allocate them on the major heap.  (Related\n  to #1250.)\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1294 ],
        "text": "Add a configure-time option to remove the dynamic float array\n  optimization and add a floatarray type to let the user choose when to\n  flatten float arrays. Note that float-only records are unchanged: they\n  are still optimized by unboxing their fields.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1304 ],
        "text": "Mark registers clobbered by PLT stubs as destroyed across\n  allocations.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Xavier", "Clerc" ] ],
        "initial debugging": [ [ "Valentin", "Gatien-Baron" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 1323 ],
        "text": "make sure that frame tables are generated in the data\n  section and not in the read-only data section, as was the case\n  before in the PPC and System-Z ports.  This avoids relocations in\n  the text segment of shared libraries and position-independent\n  executables generated by ocamlopt.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1330 ],
        "text": "when generating dynamically-linkable code on AArch64, always\n  reference symbols (even locally-defined ones) through the GOT.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 8395, 973 ],
        "text": "tools/check-symbol-names checks for globally\n  linked names not namespaced with caml_\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6928, 1103 ],
        "text": "ocamldoc, do not introduce an empty <h1> in index.html\n  when no -title has been provided\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Boutillier" ] ]
      },
      {
        "references": [ 7048 ],
        "text": "ocamldoc, in -latex mode, don't escape Latin-1 accented letters\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Hugo", "Herbelin" ] ]
      },
      {
        "references": [ 7351 ],
        "text": "ocamldoc, use semantic tags rather than <br> tags in the html\n  backend\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "feature request": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7352, 7353 ],
        "text": "ocamldoc, better paragraphs in html output\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7363, 830 ],
        "text": "ocamldoc, start heading levels at {1 not {2 or {6.\n  This change modifies the mapping between ocamldoc heading level and\n  html heading level, breaking custom css style for ocamldoc.\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "feature request": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7478, 1037 ],
        "text": "ocamldoc, do not use as a module preamble documentation\n  comments that occur after the first module element. This change may break\n  existing documentation. In particular, module preambles must now come before\n  any `open` statement.\n  ",
        "breaking change": true,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7521, 1159 ],
        "text": "ocamldoc, end generated latex file with a new line\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7575, 1219 ],
        "text": "Switch compilers from -no-keep-locs\n  to -keep-locs by default: produced .cmi files will contain locations.\n  This provides better error messages. Note that, as a consequence,\n  .cmi digests now depend on the file path as given to the compiler.\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7610, 1346 ],
        "text": "caml.el (the Emacs editing mode) was cleaned up\n  and made compatible with Emacs 25.\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Monnier" ], [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 7635, 1383 ],
        "text": "ocamldoc, add an identifier to module\n  and module type elements\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Yawar", "Amin" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 681, 1426 ],
        "text": "Introduce ocamltest, a new test driver for the\n  OCaml compiler testsuite\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1012 ],
        "text": "ocamlyacc, fix parsing of raw strings and nested comments, as well\n  as the handling of ' characters in identifiers.\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Obenour" ] ]
      },
      {
        "references": [ 1045 ],
        "text": "ocamldep, add a \"-shared\" option to generate dependencies\n  for native plugin files (i.e. .cmxs files)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "suggestion": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1078 ],
        "text": "add a subcommand \"-depend\" to \"ocamlc\" and \"ocamlopt\",\n  to behave as ocamldep. Should be used mostly to replace \"ocamldep\" in the\n  \"boot\" directory to reduce its size in the future.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 1036 ],
        "text": "ocamlcmt (tools/read_cmt) is installed, converts .cmt to .annot\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 1180 ],
        "text": "Add support for recording numbers of direct and indirect\n  calls over the lifetime of a program when using Spacetime profiling\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1457 ],
        "text": ", ocamldoc: restore label for exception in the latex backend\n  (omitted since 4.04.0)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Toplevel:": [
      {
        "references": [ 7570 ],
        "text": "remove unusable -plugin option from the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1041 ],
        "text": "-nostdlib no longer ignored by toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1231 ],
        "text": "improved printing of unicode texts in the toplevel,\n  unless OCAMLTOP_UTF_8 is set to false.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Xavier", "Leroy" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 1688 ],
        "text": "Fix printing of -0.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [
          3771, 153, 1200, 1357, 1362, 1363, 1369, 1398, 1446, 1448
        ],
        "text": "Unicode support for the Windows runtime.\n  ",
        "breaking change": true,
        "authors": [ [ "ygrek" ], [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "David", "Allsopp" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 7594, 1274, 1368 ],
        "text": "String_val now returns 'const char*', not\n  'char*' when -safe-string is enabled at configure time.  New macro Bytes_val\n  for accessing bytes values.\n  ",
        "breaking change": true,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "reviews": [ [ "Mark", "Shinwell" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 71 ],
        "text": "The runtime can now be shut down gracefully by means of the new\n  caml_shutdown and caml_startup_pooled functions. The new 'c' flag in\n  OCAMLRUNPARAM enables shutting the runtime properly on process exit.\n  ",
        "breaking change": false,
        "authors": [ [ "Max", "Mouratov" ] ],
        "discussion": [
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ],
          [ "Thomas", "Braibant" ],
          [ "Stephen", "Dolan" ],
          [ "Pierre", "Chambart" ],
          [ "François", "Bobot" ],
          [ "Jacques", "Garrigue" ],
          [ "David", "Allsopp" ],
          [ "Alain", "Frisch" ]
        ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 938, 1170, 1289 ],
        "text": "Stack overflow detection on 64-bit Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Andrieu" ] ],
        "tweaked": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1070, 1295 ],
        "text": "enable gcc typechecking for caml_alloc_sprintf,\n  caml_gc_message. Make caml_gc_message a variadic function. Fix many\n  caml_gc_message format strings.\n  ",
        "breaking change": false,
        "32bit fix": [ [ "David", "Allsopp" ] ],
        "authors": [ [ "Olivier", "Andrieu" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1073 ],
        "text": "Remove statically allocated compare stack.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 1086 ],
        "text": "in Sys.getcwd, just fail instead of calling getwd()\n  if HAS_GETCWD is not set.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "fix": [ [ "Sebastian", "Markbåge" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1269 ],
        "text": "Remove 50ms delay at exit for programs using threads\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 1309 ],
        "text": "open files with O_CLOEXEC (or equivalent) in caml_sys_open, thus\n  unifying the semantics between Unix and Windows and also eliminating race\n  condition on Unix.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Andreas", "Hauptmann" ] ]
      },
      {
        "references": [ 1326 ],
        "text": "Enable use of CFI directives in AArch64 and ARM runtime\n  systems' assembly code (asmrun/arm64.S).  Add CFI directives to enable\n  unwinding through [caml_c_call] and [caml_call_gc] with correct termination\n  of unwinding at [main].\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Gabriel", "Scherer" ] ],
        "thanks": [ [ "Daniel", "Bünzli" ], [ "Fu", "Yong", "Quah" ] ]
      },
      {
        "references": [ 1338 ],
        "text": "Add \"-g\" for bytecode runtime system compilation\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1416, 1444 ],
        "text": "switch the Windows 10 Console to UTF-8 encoding.\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "reviews": [ [ "Nicolás", "Ojeda", "Bär" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 6548 ],
        "text": "remove obsolete limitation in the description of private\n  type abbreviations\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "suggestion": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6676, 1110 ],
        "text": "move record notation to tutorial\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6676, 1112 ],
        "text": "move local opens to tutorial\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 6676, 1153 ],
        "text": "move overriding class definitions to reference\n  manual and tutorial\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 6709 ],
        "text": "document the associativity and precedence level of\n  pervasive operators\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7254, 1096 ],
        "text": "Rudimentary documentation of ocamlnat\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7281, 1259 ],
        "text": "fix .TH macros in generated manpages\n  ",
        "breaking change": false,
        "authors": [ [ "Olaf", "Hering" ] ]
      },
      {
        "references": [ 7507 ],
        "text": "Align the description of the printf conversion\n  specification \"%g\" with the ISO C90 description.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "suggestion": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 7551, 1194 ],
        "text": "make the final \";;\" potentially optional in\n  caml_example\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ],
        "suggestion": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7588, 1291 ],
        "text": "make format documentation predictable\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 7604 ],
        "text": "Minor Ephemeron documentation fixes\n  ",
        "breaking change": false,
        "authors": [ [ "Miod", "Vallat" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 594 ],
        "text": "New chapter on polymorphism troubles:\n  weakly polymorphic types, polymorphic recursion,and higher-ranked\n  polymorphism.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "Gerd", "Stolpmann" ]
        ]
      },
      {
        "references": [ 1187 ],
        "text": "Minimal documentation for compiler plugins\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1202 ],
        "text": "Fix Typos in comments as well as basic grammar errors.\n  ",
        "breaking change": false,
        "authors": [ [ "JP", "Rodi" ] ],
        "review": [ [ "David", "Allsopp" ] ],
        "suggestions": [
          [ "David", "Allsopp" ],
          [ "Max", "Mouratov" ],
          [ "Florian", "Angeletti" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 1220 ],
        "text": "Fix \"-keep-docs\" option in ocamlopt manpage\n  ",
        "breaking change": false,
        "authors": [ [ "Etienne", "Millon" ] ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 6373, 1093 ],
        "text": "Suppress trigraph warnings from macOS assembler\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7639, 1371 ],
        "text": "fix configure script for correct detection of\n  int64 alignment on Mac OS X 10.13 (High Sierra) and above; fix bug in\n  configure script relating to such detection.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "John", "Whitington" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 558 ],
        "text": "enable shared library and natdynlink support on more Linux\n  platforms\n  ",
        "breaking change": false,
        "authors": [ [ "Felix", "Janda" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1104 ],
        "text": "remove support for the NeXTStep platform\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1130 ],
        "text": "enable detection of IBM XL C compiler (one need to run configure\n  with \"-cc <path to xlc compiler>\"). Enable shared library support for\n  bytecode executables on AIX/xlc (tested on AIX 7.1, XL C 12).\n  To enable 64-bit, run both \"configure\" and \"make world\" with OBJECT_MODE=64.\n  ",
        "breaking change": false,
        "authors": [ [ "Konstantin", "Romanov" ], [ "Enrique", "Naudon" ] ]
      },
      {
        "references": [ 1203 ],
        "text": "speed up the manual build by using ocamldoc.opt\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1214 ],
        "text": "harden config/Makefile against '#' characters in PREFIX\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1216 ],
        "text": "move Compplugin and friends from BYTECOMP to COMP\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1242 ],
        "text": "disable C plugins loading by default\n  ",
        "breaking change": true,
        "authors": [ [ "Alexey", "Egorov" ] ]
      },
      {
        "references": [ 1275 ],
        "text": "correct configure test for Spacetime availability\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 1278 ],
        "text": "discover presence of <sys/shm.h> during configure for afl runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ] ]
      },
      {
        "references": [ 1386 ],
        "text": "provide configure-time options to fine-tune the safe-string\n  options and default settings changed by #1252.\n  The previous configure option -safe-string is now\n  renamed -force-safe-string.\n  At configure-time, -force-safe-string forces all module to use\n  immutable strings (this disables the per-file, compile-time\n  -unsafe-string option). The new default-(un)safe-string options\n  let you set the default choice for the per-file compile-time\n  option. (The new #1252 behavior corresponds to having\n  -default-safe-string, while 4.05 and older had\n  -default-unsafe-string).\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Kate", "Deplaix" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1409 ],
        "text": "Fix to enable NetBSD/powerpc to work.\n  ",
        "breaking change": false,
        "authors": [ [ "Håvard", "Eidnes" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 6826, 828, 834 ],
        "text": "improve compilation time for open\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7127, 454, 1058 ],
        "text": "in toplevel, print bytes and strip\n  strings longer than the size specified by the \"print_length\" directive\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "initial PR": [ [ "Junsong", "Li" ] ]
      },
      {
        "references": [ 406 ],
        "text": "remove polymorphic comparison for Types.constructor_tag in compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Dwight", "Guth" ] ],
        "review": [
          [ "Gabriel", "Radanne" ],
          [ "Damien", "Doligez" ],
          [ "Gabriel", "Scherer" ],
          [ "Pierre", "Chambart" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 1119 ],
        "text": "Change Set (private) type to inline records.\n  ",
        "breaking change": false,
        "authors": [ [ "Albin", "Coquereau" ] ]
      },
      {
        "references": [ 1127 ],
        "text": "move config/{m,s}.h to byterun/caml and install them.\n  User code should not have to include them directly since they are\n  included by other header files.\n  Previously {m,s}.h were not installed but they were substituted into\n  caml/config.h; they are now just #include-d by this file. This may\n  break some scripts relying on the (unspecified) presence of certain\n  #define in config.h instead of m.h and s.h -- they can be rewritten\n  to try to grep those files if they exist.\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1281 ],
        "text": "avoid formatter flushes inside exported printers in Location\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 5927 ],
        "text": "Type equality broken for conjunctive polymorphic variant tags\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6329, 1437 ],
        "text": "Introduce padding word before \"data_end\" symbols\n  to ensure page table tests work correctly on an immediately preceding\n  block of zero size.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6587 ],
        "text": "only elide Pervasives from printed type paths in unambiguous context\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6934 ],
        "text": "nonrec misbehaves with GADTs\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 7070, 1139 ],
        "text": "Unexported values can cause non-generalisable variables\n  error\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7261 ],
        "text": "Warn on type constraints in GADT declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Fabrice", "Le", "Botlan" ] ]
      },
      {
        "references": [ 7321 ],
        "text": "Private type in signature clashes with type definition via\n  functor instantiation\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 7372, 834 ],
        "text": "fix type-checker bug with GADT and inline records\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Frédéric", "Bour" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7344 ],
        "text": "Inconsistent behavior with type annotations on let\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7468 ],
        "text": "possible GC problem in caml_alloc_sprintf\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "discovery": [ [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 7496 ],
        "text": "Fixed conjunctive polymorphic variant tags do not unify\n  with themselves\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7506 ],
        "text": "pprintast ignores attributes in tails of a list\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Kenichi", "Asai" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7513 ],
        "text": "List.compare_length_with mishandles negative numbers / overflow\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7519 ],
        "text": "Incorrect rejection of program due to faux scope escape\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 7540, 1179 ],
        "text": "Fixed setting of breakpoints within packed modules\n  for ocamldebug\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Herbelin" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 7543 ],
        "text": "short-paths printtyp can fail on packed type error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7553, 1191 ],
        "text": "Prevent repeated warnings with recursive modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Josh", "Berdine" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7563, 1210 ],
        "text": "code generation bug when a module alias and\n  an extension constructor have the same name in the same module\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Manuel", "Fähndrich" ] ],
        "review": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7591, 1257 ],
        "text": "on x86-64, frame table is not 8-aligned\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Mantis", "user", "\"voglerr\"" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7601, 1320 ],
        "text": "It seems like a hidden non-generalized type variable\n  remains in some inferred signatures, which leads to strange errors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mandrikin" ] ]
      },
      {
        "references": [ 7609 ],
        "text": "use-after-free memory corruption if a program debugged\n  under ocamldebug calls Pervasives.flush_all\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Paul", "Steckler" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7612, 1345 ],
        "text": "afl-instrumentation bugfix for classes.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7617, 7618, 1318 ],
        "text": "Ambiguous (mistakenly) type escaping the\n  scope of its equation\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7619, 1387 ],
        "text": "position of the optional last semi-column not included\n  in the position of the expression (same behavior as for lists)\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Raffalli" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7638 ],
        "text": "in the Windows Mingw64 port, multithreaded programs compiled\n  to bytecode could crash when raising an exception from C code.\n  This looks like a Mingw64 issue, which we work around with GCC builtins.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7656, 1423 ],
        "text": "false 'unused type/constructor/value' alarms\n  in the 4.06 development version\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Kate", "Deplaix" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7657, 1424 ],
        "text": "ensures correct call-by-value semantics when\n  eta-expanding functions to eliminate optional arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "sliquister" ] ],
        "review": [ [ "Leo", "White" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7658, 1439 ],
        "text": "Fix Spacetime runtime system compilation with\n  -force-safe-string\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Christoph", "Spiel" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1155 ],
        "text": "Fix a race condition with WAIT_NOHANG on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1199 ],
        "text": "Pretty-printing formatting cleanup in pprintast\n  ",
        "breaking change": false,
        "authors": [ [ "Ethan", "Aubin" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Florian", "Angeletti" ],
          [ "Gabriel", "Scherer" ]
        ],
        "suggestion": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1223 ],
        "text": "Fix corruption of the environment when using -short-paths\n  with the toplevel.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 1243 ],
        "text": "Fix pprintast for #... infix operators\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Omar", "Chebib" ] ]
      },
      {
        "references": [ 1324 ],
        "text": "ensure that flambda warning are printed only once\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ]
      },
      {
        "references": [ 1329 ],
        "text": "Prevent recursive polymorphic variant names\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "fix": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1308 ],
        "text": "Only treat pure patterns as inactive\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1390 ],
        "text": "fix the [@@unboxed] type check to accept parametrized types\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 1407 ],
        "text": "Fix raw_spacetime_lib\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Damien", "Doligez" ] ]
      }
    ]
  },
  "OCaml 4.05.0 (13 Jul 2017):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 7201, 954 ],
        "text": "Correct wrong optimisation of \"0 / <expr>\"\n  and \"0 mod <expr>\" in the case when <expr> was a non-constant\n  evaluating to zero\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Leo", "White" ], [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 7357, 832 ],
        "text": "Improve compilation time for toplevel\n  include(struct ... end : sig ... end)\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Hongbo", "Zhang" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7533, 1173 ],
        "text": "Correctly perform side effects for certain\n  cases of \"/\" and \"mod\"\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Jan", "Mitgaard" ] ]
      },
      {
        "references": [ 504 ],
        "text": "Instrumentation support for fuzzing with afl-fuzz.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [
          [ "Alain", "Frisch" ],
          [ "Pierre", "Chambart" ],
          [ "Mark", "Shinwell" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 863, 1068, 1069 ],
        "text": "Optimise matches with constant\n  results to lookup tables.\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Pierre", "Chambart" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 1150 ],
        "text": "Fix typo in arm64 assembler directives\n  ",
        "breaking change": false,
        "authors": [ [ "KC", "Sivaramakrishnan" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 2784, 953 ],
        "text": "Add caml_startup_exn\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7423, 946 ],
        "text": "expose new exception-raising functions\n  `void caml_{failwith,invalid_argument}_value(value msg)`\n  in addition to\n  `void caml_{failwith,invalid_argument}(char const *msg)`.\n  The previous functions would not free their message argument, so\n  were inconvient for dynamically-allocated messages; the messages\n  passed to the new functions are handled by the garbage collector.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "Immanuel", "Litzroth" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7557, 1213 ],
        "text": "More security for getenv\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "reports": [ [ "Seth", "Arnold" ], [ "Eric", "Milliken" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ],
          [ "Stephen", "Dolan" ],
          [ "Hannes", "Mehnert" ]
        ]
      },
      {
        "references": [ 795 ],
        "text": "remove 256-character limitation on Sys.executable_name\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 891 ],
        "text": "Use -fno-builtin-memcmp when building runtime with gcc.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 6608, 901 ],
        "text": "unify record types when overriding all fields\n  ",
        "breaking change": false,
        "authors": [ [ "Tadeu", "Zagallo" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7414, 929 ],
        "text": "Soundness bug with non-generalized type variables and\n  functors.\n  (compatibility: some code using module-global mutable state will\n   fail at compile-time and is fixed by adding extra annotations;\n   see the Mantis and Github discussions.)\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 7050, 748 ],
        "text": "#843 #864: new `-args/-args0 <file>` parameters to\n  provide extra command-line arguments in a file -- see documentation.\n  User programs may implement similar options using the new `Expand`\n  constructor of the `Arg` module.\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "discussion": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ],
        "feature request": [ [ "the", "Coq", "team" ] ],
        "review": [
          [ "Jérémie", "Dimino" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 7137, 960 ],
        "text": "\"-open\" command line flag now accepts\n  a module path (not a module name)\n  ",
        "breaking change": false,
        "authors": [ [ "Arseniy", "Alekseyev" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7172, 970 ],
        "text": "add extra (ocamlc -config) options\n  int_size, word_size, ext_exe\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7315, 736 ],
        "text": "refine some error locations\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "Matej", "Košík" ] ]
      },
      {
        "references": [ 7473, 1025 ],
        "text": "perform proper globbing for command-line arguments on\n  Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Jonathan", "Protzenko" ] ]
      },
      {
        "references": [ 7479 ],
        "text": "make sure \"ocamlc -pack\" is only given .cmo and .cmi files,\n  and that \"ocamlopt -pack\" is only given .cmx and .cmi files.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 796 ],
        "text": "allow compiler plugins to declare their own arguments.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 829 ],
        "text": "better error when opening a module aliased to a functor\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 911 ],
        "text": "ocamlc/ocamlopt do not pass warnings-related options to C\n  compiler when called to compile third-party C source files\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Adrien", "Nader" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 915 ],
        "text": "fix -dsource (pprintast.ml) bugs\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 933 ],
        "text": "ocamlopt -p now reports an error on platforms that do not\n  support profiling with gprof; dummy profiling libraries are no longer\n  installed on such platforms.\n  This can be tested with ocamlopt -config\n  ",
        "breaking change": true,
        "authors": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 1009 ],
        "text": "\"ocamlc -c -linkall\" and \"ocamlopt -c -linkall\" can now be used\n  to set the \"always link\" flag on individual compilation units.  This\n  controls linking with finer granularity than \"-a -linkall\", which sets\n  the \"always link\" flag on all units of the given library.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1015 ],
        "text": "add option \"-plugin PLUGIN\" to ocamldep too. Use compilerlibs\n  to build ocamldep. Add option \"-depend\" to ocamlc/ocamlopt to behave\n  as ocamldep. Remove any use of ocamldep to build the distribution.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 1027 ],
        "text": "various improvements to -dtimings, mostly including time\n  spent in subprocesses like preprocessors\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1098 ],
        "text": "the compiler now takes the boolean \"OCAML_COLOR\" environment\n  variable into account if \"-color\" is not provided.  This allows users\n  to override the default behaviour without modifying invocations of ocaml\n  manually.\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ], [ "Guillaume", "Bury" ] ],
        "review": [
          [ "Daniel", "Bünzli" ],
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ]
        ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 6975, 902 ],
        "text": "Truncate function added to stdlib Buffer module\n  ",
        "breaking change": false,
        "authors": [ [ "Dhruv", "Makwana" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7279, 710 ],
        "text": "`Weak.get_copy` `Ephemeron.*_copy` doesn't copy\n  custom blocks anymore\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "by", "Martin", "R.", "Neuhäußer" ] ],
        "review": [ [ "Thomas", "Braibant" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 7500, 1081 ],
        "text": "Remove Uchar.dump\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 760 ],
        "text": "Add a functions List.compare_lengths and\n  List.compare_length_with to avoid full list length computations\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "review": [
          [ "Leo", "White" ], [ "Josh", "Berdine" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 778 ],
        "text": "Arg: added option Expand that allows to expand a string\n  argument to a string array of new arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 849 ],
        "text": "Expose a Spacetime.enabled value\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 885 ],
        "text": "Option-returning variants of stdlib functions\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Bart", "Jacobs" ] ]
      },
      {
        "references": [ 869 ],
        "text": "Add find_first, find_first_opt, find_last, find_last_opt to\n  maps and sets.  Find the first or last binding or element\n  satisfying a monotonic predicate.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "de", "Perthuis" ] ],
        "contributions": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Gerd", "Stolpmann" ] ],
        "review": [ [ "Hezekiah", "M.", "Carty" ], [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 875 ],
        "text": "Add missing functions to ArrayLabels, BytesLabels,\n  ListLabels, MoreLabels, StringLabels so they are compatible with\n  non-labeled counterparts. Also add missing @@ocaml.deprecated attributes\n  in StringLabels and BytesLabels.\n  ",
        "breaking change": false,
        "authors": [ [ "Roma", "Sokolov" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Jacques", "Garrigue" ],
          [ "Gabriel", "Radanne" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 999 ],
        "text": "Arg, do not repeat the usage message thrice when reporting an error\n  (this was a regression in 4.03)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 1042 ],
        "text": "Fix escaping of command-line arguments in\n  Unix.create_process{,_env} under Windows.  Arguments with tabs should now\n  be received verbatim by the child process.\n  ",
        "breaking change": false,
        "authors": [
          [ "Nicolás", "Ojeda", "Bär" ], [ "Andreas", "Hauptmann" ]
        ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Debugging and profiling:": [
      {
        "references": [ 7258 ],
        "text": "ocamldebug's \"install_printer\" command had problems with\n  module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 378 ],
        "text": "Add [Printexc.raise_with_backtrace] to raise an exception using\n  an explicit backtrace\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ],
          [ "Frédéric", "Bour" ]
        ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 6597, 1030 ],
        "text": "add forward references to language extensions\n  that extend non-terminal symbols in the language reference section.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7497, 1095 ],
        "text": "manual, enable numbering for table of contents\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7539, 1181 ],
        "text": "manual, update dead links in ocamldoc chapter\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 633 ],
        "text": "manpage and manual documentation for the `-opaque` option\n  ",
        "breaking change": false,
        "authors": [ [ "Konstantin", "Romanov" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 751, 925 ],
        "text": "add a HACKING.adoc file to contain various\n  tips and tricks for people hacking on the repository. See also\n  CONTRIBUTING.md for advice on sending contributions upstream.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Gabriel", "Radanne" ] ],
        "inspired": [ [ "John", "Whitington" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 916 ],
        "text": "new tool lintapidiff, use it to update the manual with\n  @since annotations for API changes introduced between 4.00-4.05.\n  ",
        "breaking change": false,
        "authors": [ [ "Edwin", "Török" ] ],
        "discussion": [
          [ "Alain", "Frisch" ],
          [ "David", "Allsopp" ],
          [ "Sébastien", "Hinderer" ],
          [ "Damien", "Doligez" ],
          [ "Xavier", "Leroy" ]
        ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 939 ],
        "text": "activate the caml_example environment in the language\n  extensions section of the manual. Convert some existing code\n  examples to this format.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1082 ],
        "text": "clarify that the use of quoted string for preprocessed\n  foreign quotations still requires the use of an extension node\n  [%foo ...] to mark non-standard interpretation.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "Matthew", "Wahab" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Other libraries:": [
      {
        "references": [ 7158 ],
        "text": "Event.sync, Mutex.create, Condition.create cause too many GCs.\n  The fix is to no longer consider mutexes and condition variables\n  as rare kernel resources.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7264 ],
        "text": "document the different behaviors of Unix.lockf under POSIX\n  and under Win32.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7339, 787 ],
        "text": "Support the '0 dimension' case for bigarrays\n  (see Bigarray documentation)\n  ",
        "breaking change": false,
        "authors": [ [ "Laurent", "Mazare" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Alain", "Frisch" ],
          [ "Hezekiah", "M.", "Carty" ]
        ]
      },
      {
        "references": [ 7342, 797 ],
        "text": "fix Unix.read on pipes with no data left on Windows\n  it previously raised an EPIPE error, it now returns 0 like other OSes\n  ",
        "breaking change": true,
        "authors": [ [ "Jonathan", "Protzenko" ] ],
        "review": [ [ "Andreas", "Hauptmann" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 650 ],
        "text": "in the Unix library, add `?cloexec:bool` optional arguments to\n  functions that create file descriptors (`dup`, `dup2`, `pipe`, `socket`,\n  `socketpair`, `accept`).  Implement these optional arguments in the\n  most atomic manner provided by the operating system to set (or clear)\n  the close-on-exec flag at the same time the file descriptor is created,\n  reducing the risk of race conditions with `exec` or `create_process`\n  calls running in other threads, and improving security.  Also: add a\n  `O_KEEPEXEC` flag for `openfile` by symmetry with `O_CLOEXEC`.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "request": [ [ "Romain", "Beauxis" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "David", "Allsopp" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 996 ],
        "text": "correctly update caml_top_of_stack in systhreads\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 997, 1077 ],
        "text": "Deprecate Bigarray.*.map_file and add Unix.map_file as a\n  first step towards moving Bigarray to the stdlib\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Xavier", "Leroy" ] ]
      }
    ],
    " Toplevel:": [
      {
        "references": [ 7060, 1035 ],
        "text": "Print exceptions in installed custom printers\n  ",
        "breaking change": false,
        "authors": [ [ "Tadeu", "Zagallo" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 5163 ],
        "text": "ocamlobjinfo, dump globals defined by bytecode executables\n  ",
        "breaking change": false,
        "authors": [ [ "Stéphane", "Glondu" ] ]
      },
      {
        "references": [ 7333 ],
        "text": "ocamldoc, use the first sentence of text file as\n  a short description in overviews.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 848 ],
        "text": "ocamldoc, escape link targets in HTML output\n  ",
        "breaking change": false,
        "authors": [ [ "Etienne", "Millon" ] ],
        "review": [
          [ "Gabriel", "Scherer" ],
          [ "Florian", "Angeletti" ],
          [ "Daniel", "Bünzli" ]
        ]
      },
      {
        "references": [ 986 ],
        "text": "ocamldoc, use relative paths in error message\n  to solve ocamlbuild+doc usability issue (ocaml/ocamlbuild#79)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "discussion": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 1017 ],
        "text": "ocamldoc, add an option to detect code fragments that could be\n  transformed into a cross-reference to a known element.\n  (Florian Angeletti, review and suggestion by David Allsopp)\n- clarify ocamldoc text parsing error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 7377 ],
        "text": "remove -std=gnu99 for newer gcc versions\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "ygrek" ] ]
      },
      {
        "references": [ 7452, 1228 ],
        "text": "tweak GCC options to try to avoid the\n  Skylake/Kaby lake bug\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [
          [ "David", "Allsopp" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 693 ],
        "text": "fail on unexpected errors or warnings within caml_example\n  environment.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 803 ],
        "text": "new ocamllex-based tool to extract bytecode compiler\n  opcode information from C headers.\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 827 ],
        "text": "install missing mli and cmti files, new make target\n  install-compiler-sources for installation of compiler-libs ml files\n  ",
        "breaking change": false,
        "authors": [ [ "Hendrik", "Tews" ] ]
      },
      {
        "references": [ 887 ],
        "text": "allow -with-frame-pointers if clang is used as compiler on Linux\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ]
      },
      {
        "references": [ 898 ],
        "text": "fix locale-dependence of primitive list order,\n  detected through reproducible-builds.org.\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Ximin", "Luo" ] ]
      },
      {
        "references": [ 907 ],
        "text": "Remove unused variable from the build system\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "whitequark" ], [ "Gabriel", "Scherer" ], [ "Adrien", "Nader" ]
        ]
      },
      {
        "references": [ 911 ],
        "text": "Clarify the use of C compiler related variables in the build system.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Adrien", "Nader" ],
          [ "Alain", "Frisch" ],
          [ "David", "Allsopp" ]
        ]
      },
      {
        "references": [ 919 ],
        "text": "use clang as preprocessor assembler if clang is used as compiler\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ]
      },
      {
        "references": [ 927 ],
        "text": "improve the detection of hashbang support in the configure script\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 932 ],
        "text": "install ocaml{c,lex}->ocaml{c,lex}.byte symlink correctly\n  when the opt target is built but opt.opt target is not.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 935 ],
        "text": "allow build in Android's termux\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 984 ],
        "text": "Fix compilation of compiler distribution when Spacetime\n  enabled\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 991 ],
        "text": "On Windows, fix installation when native compiler is not\n  built\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1033 ],
        "text": "merge Unix and Windows build systems in the root directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Adrien", "Nader" ] ]
      },
      {
        "references": [ 1047 ],
        "text": "Make .depend files generated for C sources more portable\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 1076 ],
        "text": "Simplify ocamlyacc's build system\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Compiler distribution build system: Makefile factorization": [
      {
        "doc": "The complete list of changes is listed below.  or #7172 (More information in ocamlc -config).  or participate to #7116 (Allow easy retrieval of Makefile.config's values)  on Makefile.config, you may want to get in touch with Sébastien Hinderer  for scripting purposes, and have a stable interface there. If you rely  on it is a bit fragile. We plan to make `ocamlc -config` easier to use  Note that Makefile.config may change further in the future and relying    SUPPORTS_SHARED_LIBRARIES variable whose value is \"true\" or \"false\".    which duplicates the existing and more convenient  - the SHARED variable was removed; its value is \"shared\" or \"noshared\",  - the always-empty DLLCCCOMPOPTS was removed  - the PARTIALLD variable was removed (PACKLD is more complete)  - a BYTERUN variable was added that points to the installed ocamlrun  as follows:  which some advanced users might rely. The changes are  is exported as $(ocamlc -where)/Makefile.config, and on* Some changes were made to the config/Makefile file whichsystems.worked on harmonizing the build rules and merging the two buildnew systems. During the 4.05 development period, Sébastien Hindereron the compiler distribution, but also cross-compilation or porting tosubtle differences and technical debt in general -- for people workingfor Unix and Windows, which lead to some amount of duplication andbuild the compiler distribution) traditionally had separate MakefilesThe compiler distribution build system (the set of Makefiles used to"
      },
      {
        "references": [ 705 ],
        "text": "update Makefile.nt so that ocamlnat compiles\n  for non-Cygwin Windows ports.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 729 ],
        "text": "Make sure ocamlnat is built with a $(EXE) extension, merge\n  rules between Unix and Windows Makefiles\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 762 ],
        "text": "Merge build systems in the yacc/ directory.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 764 ],
        "text": "Merge build systems in the debugger/ directory.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 785 ],
        "text": "Merge build systems in otherlibs/systhreads/\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "fix": [ [ "Jérémie", "Dimino" ] ],
        "review": [ [ "Alain", "Frisch" ], [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 788 ],
        "text": "Merge build systems in subdirectories of otherlibs/.\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 808, 906 ],
        "text": "Merge Unix and Windows build systems\n  in the ocamldoc/ directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 812 ],
        "text": "Merge build systems in the tools/ subdirectory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 866 ],
        "text": "Merge build systems in the stdlib/ directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "David", "Allsopp" ], [ "Adrien", "Nader" ] ]
      },
      {
        "references": [ 941 ],
        "text": "Merge Unix and Windows build systems in the asmrun/ directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [
          [ "Mark", "Shinwell" ],
          [ "Adrien", "Nader" ],
          [ "Xavier", "Leroy" ],
          [ "David", "Allsopp" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 981 ],
        "text": "Merge build systems in the byterun/ directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "review": [ [ "Adrien", "Nader" ] ]
      },
      {
        "references": [ 1033, 1048 ],
        "text": "Merge build systems in the root directory\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ],
        "fix": [ [ "Andreas", "Hauptmann" ] ],
        "review": [ [ "Adrien", "Nader" ], [ "Damien", "Doligez" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 673 ],
        "text": "distinguish initialization of block fields from mutation in lambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "review": [
          [ "Xavier", "Leroy" ],
          [ "Stephen", "Dolan" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 744, 781 ],
        "text": "fix duplicate self-reference in imported cmi_crcs\n  list in .cmti files + avoid rebuilding cmi_info record when creating\n  .cmti files\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 881 ],
        "text": "change `Outcometree.out_variant` to be more general.\n  `Ovar_name of out_ident * out_type list` becomes `Ovar_type of out_type`.\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 908 ],
        "text": "refactor PIC-handling in the s390x backend\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Mark", "Shinwell" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 5115 ],
        "text": "protect all byterun/fail.c functions against\n  uninitialized caml_global_data (only changes the bytecode behavior)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6136, 967 ],
        "text": "Fix Closure so that overapplication evaluation order\n  matches the bytecode compiler and Flambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 6550, 1094 ],
        "text": "Allow creation of empty .cmxa files on macOS\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6594, 955 ],
        "text": "Remove \"Istore_symbol\" specific operation on x86-64.\n  This is more robust and in particular avoids assembly failures on Win64.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Xavier", "Leroy" ] ],
        "testing": [ [ "David", "Allsopp" ], [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 6903 ],
        "text": "Unix.execvpe doesn't change environment on Cygwin\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Adrien", "Nader" ] ]
      },
      {
        "references": [ 6987 ],
        "text": "Strange error message probably caused by\n  universal variable escape (with polymorphic variants)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mikhail", "Mandrykin" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 7216, 949 ],
        "text": "don't require double parens in Functor((val x))\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7331 ],
        "text": "ocamldoc, avoid infinite loop in presence of self alias,\n  i.e. module rec M:sig end = M\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7346, 966 ],
        "text": "Fix evaluation order problem whereby expressions could\n  be incorrectly re-ordered when compiling with Flambda.  This also fixes one\n  example of evaluation order in the native code compiler not matching the\n  bytecode compiler (even when not using Flambda)\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7348 ],
        "text": "Private row variables can escape their scope\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7407 ],
        "text": "Two not-quite-standard C idioms rejected by SUNWSPro compilers\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7421 ],
        "text": "Soundness bug with GADTs and lazy\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7424 ],
        "text": "Typechecker diverges on unboxed type declaration\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7426, 965 ],
        "text": "Fix fatal error during object compilation (also\n  introduces new [Pfield_computed] and [Psetfield_computed] primitives)\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Ulrich", "Singer" ] ]
      },
      {
        "references": [ 7427, 959 ],
        "text": "Don't delete let bodies in Cmmgen\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7432 ],
        "text": "Linking modules compiled with -labels and -nolabels is not safe\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7437 ],
        "text": "typing assert failure with nonrec priv\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 7438 ],
        "text": "warning +34 exposes #row with private types\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 7443, 990 ],
        "text": "spurious unused open warning with local open in patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7456, 1092 ],
        "text": "fix slow compilation on source files containing a lot\n  of similar debugging information location entries\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7504 ],
        "text": "fix warning 8 with unconstrained records\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 7511, 1133 ],
        "text": "Unboxed type with unboxed argument should not be accepted\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "review": [ [ "Jeremy", "Yallop" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 805, 815, 833 ],
        "text": "check for integer overflow in String.concat\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Alain", "Frisch" ],
          [ "Daniel", "Bünzli" ],
          [ "Fabrice", "Le", "Fessant" ]
        ]
      },
      {
        "references": [ 881 ],
        "text": "short-paths did not apply to some polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 886 ],
        "text": "Fix Ctype.moregeneral's handling of row_name\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 934 ],
        "text": "check for integer overflow in Bytes.extend\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 956 ],
        "text": "Keep possibly-effectful expressions when optimizing multiplication\n  by zero.\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 977 ],
        "text": "Catch Out_of_range in ocamldebug's \"list\" command\n  ",
        "breaking change": false,
        "authors": [ [ "Yunxing", "Dai" ] ]
      },
      {
        "references": [ 983 ],
        "text": "Avoid removing effectful expressions in Closure, and\n  eliminate more non-effectful ones\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 987 ],
        "text": "alloc_sockaddr: don't assume a null terminator. It is not inserted\n  on macOS by system calls that fill in a struct sockaddr (e.g. getsockname).\n  ",
        "breaking change": false,
        "authors": [ [ "Anton", "Bachin" ] ]
      },
      {
        "references": [ 998 ],
        "text": "Do not delete unused closures in un_anf.ml.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 1019 ],
        "text": "Fix fatal error in Flambda mode \"[functions] does not map set of\n  closures ID\"\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 1075 ],
        "text": "Ensure that zero-sized float arrays have zero tags.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1088 ],
        "text": "Gc.minor_words now returns accurate numbers.\n  (compatibility: the .mli declaration of `Gc.minor_words`\n   and `Gc.get_minor_free` changed, which may break libraries\n   re-exporting these values.)\n  ",
        "breaking change": true,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.04.2 (23 Jun 2017):": {
    " Security fix:": [
      {
        "references": [ 7557 ],
        "text": "Local privilege escalation issue with ocaml binaries.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Eric", "Milliken" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ]
  },
  "OCaml 4.04.1 (14 Apr 2017):": {
    " Standard library:": [
      {
        "references": [ 7403, 894 ],
        "text": "fix a bug in Set.map as introduced in 4.04.0\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Thomas", "Leonard" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 7411 ],
        "text": "ocamldoc, avoid nested <pre> tags in module description.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "user", "'kosik'" ] ]
      },
      {
        "references": [ 7488 ],
        "text": "ocamldoc, wrong Latex output for variant types\n  with constructors without arguments.\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 7373, 1023 ],
        "text": "New flexlink target in Makefile.nt to bootstrap the\n  flexlink binary only, rather than the flexlink binary and the FlexDLL C\n  objects.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 7369 ],
        "text": "Str.regexp raises \"Invalid_argument: index out of bounds\"\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 7373, 1023 ],
        "text": "Fix ocamlmklib with bootstrapped FlexDLL. Bootstrapped\n  FlexDLL objects are now installed to a subdirectory flexdll of the Standard\n  Library which allows the compilers to pick them up explicitly and also\n  ocamlmklib to include them without unnecessarily adding the entire Standard\n  Library.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7385, 1057 ],
        "text": "fix incorrect timestamps returned by Unix.stat on Windows\n  when either TZ is set or system date is in DST.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "initial fix": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Xavier", "Leroy" ] ],
        "superior implementation suggestion": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7405, 903 ],
        "text": "s390x: Fix address of caml_raise_exn in native dynlink\n  modules.\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "Jones" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7417, 930 ],
        "text": "ensure 16 byte stack alignment inside caml_allocN on x86-64\n  for ocaml build with WITH_FRAME_POINTERS defined\n  ",
        "breaking change": false,
        "authors": [ [ "Christoph", "Cullmann" ] ]
      },
      {
        "references": [ 7456, 1092 ],
        "text": "fix slow compilation on source files containing a lot\n  of similar debugging information location entries\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7457 ],
        "text": "a case of double free in the systhreads library (POSIX\n  implementation).\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Chet", "Murthy" ] ]
      },
      {
        "references": [ 7460, 1011 ],
        "text": "catch uncaught exception when unknown files are passed\n  as argument (regression in 4.04.0)\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ],
        "report": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7505 ],
        "text": "Memory cannot be released after calling\n    Bigarray.Genarray.change_layout.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Liang", "Wang" ] ]
      },
      {
        "references": [ 912 ],
        "text": "Fix segfault in Unix.create_process on Windows caused by wrong header\n  configuration.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 980 ],
        "text": "add dynlink options to ocamlbytecomp.cmxa to allow ocamlopt.opt\n  to load plugins. See http://github.com/OCamlPro/ocamlc-plugins for examples.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 992 ],
        "text": "caml-types.el: Fix missing format argument, so that it can show kind\n  of call at point correctly.\n  ",
        "breaking change": false,
        "authors": [ [ "Chunhui", "He" ] ]
      },
      {
        "references": [ 1043 ],
        "text": "Allow Windows CRLF line-endings in ocamlyacc on Unix and Cygwin.\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 1072 ],
        "text": "Fix segfault in Sys.runtime_parameters when exception backtraces\n  are enabled.\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Andrieu" ] ]
      }
    ]
  },
  "OCaml 4.04.0 (4 Nov 2016):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Language features:": [
      {
        "references": [ 7233 ],
        "text": "Support GADT equations on non-local abstract types\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 187, 578 ],
        "text": "Local opening of modules in a pattern.\n  Syntax: \"M.(p)\", \"M.[p]\",\"M.[| p |]\", \"M.{p}\"\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Jacques", "Garrigue" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 301 ],
        "text": "local exception declarations \"let exception ... in\"\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 508 ],
        "text": "Allow shortcut for extension on semicolons: ;%foo\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 606 ],
        "text": "optimized representation for immutable records with a single\n  field, and concrete types with a single constructor with a single argument.\n  This is triggered with a [@@unboxed] attribute on the type definition.\n  Currently mutually recursive datatypes are not well supported, this\n  limitation should be lifted in the future (see #7364).\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      }
    ],
    " Compiler user-interface and warnings:": [
      {
        "references": [ 6475, 464 ],
        "text": "interpret all command-line options before compiling any\n  files, changes (improves) the semantics of repeated -o options or -o\n  combined with -c see the super-detailed commit message at\n  https://github.com/ocaml/ocaml/commit/da56cf6dfdc13c09905c2e07f1d4849c8346eec8\n  ",
        "breaking change": true,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 7139 ],
        "text": "clarify the wording of Warning 38\n  (Unused exception or extension constructor)\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7147, 475 ],
        "text": "add colors when reporting errors generated by ppx rewriters.\n  Remove the `Location.errorf_prefixed` function which is no longer relevant\n  ",
        "breaking change": true,
        "authors": [ [ "Simon", "Cruanes" ], [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 7169, 501 ],
        "text": "clarify the wording of Warning 8\n  (Non-exhaustivity warning for pattern matching)\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 591 ],
        "text": "Improve support for OCAMLPARAM: (i) do not use objects\n  files with -a, -pack, -shared; (ii) use \"before\" objects in the toplevel\n  (but not \"after\" objects); (iii) use -I dirs in the toplevel,\n  (iv) fix bug where -I dirs were ignored when using threads\n  ",
        "breaking change": true,
        "authors": [ [ "Marc", "Lasson" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 648 ],
        "text": "New -plugin option for ocamlc and ocamlopt, to dynamically extend\n  the compilers at runtime.\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 684 ],
        "text": "Detect unused module declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 706 ],
        "text": "Add a settable Env.Persistent_signature.load function so\n  that cmi files can be loaded from other sources. This can be used to\n  create self-contained toplevels.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 6279, 553 ],
        "text": "implement Set.map\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6820, 560 ],
        "text": "Add Obj.reachable_words to compute the\n  \"transitive\" heap size of a value\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 473 ],
        "text": "Provide `Sys.backend_type` so that user can write backend-specific\n  code in some cases (for example,  code generator).\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 589 ],
        "text": "Add a non-allocating function to recover the number of\n  allocated minor words.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 626 ],
        "text": "String.split_on_char\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 669 ],
        "text": "Filename.extension and Filename.remove_extension\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "Edgar", "Aroutiounian" ] ],
        "review": [ [ "Daniel", "Bünzli" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 674 ],
        "text": "support unknown Sys.os_type in Filename, defaulting to Unix\n  (Filename would previously fail at initialization time for\n   Sys.os_type values other than \"Unix\", \"Win32\" and \"Cygwin\";\n   mirage-os uses \"xen\")\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 772 ],
        "text": "%string_safe_set and %string_unsafe_set are deprecated aliases\n  for %bytes_safe_set and %bytes_unsafe_set.\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ], [ "Damien", "Doligez" ] ]
      }
    ],
    " Other libraries": [
      {
        "references": [ 4834, 592 ],
        "text": "Add a Biggarray.Genarray.change_layout function\n  to switch bigarrays between C and fortran layouts.\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Hennequin" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Code generation and optimizations:": [
      {
        "references": [ 4747, 328 ],
        "text": "Optimize Hashtbl by using in-place updates of its\n  internal bucket lists.  All operations run in constant stack size\n  and are usually faster, except Hashtbl.copy which can be much\n  slower\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6217, 538 ],
        "text": "Optimize performance of record update:\n  no more performance cliff when { foo with t1 = ..; t2 = ...; ... }\n  hits 6 updated fields\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Nicole" ] ],
        "review": [ [ "Thomas", "Braibant" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7023, 336 ],
        "text": "Better unboxing strategy\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7244, 840 ],
        "text": "Ocamlopt + flambda requires a lot of memory\n  to compile large array literal expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7291, 780 ],
        "text": "Handle specialisation of recursive function that does\n  not always preserve the arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Mark", "Shinwell" ] ],
        "report": [ [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 7328, 702 ],
        "text": "Do not eliminate boxed int divisions by zero and\n  avoid checking twice if divisor is zero with flambda.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 427 ],
        "text": "Obj.is_block is now an inlined OCaml function instead of a\n  C external.  This should be faster.\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Obenour" ] ]
      },
      {
        "references": [ 580 ],
        "text": "Optimize immutable float records\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 602 ],
        "text": "Do not generate dummy code to force module linking\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "reviewed": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 703 ],
        "text": "Optimize some constant string operations when the \"-safe-string\"\n  configure time option is enabled.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 707 ],
        "text": "Load cross module information during a meet\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [ [ "Leo", "White" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 709 ],
        "text": "Share a few more equal switch branches\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 712 ],
        "text": "Small improvements to type-based optimizations for array\n  and lazy\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 714 ],
        "text": "Prevent warning 59 from triggering on Lazy of constants\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 723 ],
        "text": "Sort emitted functions according to source location\n  (Pierre Chambart, review by Mark Shinwell)\n- Lack of type normalization lead to missing simple compilation for \"lazy x\"\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 7203, 534 ],
        "text": "Add a new primitive caml_alloc_float_array to allocate an\n  array of floats\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Braibant" ] ]
      },
      {
        "references": [ 7210, 562 ],
        "text": "Allows to register finalisation function that are\n  called only when a value will never be reachable anymore. The\n  drawbacks compared to the existing one is that the finalisation\n  function is not called with the value as argument. These finalisers\n  are registered with `GC.finalise_last`\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 247 ],
        "text": "In previous OCaml versions, inlining caused stack frames to\n  disappear from stacktraces. This made debugging harder in presence of\n  optimizations, and flambda was going to make this worse. The debugging\n  information produced by the compiler now enables the reconstruction of the\n  original backtrace. Use `Printexc.get_raw_backtrace_next_slot` to traverse\n  the list of inlined stack frames.\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "review": [ [ "Mark", "Shinwell" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 590 ],
        "text": "Do not perform compaction if the real overhead is less than expected\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Braibant" ] ]
      }
    ],
    " Tools:": [
      {
        "references": [ 7189 ],
        "text": "toplevel #show, follow chains of module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 7248 ],
        "text": "have ocamldep interpret -open arguments in left-to-right order\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Anton", "Bachin" ] ]
      },
      {
        "references": [ 7272, 798 ],
        "text": "ocamldoc, missing line breaks in type_*.html files\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7290 ],
        "text": "ocamldoc, improved support for inline records\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7323, 750 ],
        "text": "ensure \"ocamllex -ml\" works with -safe-string\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 7350, 806 ],
        "text": "ocamldoc, add viewport metadata to generated html pages\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 452 ],
        "text": "Make the output of ocamldep more stable\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 548 ],
        "text": "empty documentation comments\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 575 ],
        "text": "Add the -no-version option to the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Hinderer" ] ]
      },
      {
        "references": [ 598 ],
        "text": "Add a --strict option to ocamlyacc treat conflicts as errors\n  (this option is now used for the compiler's parser)\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 613 ],
        "text": "make ocamldoc use -open arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 718 ],
        "text": "ocamldoc, fix order of extensible variant constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      }
    ],
    " Debugging and profiling:": [
      {
        "references": [ 585 ],
        "text": "Spacetime, a new memory profiler ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Leo", "White" ] ]
      }
    ],
    " Manual and documentation:": [
      {
        "references": [ 7007, 7311 ],
        "text": "document the existence of OCAMLPARAM and\n  ocaml_compiler_internal_params\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "reports": [ [ "Wim", "Lewis" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7243 ],
        "text": "warn users against using WinZip to unpack the source archive\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Shayne", "Fletcher" ] ]
      },
      {
        "references": [ 7245, 565 ],
        "text": "clarification to the wording and documentation\n  of Warning 52 (fragile constant pattern)\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "William" ],
          [ "Adrien", "Nader" ],
          [ "Jacques", "Garrigue" ]
        ]
      },
      {
        "references": [ -1 ],
        "text": "PR7265, #769: Restore 4.02.3 behaviour of Unix.fstat, if the\n  file descriptor doesn't wrap a regular file (win32unix only)\n  ",
        "breaking change": false,
        "authors": [ [ "Andreas", "Hauptmann" ] ],
        "review": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7288 ],
        "text": "flatten : Avoid confusion\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "user", "'tormen'" ] ]
      },
      {
        "references": [ 7355 ],
        "text": "Gc.finalise and lazy values\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 842 ],
        "text": "Document that [Store_field] must not be used to populate\n  arrays of values declared using [CAMLlocalN] ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      }
    ],
    " Compiler distribution build system:": [
      {
        "references": [ 324 ],
        "text": "Compiler developers: Adding new C primitives to the\n  standard runtime doesn't require anymore to run `make bootstrap`\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 384 ],
        "text": "Fix compilation using old Microsoft C Compilers not\n  supporting secure CRT functions (SDK Visual Studio 2005 compiler and\n  earlier) and standard 64-bit integer literals (Visual Studio .NET\n  2002 and earlier)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 507 ],
        "text": "More sharing between Unix and Windows makefiles\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 512, 587 ],
        "text": "Installed `ocamlc`, `ocamlopt`, and `ocamllex` are\n  now the native-code versions of the tools, if those versions were\n  built.\n  ",
        "breaking change": true,
        "authors": [ [ "Demi", "Obenour" ] ]
      },
      {
        "references": [ 525 ],
        "text": "fix build on OpenIndiana\n  ",
        "breaking change": false,
        "authors": [ [ "Sergey", "Avseyev" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 687 ],
        "text": "\"./configure -safe-string\" to get a system where\n  \"-unsafe-string\" is not allowed, thus giving stronger non-local\n  guarantees about immutability of strings\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Hezekiah", "M.", "Carty" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 6505 ],
        "text": "Missed Type-error leads to a segfault upon record access.\n  Proper fix required a more restrictive approach to recursive types:\n  mutually recursive types are seen as abstract types (i.e. non-contractive)\n  when checking the well-foundedness of the recursion.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6752 ],
        "text": "Nominal types and scope escaping.\n  Revert to strict scope for non-generalizable type variables, cf. Mantis.\n  Note that this is actually stricter than the behavior before 4.03,\n  cf. #7313, meaning that you may sometimes need to add type annotations\n  to explicitly instantiate non-generalizable type variables.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "discussion": [
          [ "Jeremy", "Yallop" ],
          [ "Nicolás", "Ojeda", "Bär" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 7112 ],
        "text": "Aliased arguments ignored for equality of module types\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7134 ],
        "text": "compiler forcing aliases it shouldn't while reporting type errors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "sliquister" ] ],
        "suggestion": [ [ "sliquister" ] ]
      },
      {
        "references": [ 7153 ],
        "text": "document that Unix.SOCK_SEQPACKET is not really usable.",
        "breaking change": false
      },
      {
        "references": [ 7165, 494 ],
        "text": "uncaught exception on invalid lexer directive\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "KC", "Sivaramakrishnan", "using", "afl-fuzz" ] ]
      },
      {
        "references": [ 7257, 583 ],
        "text": "revert a 4.03 change of behavior on (Unix.sleep 0.),\n  it now calls (nano)sleep for 0 seconds as in (< 4.03) versions.\n  ",
        "breaking change": false,
        "authors": [ [ "Hannes", "Mehnert" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 7259 ],
        "text": "and #603: flambda does not collapse pattern matching\n  in some cases\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [ [ "Reed", "Wilson" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7260 ],
        "text": "GADT + subtyping compile time crash\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Nicolás", "Ojeda", "Bär" ] ]
      },
      {
        "references": [ 7269 ],
        "text": "Segfault from conjunctive constraints in GADT\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7276 ],
        "text": "Support more than FD_SETSIZE sockets in Windows' emulation\n  of select\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Scott" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7278 ],
        "text": "Prevent private inline records from being mutated\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7284 ],
        "text": "Bug in mcomp_fields leads to segfault\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7285 ],
        "text": "Relaxed value restriction broken with principal\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7297 ],
        "text": "-strict-sequence turns off Warning 21\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7299 ],
        "text": "remove access to OCaml heap inside blocking section in win32unix\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Andreas", "Hauptmann" ] ]
      },
      {
        "references": [ 7300 ],
        "text": "remove access to OCaml heap inside blocking in Unix.sleep on Windows\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 7305 ],
        "text": "-principal causes loop in type checker when compiling\n  ",
        "breaking change": false,
        "analysis": [ [ "Leo", "White" ] ],
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 7330 ],
        "text": "Missing exhaustivity check for extensible variant\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Elarnon", "*" ] ]
      },
      {
        "references": [ 7374 ],
        "text": "Contractiveness check unsound with constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 7378 ],
        "text": "GADT constructors can be re-exposed with an incompatible type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7389 ],
        "text": "Unsoundness in GADT exhaustiveness with existential variables\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 533 ],
        "text": "Thread library: fixed [Thread.wait_signal] so that it\n  converts back the signal number returned by [sigwait] to an\n  OS-independent number\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 600 ],
        "text": "(similar to #555) ensure that register typing constraints are\n  respected at N-way join points in the control flow graph\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 672 ],
        "text": "Fix float_of_hex parser to correctly reject some invalid forms\n  ",
        "breaking change": false,
        "authors": [ [ "Bogdan", "Tătăroiu" ] ],
        "review": [ [ "Thomas", "Braibant" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 700 ],
        "text": "Fix maximum weak bucket size\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 708 ],
        "text": "Allow more module aliases in strengthening ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 713, 7301 ],
        "text": "Fix wrong code generation involving lazy values in Flambda\n  mode\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "review": [ [ "Pierre", "Chambart" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 721 ],
        "text": "Fix infinite loop in flambda due to [@@specialise] annotations",
        "breaking change": false
      },
      {
        "references": [ 779 ],
        "text": "Building native runtime on Windows could fail when bootstrapping\n  FlexDLL if there was also a system-installed flexlink\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ],
        "report": [ [ "Michael", "Soegtrop" ] ]
      },
      {
        "references": [ 805, 815, 833 ],
        "text": "check for integer overflow in String.concat\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Alain", "Frisch" ],
          [ "Daniel", "Bünzli" ],
          [ "Fabrice", "Le", "Fessant" ]
        ]
      },
      {
        "references": [ 810 ],
        "text": "check for integer overflow in Array.concat\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 814 ],
        "text": "fix the Buffer.add_substring bounds check to handle overflow\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 880 ],
        "text": "Fix [@@inline] with default parameters in flambda ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 1353 ],
        "text": "add labels to BytesLabels.sub_string ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Internal/compiler-libs changes:": [
      {
        "references": [ 7200, 539 ],
        "text": "Improve, fix, and add test for parsing/pprintast.ml\n  ",
        "breaking change": false,
        "authors": [
          [ "Runhang", "Li" ], [ "David", "Sheets" ], [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 351 ],
        "text": "make driver/pparse.ml functions type-safe\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Dmitrii", "Kosarev" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 516 ],
        "text": "Improve Texp_record constructor representation, and\n  propagate updated record type information\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 678 ],
        "text": "Graphics.close_graph crashes 64-bit Windows ports (re-implementation\n  of #3963)\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 679 ],
        "text": "delay registration of docstring after the mapper is applied\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 872 ],
        "text": "don't attach (**/**) comments to any particular node\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "review": [ [ "Leo", "White" ] ]
      }
    ]
  },
  "OCaml 4.03.0 (25 Apr 2016):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    " Language features:": [
      {
        "references": [ 5528 ],
        "text": "inline records for constructor arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6220, 6403, 6437, 6801 ],
        "text": "Improved redundancy and exhaustiveness checks for GADTs.\n  Namely, the redundancy checker now checks whether the uncovered pattern\n  of the pattern is actually inhabited, exploding at most one wild card.\n  This is also done for exhaustiveness when there is only one case.\n  Additionally, one can now write unreachable cases, of the form\n  \"pat -> .\", which are treated by the redundancy check.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6374 ],
        "text": "allow \"_ t\" as a short-hand for \"(_, _, ..) t\" for n-ary type\n  constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6714 ],
        "text": "allow [@@ocaml.warning] on most structure and signature items:\n  values, modules, module types\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6806 ],
        "text": "Syntax shortcut for putting a type annotation on a record field:\n  { f1 : typ = e } is sugar for { f1 = (e : typ) }\n  { f1 : typ } is sugar for { f1 = (f1 : typ) }\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6806 ],
        "text": "Allow type annotations before the \"->\" in \"fun <args> -> <expr>\"\n  fun x y : (int * int) -> (x, y)\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 26 ],
        "text": "support for \"(type a b)\" as syntactic sugar for \"(type a) (type b)\"\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 42 ],
        "text": "short functor type syntax: \"S -> T\" for \"functor (_ : S) -> T\"\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 88 ],
        "text": "allow field punning in object copying expressions:\n  {< x; y; >} is sugar for {< x = x; y = y; >}\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 112 ],
        "text": "octal escape sequences for char and string literals\n  \"Make it \\o033[1mBOLD\\o033[0m\"\n  ",
        "breaking change": false,
        "authors": [ [ "Rafaël", "Bocquet" ] ],
        "request": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 167 ],
        "text": "allow to annotate externals' arguments and result types so\n  they can be unboxed or untagged: [@unboxed], [@untagged]. Supports\n  untagging int and unboxing int32, int64, nativeint and float.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 173 ],
        "text": "[@inline] and [@inlined] attributes (for function declarations\n  and call sites respectively) to control inlining\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 188 ],
        "text": "accept [@@immediate] attribute on type declarations to mark types\n  that are represented at runtime by an integer\n  ",
        "breaking change": false,
        "authors": [ [ "Will", "Crichton" ] ],
        "reviewed": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 234 ],
        "text": "allow \"[]\" as a user-defined constructor. Demand parenthesis\n  around \"::\" when using \"::\" as user-defined constructor:\n  code using \"| :: of ...\" must change to \"| (::) of ...\".\n  ",
        "breaking change": true,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 240 ],
        "text": "replace special annotations on externals by attributes:\n  * \"float\" is generalized to [@@unboxed]\n  * \"noalloc\" becomes [@@noalloc]\n  Deprecate \"float\" and \"noalloc\".\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 254 ],
        "text": "@ocaml.warn_on_literal_pattern attribute on constructors to\n  warn when the argument is matches against a constant pattern.  This\n  attribute is applied on predefined exception constructors which\n  carry purely informational (with no stability guarantee) messages.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 268 ],
        "text": "hexadecimal notation for floating-point literals: -0x1.ffffp+987\n  In OCaml source code, FP literals can be written using the hexadecimal\n  notation 0x<mantissa in hex>p<exponent> from ISO C99.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 273 ],
        "text": "allow to get the extension slot of an extension constructor\n  by writing [%extension_constructor <path>]\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 282 ],
        "text": "change short-paths penalty heuristic to assign the same cost to\n  idents containing double underscores as to idents starting with an underscore\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 6681 ],
        "text": "#326: signature items are now accepted as payloads for\n  extension and attributes, using the syntax [%foo: SIG ] or [@foo: SIG ].\n  Examples: \"[%%client: val foo : int]\" or \"val%client foo : int\".\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 342 ],
        "text": "Allow shortcuts for extension and attributes on all keywords:\n  module%foo, class[@foo], etc.\n  The attribute in \"let[@foo] .. in ..\" is now attached to the value binding,\n  not to the expression.\n  ",
        "breaking change": true,
        "authors": [ [ "Gabriel", "Radanne" ] ]
      }
    ],
    " Compilers:": [
      {
        "references": [ 4231, 5461 ],
        "text": "warning 31 is now fatal by default\n  (Warning 31: A module is linked twice in the same executable.)\n  This is an interim solution; double-linking of modules has dangerous\n  semantics, eg. exception constructors end up with two distinct declarations.\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 4800 ],
        "text": "better compilation of tuple assignment\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5995 ],
        "text": "keep -for-pack into account to name exceptions;\n  -for-pack should now be used during bytecode compilation as well\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 6400 ],
        "text": "better error message for '_' used as an expression\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6501 ],
        "text": "harden the native-code generator against certain uses of \"%identity\"\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Antoine", "Miné" ] ]
      },
      {
        "references": [ 6636 ],
        "text": "add --version option\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6679 ],
        "text": "fix pprintast printing of constraints in type declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6737 ],
        "text": "fix Typedtree attributes on (fun x -> body) expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Oleg", "Kiselyov" ] ]
      },
      {
        "references": [ 6865 ],
        "text": "remove special case for parsing \"let _ = expr\" in structures\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6438, 7059, 315 ],
        "text": "Pattern guard disables exhaustiveness check\n  (function Some x when x = 0 -> ()) will now raise warning 8 (non-exhaustive)\n  instead of warning 25 (all clauses are guarded). 25 isn't raised anymore.\n  Projects that set warning 8 as an error may fail to compile (presumably\n  this is the semantics they wanted).\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "Martin", "Jambon" ], [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6920 ],
        "text": "fix debug information around uses of %apply or %revapply\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6939 ],
        "text": "Segfault with improper use of let-rec\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6943 ],
        "text": "native-code generator for POWER/PowerPC 64 bits, both in\n  big-endian (ppc64) and little-endian (ppc64le) configuration.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "inspiration": [
          [ "RedHat's", "unofficial", "ppc64" ], [ "ppc64le", "ports" ]
        ]
      },
      {
        "references": [ 6979 ],
        "text": "better code generation in x86-32 backend for copying floats to\n  the stack\n  ",
        "breaking change": false,
        "authors": [ [ "Marc", "Lasson" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7018 ],
        "text": "fix missing identifier renaming during inlining\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7022, 259 ],
        "text": "unbox float and boxed ints earlier, avoid second pass\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7026, 288 ],
        "text": "remove write barrier for polymorphic variants without\n  arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 7031 ],
        "text": "new warning 57, ambiguous guarded or-patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Martin", "Clochard" ], [ "Claude", "Marché" ] ]
      },
      {
        "references": [ 7064, 316 ],
        "text": "allowing to mark compilation units and sub-modules as\n  deprecated\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7067 ],
        "text": "fix performance regression (wrt. 4.01) in the native compiler\n  for long nested structures\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7097 ],
        "text": "fix strange syntax error message around illegal packaged module\n  signature constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 7118, 7120, 408, 476 ],
        "text": "Bug fixed in stack unwinding\n  metadata generation. Was a cause of crashes in GUI programs on OS X.\n  ",
        "breaking change": false,
        "authors": [ [ "Bart", "Jacobs" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 7168 ],
        "text": "Exceeding stack limit in bytecode can lead to a crash.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 7232 ],
        "text": "Strange Pprintast output with ppx_deriving\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Anton", "Bachin" ] ]
      },
      {
        "references": [ 17 ],
        "text": "some cmm optimizations of integer operations with constants\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 89 ],
        "text": "improve type-specialization of unapplied primitives:\n  unapplied annotations (compare : int -> _),\n  type propagation (List.sort compare [1;2;3])\n  and propagation from module signatures now lead to specialization\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 107 ],
        "text": "Prevent more unnecessary float boxing, especially in `if` and `match`\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Brankov" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 109 ],
        "text": "new (lazy) unboxing strategy for float and int references\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Brankov" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 115 ],
        "text": "More precise typing of values at the C-- and Mach level.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "review": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 132 ],
        "text": "Flambda: new intermediate language and \"middle-end\" optimizers\n  ",
        "breaking change": false,
        "authors": [
          [ "Pierre", "Chambart" ],
          [ "Mark", "Shinwell" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 212, 7226, 542 ],
        "text": "emit column position in gas assembly `.loc`\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ], [ "Anton", "Bachin" ] ]
      },
      {
        "references": [ 207 ],
        "text": "Colors in compiler messages (warnings, errors)\n  configure with -color {auto|always|never} or TERM=dumb\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 258 ],
        "text": "more precise information on PowerPC instruction sizes\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 263 ],
        "text": "improve code generation for if-equivalents of (&&) and (||)\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 270 ],
        "text": "Make [transl_exception_constructor] generate [Immutable] blocks\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 271 ],
        "text": "Fix incorrect mutability flag when records are built using \"with\"\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 275 ],
        "text": "native-code generator for IBM z System running Linux.\n  In memoriam Gene Amdahl, 1922-2015.\n  ",
        "breaking change": false,
        "authors": [
          [ "Bill", "O'Farrell" ],
          [ "Tristan", "Amini" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 282 ],
        "text": "relax short-paths safety check in presence of module aliases, take\n  penalty into account while building the printing map.\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 306 ],
        "text": "Instrument the compiler to debug performance regressions\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 319 ],
        "text": "add warning 58 for missing cmx files, and\n  extend -opaque option to mli files: a missing .cmx does not warn\n  if the corresponding .cmi is compiled -opaque.\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 388 ],
        "text": "OCAML_FLEXLINK environment variable allows overriding flexlink\n  command ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 392 ],
        "text": "put all parsetree invariants in a new module Ast_invariants\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 407 ],
        "text": "don't display the name of compiled .c files when calling the\n  Microsoft C Compiler (same as the assembler).\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 431 ],
        "text": "permit constant float arrays to be eligible for pattern match\n  branch merging\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 455 ],
        "text": "provide more debugging information to Js_of_ocaml\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ]
      },
      {
        "references": [ 514, 554 ],
        "text": "Added several command-line flags to explicitly enable\n  settings that are currently the default:\n  `-alias-deps`, `-app-funct`, `-no-keep-docs`, `-no-keep-locs`,\n  `-no-principal`, `-no-rectypes`, `-no-strict-formats`\n  ",
        "breaking change": false,
        "authors": [ [ "Demi", "Obenour" ] ]
      },
      {
        "references": [ 545 ],
        "text": "use reraise to preserve backtrace on\n  `match .. with exception e -> raise e`\n  ",
        "breaking change": false,
        "authors": [ [ "Nicolás", "Ojeda", "Bär" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    " Runtime system:": [
      {
        "references": [ 596 ],
        "text": "make string/bytes distinguishable in the underlying\n  compiler implementation; caml_fill_string and caml_create_string are\n  deprecated and will be removed in the future, please use\n  caml_fill_bytes and caml_create_bytes for migration\n  ",
        "breaking change": true,
        "authors": [ [ "Hongbo", "Zhang" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Alain", "Frisch" ],
          [ "Hugo", "Heuzard" ]
        ]
      },
      {
        "references": [ 3612, 2429 ],
        "text": "allow allocating custom block with finalizers\n  in the minor heap.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 6517 ],
        "text": "use ISO C99 types {,u}int{32,64}_t in preference to our homegrown\n  types {,u}int{32,64}.\n  C stubs may have to be updated as {,u}int{32,64}_t are not defined anymore.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6760 ],
        "text": "closures evaluated in the toplevel can now be marshalled\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 6902, 210 ],
        "text": "emit a runtime warning on stderr\n  when finalizing an I/O channel which is still open:\n    \"channel opened on file '...' dies without being closed\"\n  this is controlled by OCAMLRUNPARAM=W=1 or with Sys.enable_runtime_warnings.\n  The behavior of affected program is not changed,\n  but they should still be fixed.\n  (Alain Frisch, review by Damien Doligez)\n- Signal handling: for read-and-clear, use GCC/Clang atomic builtins\n  if available.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6910, 224 ],
        "text": "marshaling (output_value, input_value, et al)\n  now support marshaled data bigger than 4 Gb.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 22 ],
        "text": "The undocumented layout of weak arrays has been changed. Finalisation\n  functions are now run before the erasure of the corresponding values.",
        "breaking change": true
      },
      {
        "references": [ 226 ],
        "text": "select higher levels of optimization for GCC >= 3.4 and Clang\n  when compiling the run-time system and C stub code.\n  \"-std=gnu99 -O2 -fno-strict-aliasing -fwrapv\" is used by default.\n  This also affects default flags for user stubs compiled with \"ocamlc -c foo.c\"\n  and may uncover bugs in them.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 262 ],
        "text": "Multiple GC roots per compilation unit\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Mark", "Shinwell" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 297 ],
        "text": "Several changes to improve the worst-case GC pause time.\n  Changes Gc.control and Gc.major_slice and adds functions to the Gc module.\n  ",
        "breaking change": true,
        "authors": [ [ "Damien", "Doligez" ] ],
        "help": [
          [ "François", "Bobot" ],
          [ "Thomas", "Braibant" ],
          [ "Leo", "White" ]
        ]
      },
      {
        "references": [ 325 ],
        "text": "Add v=0x400 flag to OCAMLRUNPARAM to display GC stats on exit\n  ",
        "breaking change": false,
        "authors": [ [ "Louis", "Gesbert" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      }
    ],
    " Standard library:": [
      {
        "references": [ 7848, 230 ],
        "text": "Array.map2, Array.iter2\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Christopher", "McAlpine" ] ]
      },
      {
        "references": [ 5197, 63 ],
        "text": "Arg: allow flags such as --flag=arg as well as --flag arg\n  ",
        "breaking change": false,
        "authors": [ [ "Richard", "Jones" ] ]
      },
      {
        "references": [ 6017, 7034, 267 ],
        "text": "More efficient ifprintf implementation\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6296 ],
        "text": "Some documentation on the floating-point representations\n    recognized by Pervasives.float_of_string\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6316 ],
        "text": "Scanf.scanf failure on %u formats when reading big integers\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 6321 ],
        "text": "guarantee that \"hypot infinity nan = infinity\"\n  (for conformance with ISO C99)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6390, 36 ],
        "text": "expose Sys.{int_size,max_wosize} for js_of_ocaml portability\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 6449 ],
        "text": "Add Map.union\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6494 ],
        "text": "Add 'equal' functions in modules\n  Bytes, Char, Digest, Int32, Int64, Nativeint, and String\n  Users defining their own modules with signature 'module type of Int32'\n  have to extend their implementation.\n  ",
        "breaking change": true,
        "authors": [ [ "Romain", "Calascibetta" ] ]
      },
      {
        "references": [ 6524, 79 ],
        "text": "Filename: Optional ?perms argument to open_temp_file\n  May break partial applications of the function (fix by passing ?perms:None)\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6525, 80 ],
        "text": "Add Uchar module to the standard library\n  May introduce module name conflicts with existing projects.\n  ",
        "breaking change": true,
        "authors": [ [ "Daniel", "Bünzli" ] ],
        "review": [ [ "Yoriyuki", "Yamagata" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6577 ],
        "text": "improve performance of %L, %l, %n, %S, %C format specifiers\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6585 ],
        "text": "fix memory leak in win32unix/createprocess.c\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "user", "'aha'" ] ]
      },
      {
        "references": [ 6645, 174 ],
        "text": "Guarantee that Set.add, Set.remove, Set.filter\n  return the original set if no change is required\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Mohamed", "Iguernlala" ] ]
      },
      {
        "references": [ 6649, 222 ],
        "text": "accept (int_of_string \"+3\")\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Christopher", "McAlpine" ] ]
      },
      {
        "references": [ 6694, 6695, 124 ],
        "text": "deprecate functions using ISO-8859-1 character set\n  in Char, Bytes, String and provide alternatives *_acii using US-ASCII.\n  Affected functions:\n    {Char,String,Bytes}.{uppercase,lowercase},\n    {String,Bytes}.{capitalize,uncaptialize}\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 22 ],
        "text": "Add the Ephemeron module that implements ephemerons and weak\n  hash table\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "review": [
          [ "Damien", "Doligez" ],
          [ "Daniel", "Bünzli" ],
          [ "Alain", "Frisch" ],
          [ "Pierre", "Chambart" ]
        ]
      },
      {
        "references": [ 164 ],
        "text": "more efficient (branchless) implementation of Pervasives.compare\n  specialized at type 'float'.\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Brankov" ] ]
      },
      {
        "references": [ 175 ],
        "text": "Guarantee that Map.add, Map.remove, Map.filter\n  return the original map if no change is required.\n  ",
        "breaking change": false,
        "authors": [ [ "Mohamed", "Iguernlala" ] ]
      },
      {
        "references": [ 201 ],
        "text": "generalize types of Printf.{ifprintf,ikfprintf}\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ] ]
      },
      {
        "references": [ 216 ],
        "text": "add the missing POSIX.1-2001 signals in Sys\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Bury" ] ]
      },
      {
        "references": [ 239 ],
        "text": "remove type-unsafe code from Stream\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Gabriel", "Scherer" ], [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 250 ],
        "text": "Check for negative start element in Array.sub\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 265 ],
        "text": "new implementation of Queue avoiding Obj.magic\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 268, 303 ],
        "text": "'%h' and '%H' modifiers for printf and scanf to\n  support floating-point numbers in hexadecimal notation\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 272 ],
        "text": "Switch classify_float to [@@unboxed]\n  (Alain Frisch)\n- Improve speed of classify_float by not going through fpclassify()\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 277 ],
        "text": "Switch the following externals to [@@unboxed]:\n  * {Nativeint,Int32,Int64}.{of,to}_float\n  * Int{32,64}.float_of_bits\n  * Int{32,64}.bits_of_float\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 281 ],
        "text": "Switch the following externals to [@@unboxed]:\n  * Sys.time (and [@@noalloc])\n  * Pervasives.ldexp (and [@@noalloc])\n  * Pervasives.compare for float, nativeint, int32, int64.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 3622, 195 ],
        "text": "add function Stack.fold\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 329 ],
        "text": "Add exists, for_all,  mem and memq functions in Array\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ] ]
      },
      {
        "references": [ 337 ],
        "text": "Add [Hashtbl.filter_map_inplace]\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 356 ],
        "text": "Add [Format.kasprintf]\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Mark", "Shinwell" ] ]
      }
    ],
    " Type system:": [
      {
        "references": [ 5545 ],
        "text": "Type annotations on methods cannot control the choice of abbreviation\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6465 ],
        "text": "allow incremental weakening of module aliases.\n  This is done by adding equations to submodules when expanding aliases.\n  In theory this may be incompatible is some corner cases defining a module\n  type through inference, but no breakage known on published code.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6593 ],
        "text": "Functor application in tests/basic-modules fails after commit 15405\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Toplevel and debugger:": [
      {
        "references": [ 6113 ],
        "text": "Add descriptions to directives, and display them via #help\n  ",
        "breaking change": false,
        "authors": [
          [ "Nick", "Giannarakis" ],
          [ "Berke", "Durak" ],
          [ "Francis", "Southern" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 6396 ],
        "text": "Warnings-as-errors not properly flushed in the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6401 ],
        "text": "use proper error reporting for toplevel environment initialization:\n  no more Env.Error(_) at start time\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6468 ],
        "text": "toplevel now supports backtraces if invoked with OCAMLRUNPARAM=b\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ], [ "Jake", "Donham" ] ],
        "review": [
          [ "Gabriel", "Scherer" ], [ "Jacques-Henri", "Jourdan" ]
        ]
      },
      {
        "references": [ 6906 ],
        "text": "wrong error location for unmatched paren with #use in toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Kenichi", "Asai" ] ]
      },
      {
        "references": [ 6935, 298 ],
        "text": "crash in debugger when load_printer is given a directory\n  ",
        "breaking change": false,
        "authors": [ [ "Junsong", "Li" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7081 ],
        "text": "report preprocessor warnings in the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 7098 ],
        "text": "Loss of ppx context in toplevel after an exception\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 7101 ],
        "text": "The toplevel does not close in_channel for libraries specified on\n  its command line\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 7119 ],
        "text": "the toplevel does not respect [@@@warning]\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Gabriel", "Radanne" ] ]
      }
    ],
    " Other libraries:": [
      {
        "doc": "  (Xavier Leroy)  now causes an error.  Calling [set_binary_mode_{in,out} chan false] on these channels  Unix.out_channel_of_descr no longer support text mode under Windows.* Unix library: channels created by Unix.in_channel_of_descr or"
      },
      {
        "references": [ 4023 ],
        "text": "and #68: add Unix.sleepf (sleep with sub-second resolution)\n  (Evgenii Lepikhin and Xavier Leroy)\n* Protect Unix.sleep against interruptions by handled signals.\n  Before, a handled signal could cause Unix.sleep to return early.\n  Now, the sleep is restarted until the given time is elapsed.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6120, 462 ],
        "text": "implement Unix.symlink and Unix.readlink on\n  Windows. Unix.symlink has a new optional argument to_dir (ignored on\n  non-native Windows platforms). stat functions reimplemented to avoid\n  buggy Microsoft CRT implementations (native Windows only)\n  ",
        "breaking change": true,
        "authors": [ [ "David", "Allsopp" ] ],
        "review": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6263 ],
        "text": "add kind_size_in_bytes and size_in_bytes functions\n  to Bigarray module.\n  ",
        "breaking change": false,
        "authors": [ [ "Runhang", "Li" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6289 ],
        "text": "Unix.utimes uses the current time only if both arguments\n    are exactly 0.0.  Also, use sub-second resolution if available.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 6896 ],
        "text": "serious reimplementation of Big_int.float_of_big_int and\n  Ratio.float_of_ratio, ensuring that the result is correctly rounded.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6989 ],
        "text": "in Str library, make sure that all \\(...\\) groups are binding\n    and can be consulted with Str.matched_group.  There used to be\n    a limitation to 32 binding groups.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7013 ],
        "text": "spurious wake-up in the Event module\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7024 ],
        "text": "in documentation of Str regular expressions, clarify what\n    \"end of line\" means for \"^\" and \"$\" regexps.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "question": [ [ "Fredrik", "Lindgren" ] ]
      },
      {
        "references": [ 7209 ],
        "text": "do not run at_exit handlers in [Unix.create_process] and\n  similar functions when the [exec] call fails in the child process\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      }
    ],
    " OCamldep:": [
      {
        "references": [ 286 ],
        "text": "add support for module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    " Manual:": [
      {
        "references": [ 302 ],
        "text": "The OCaml reference manual is now included in the manual/\n  subdirectory of the main OCaml source repository. Contributions to\n  the manual are warmly welcome.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "review": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 6601 ],
        "text": "replace strcpy with caml_strdup in sample code\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ]
      },
      {
        "references": [ 6676 ],
        "text": "ongoing simplification of the \"Language Extensions\" section\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6898 ],
        "text": "Update win32 support documentation of the Unix library\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 7092, 379 ],
        "text": "Add missing documentation for new 4.03 features\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7094, 468, 551 ],
        "text": "add new section 8.5 to document warnings\n  The general idea is to document warnings that may require explanations.\n  Currently documented warnings are:\n  - 52: Fragile constant pattern.\n  - 57: Ambiguous or-pattern variables under guard\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 7109, 380 ],
        "text": "Fix bigarray documentation layout\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ], [ "Leo", "White" ] ]
      }
    ],
    " Bug fixes:": [
      {
        "references": [ 3612 ],
        "text": "memory leak in bigarray read from file\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "report": [ [ "Gary", "Huber" ] ]
      },
      {
        "references": [ 4166, 6956 ],
        "text": "force linking when calling external C primitives\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "reports": [ [ "Markus", "Mottl" ], [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 4466, 5325 ],
        "text": "under Windows, concurrent read and write operations\n    on the same socket could block unexpectedly.  Fixed by keeping sockets\n    in asynchronous mode rather than creating them in synchronous mode.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 4539 ],
        "text": "change exception string raised when comparing functional values\n  May break programs matching on the string argument of Invalid_argument.\n  Matching on the string argument of Invalid_argument or Failure is a\n  programming mistake: these strings may change in future versions.\n  ",
        "breaking change": true,
        "authors": [ [ "Nicolas", "Braud-Santoni" ] ],
        "report": [ [ "Eric", "Cooper" ] ]
      },
      {
        "references": [ 4832 ],
        "text": "Filling bigarrays may block out runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 5663 ],
        "text": "program rejected due to nongeneralizable type variable that\n    appears nowhere\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Weeks" ] ]
      },
      {
        "references": [ 5780 ],
        "text": "report more informative type names in GADTs error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Sebastien", "Furic" ] ]
      },
      {
        "references": [ 5887 ],
        "text": "move the byterun/*.h headers to byterun/caml/*.h to avoid header\n    name clashes\n  ",
        "breaking change": false,
        "authors": [
          [ "Jérôme", "Vouillon" ], [ "Adrien", "Nader" ], [ "whitequark" ]
        ]
      },
      {
        "references": [ 6081 ],
        "text": "ocaml now adds script's directory to search path, not current\n    directory\n  ",
        "breaking change": true,
        "authors": [ [ "Thomas", "Leonard" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6108, 6802 ],
        "text": "fail cleanly if dynlink.cma or ocamltoplevel.cma\n    are loaded inside the toplevel loop.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6171 ],
        "text": "Confusing error message when a type escapes its scope.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ],
        "report": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6340 ],
        "text": "Incorrect handling of \\r when processing \"Windows\" source files\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 6342 ],
        "text": "Incorrect error message when type constraints differ\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Philippe", "Wang" ] ]
      },
      {
        "references": [ 6521 ],
        "text": "{Bytes,Char,String}.escaped were locale-dependent\n  we now escape all non-ASCII-printable instead of a locale-dependent subset.\n  ",
        "breaking change": true,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6526 ],
        "text": "ocamllex should not warn on unescaped newline inside comments\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "user", "'dhekir'" ] ]
      },
      {
        "references": [ 6341 ],
        "text": "ocamldoc -colorize-code adds spurious <br> tags to <pre> blocks\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ] ],
        "report": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6560 ],
        "text": "Wrong failure message for {Int32,Int64,NativeInt}.of_string\n  It reported (Failure \"int_of_string\"), now \"Int32.of_string\" etc.\n  ",
        "breaking change": false,
        "authors": [ [ "Maxime", "Dénès" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6648 ],
        "text": "show_module should indicate its elision\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6650 ],
        "text": "Cty_constr not handled correctly by Subst\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6651 ],
        "text": "Failing component lookup\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6664 ],
        "text": "Crash when finalising lazy values of the wrong type.\n  ",
        "breaking change": true,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6672 ],
        "text": "Unused variance specification allowed in with constraint\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6677 ],
        "text": "Allow to disable warning 39 (useless \"rec\") with [@ocaml.warning]\n  applied to the first value binding of the would-be \"rec\" declaration\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6744 ],
        "text": "Univars can escape through polymorphic variants (partial fix)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6752 ],
        "text": "Extensible variant types and scope escaping\n  A side-effect of the fix is that (ocamlc -i) sometimes reports\n  (type-sound) invalid signature, with a type used before its declaration.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Maxence", "Guesdon" ] ]
      },
      {
        "references": [ 6762 ],
        "text": "improve warning 45 in presence of re-exported type definitions\n  (Warning 45: open statement shadows the constructor)\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 6776 ],
        "text": "Failure to kill the \"tick\" thread, segfault when exiting the runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Thomas", "Braibant" ] ]
      },
      {
        "references": [ 6780 ],
        "text": "Poor error message for wrong -farch and -ffpu options (ocamlopt, ARM)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6805 ],
        "text": "Duplicated expression in case of hole in a non-failing switch.\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ] ]
      },
      {
        "references": [ 6808 ],
        "text": "the parsing of OCAMLRUNPARAM is too lax\n  ",
        "breaking change": true,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6874 ],
        "text": "Inefficient code generated for module function arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 6888 ],
        "text": "The list command of ocamldebug uses the wrong file\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Pierre-Marie", "Pédrot" ] ]
      },
      {
        "references": [ 6897 ],
        "text": "Bad error message for some pattern matching on extensible variants\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 6899 ],
        "text": "Optional parameters and non generalizable type variables\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 6907 ],
        "text": "Stack overflow printing error in class declaration\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Ivan", "Gotovchits" ] ]
      },
      {
        "references": [ 6931 ],
        "text": "Incorrect error message on type error inside record construction\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6938 ],
        "text": "fix regression on \"%047.27{l,L,n}{d,i,x,X,o,u}\"\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ],
        "report": [ [ "Arduino", "Cascella" ] ]
      },
      {
        "references": [ 6944 ],
        "text": "let module X = Path in … is not typed as a module alias\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 6945 ],
        "text": "and #227: protect Sys and Unix functions against string\n    arguments containing the null character '\\000'\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6946 ],
        "text": "Uncaught exception with wrong type for \"%ignore\"\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6954 ],
        "text": "Infinite loop in type checker with module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 6972, 276 ],
        "text": "4.02.3 regression on documentation comments in .cmt files\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 6977 ],
        "text": "String literals in comments interpret escape sequences\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Daniel", "Bünzli" ], [ "David", "Sheets" ] ]
      },
      {
        "references": [ 6980 ],
        "text": "Assert failure from polymorphic variants and existentials\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6981 ],
        "text": "Ctype.Unify(_) with associated functor arg referring to previous one\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Nicholas", "Labich" ] ]
      },
      {
        "references": [ 6982 ],
        "text": "unexpected type error when packing a module alias\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 6985 ],
        "text": "`module type of struct include Bar end exposes\n           %s#row when Bar contains private row types\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Nicholas", "Labich" ] ]
      },
      {
        "references": [ 6992 ],
        "text": "Segfault from bug in GADT/module typing\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6993 ],
        "text": "Segfault from recursive modules violating exhaustiveness assumptions\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6998 ],
        "text": "Typer fails reading unnecessary cmis with -no-alias-deps and -w -49\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7003 ],
        "text": "String.sub may cause segmentation fault on sizes above 2^31\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Radek", "Micek" ] ]
      },
      {
        "references": [ 7008 ],
        "text": "Fatal error in ocamlc with empty compilation unit name\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Cesar", "Kunz" ] ]
      },
      {
        "references": [ 7012 ],
        "text": "Variable name forgotten when it starts with a capital letter\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Thomas", "Leonard" ], [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7016 ],
        "text": "fix Stack overflow in GADT typing\n  Note: Equi-recursive types are considered when checking GADT pattern\n  exhaustiveness, even when -rectypes is not used.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mikhail", "Mandrykin" ] ]
      },
      {
        "references": [ 7030 ],
        "text": "libasmrun_shared.so fails to build on SPARC Solaris\n  ",
        "breaking change": false,
        "authors": [ [ "Patrick", "Star" ] ],
        "report": [ [ "Patrick", "Star" ] ]
      },
      {
        "references": [ 7036 ],
        "text": "Module alias is not taken into account when checking module\n  type compatibility (in a class type)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 7037 ],
        "text": "more reproducible builds, don't put temp file names into objects\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7038 ],
        "text": "out of memory condition in caml_io_mutex_lock\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Marc", "Lasson" ] ]
      },
      {
        "references": [ 7039 ],
        "text": "Unix.getsockname returns garbage for unnamed PF_UNIX sockets\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7042 ],
        "text": "and #295: CSE optimization confuses the FP literals +0.0 and -0.0\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 7075 ],
        "text": "Fix repetitions in ocamldoc generated documentation\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7082 ],
        "text": "Object type in recursive module's `with` annotation\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "Nicholas", "Labich" ] ]
      },
      {
        "references": [ 7096 ],
        "text": "ocamldoc uses an incorrect subscript/superscript style\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "user", "'pierpa'" ] ]
      },
      {
        "references": [ 7108 ],
        "text": "ocamldoc, have -html preserve custom/extended html generators\n  ",
        "breaking change": false,
        "authors": [ [ "Armaël", "Guéneau" ] ]
      },
      {
        "references": [ 7111 ],
        "text": "reject empty let bindings instead of printing incorrect syntax\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 7113 ],
        "text": "-safe-string can break GADT compatibility check\n  bytes and string are now considered compatible even with -safe-string,\n  which may break exhaustivity for code assuming they were disjoint\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7115 ],
        "text": "shadowing in a branch of a GADT match breaks unused variable warning\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 7133, 450 ],
        "text": "generate local jump labels on OS X\n  ",
        "breaking change": false,
        "authors": [ [ "Bart", "Jacobs" ] ]
      },
      {
        "references": [ 7135 ],
        "text": "only warn about ground coercions in -principal mode\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7152 ],
        "text": "Typing equality involving non-generalizable type variable\n  A side-effect of the fix is that, for deeply nested non generalizable\n  type variables, having an interface file may no longer be sufficient,\n  and you may have to add a local type annotation (cf #7313)\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 7160 ],
        "text": "Type synonym definitions can weaken gadt constructor types\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mikhail", "Mandrykin" ] ]
      },
      {
        "references": [ 7181 ],
        "text": "Misleading error message with GADTs and polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 7182 ],
        "text": "Assertion failure with recursive modules and externals\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7196 ],
        "text": "\"let open\" is not correctly pretty-printed to the left of a ';'\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Christophe", "Raffalli" ] ]
      },
      {
        "references": [ 7214 ],
        "text": "Assertion failure in Env.add_gadt_instances\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7220 ],
        "text": "fix a memory leak when using both threads and exception backtraces\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Rob", "Hoes" ] ],
        "review": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 7222 ],
        "text": "Escaped existential type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 7230 ],
        "text": "Scrutinee discarded in match with only refutation cases\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 7234 ],
        "text": "Compatibility check wrong for abstract type constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 7324 ],
        "text": "OCaml 4.03.0 type checker dies with an assert failure when\n  given some cyclic recursive module expression\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "jmcarthur" ] ]
      },
      {
        "references": [ 7368 ],
        "text": "Manual major GC fails to compact the heap\n  ",
        "breaking change": false,
        "authors": [ [ "Krzysztof", "Pszeniczny" ] ]
      },
      {
        "references": [ 205 ],
        "text": "Clear caml_backtrace_last_exn before registering as root\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ],
        "report": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 220 ],
        "text": "minor -dsource error on recursive modules\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 228 ],
        "text": "fix a dangling internal pointer in (bytecode )debug_info\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Mark", "Shinwell" ],
          [ "Xavier", "Leroy" ]
        ]
      },
      {
        "references": [ 233 ],
        "text": "Make CamlinternalMod.init_mod robust to optimization\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 249 ],
        "text": "fix a few hardcoded ar commands\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 251 ],
        "text": "fix cross-compilation with ocamldoc enabled\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 280 ],
        "text": "Fix stdlib dependencies for .p.cmx\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 283 ],
        "text": "Fix memory leaks in intern.c when OOM is raised\n  ",
        "breaking change": false,
        "authors": [ [ "Marc", "Lasson" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 22 ],
        "text": "Fix the cleaning of weak pointers. In very rare cases\n  accessing a value during the cleaning of the weak pointers could\n  result in the value being removed from one weak arrays and kept in\n  another one. That breaks the property that a value is removed from a\n  weak pointer only when it is dead and garbage collected.\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 313 ],
        "text": "Prevent quadratic cases in CSE\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6795, 6996 ],
        "text": "Make ocamldep report errors passed in\n  [%ocaml.error] extension points\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 355 ],
        "text": "make ocamlnat build again\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 405 ],
        "text": "fix compilation under Visual Studio 2015\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 441 ],
        "text": "better type error location in presence of type constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ],
        "report": [ [ "Arseniy", "Alekseyev" ] ]
      },
      {
        "references": [ 477 ],
        "text": "reallow docstrings inside object types, and inside polymorphic\n  variant and arrow types\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ]
      }
    ],
    " Features wishes:": [
      {
        "references": [ 4518, 29 ],
        "text": "change location format for reporting errors in ocamldoc\n  ",
        "breaking change": false,
        "authors": [ [ "Sergei", "Lebedev" ] ]
      },
      {
        "references": [ 4714 ],
        "text": "List.cons",
        "breaking change": false
      },
      {
        "references": [ 5418 ],
        "text": "(comments) : generate dependencies with $(CC) instead of gcc\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Michael", "Grünewald" ] ]
      },
      {
        "references": [ 6167 ],
        "text": "OCAMLPARAM support for disabling PIC generation (\"pic=0\")\n  ",
        "breaking change": false,
        "authors": [ [ "Gabor", "Pali" ] ]
      },
      {
        "references": [ 6367, 25 ],
        "text": "introduce Asttypes.arg_label to encode labelled arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6452, 140 ],
        "text": "add internal support for custom printing formats\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6611 ],
        "text": "remove the option wrapper on optional arguments in the syntax tree\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "whitequark" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6635 ],
        "text": "support M.[], M.(), M.{< >} and M.[| |]\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 6691 ],
        "text": "install .cmt[i] files for stdlib and compiler-libs\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Sheets" ] ],
        "request": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 6722 ],
        "text": "compatibility with x32 architecture (x86-64 in ILP32 mode).\n  ocamlopt is not supported, but bytecode compiles cleanly.\n  ",
        "breaking change": false,
        "authors": [ [ "Adam", "Borowski" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6742 ],
        "text": "remove duplicate virtual_flag information from Tstr_class\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6719 ],
        "text": "improve Buffer.add_channel when not enough input is available\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 6816 ],
        "text": "reject integer and float literals directly followed by an identifier.\n  This was previously read as two separate tokens.\n  [let abc = 1 in (+) 123abc] was accepted and is now rejected.\n  ",
        "breaking change": true,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 6876 ],
        "text": "improve warning 6 by listing the omitted labels.\n  (Warning 6: Label omitted in function application)\n  ",
        "breaking change": false,
        "authors": [ [ "Eyyüb", "Sari" ] ]
      },
      {
        "references": [ 6924 ],
        "text": "tiny optim to avoid some spilling of floats in x87\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 111 ],
        "text": "`(f [@taillcall]) x y` warns if `f x y` is not a tail-call\n  ",
        "breaking change": false,
        "authors": [ [ "Simon", "Cruanes" ] ]
      },
      {
        "references": [ 118 ],
        "text": "ocamldep -allow-approx: fallback to a lexer-based approximation\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 137 ],
        "text": "add untypeast.ml (in open recursion style) to compiler-libs\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 142 ],
        "text": "add a CAMLdrop macro for undoing CAMLparam*/CAMLlocal*\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Braibant" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 145 ],
        "text": "speeedup bigarray access by optimizing Cmmgen.bigarray_indexing\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Brankov" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 147 ],
        "text": "[type 'a result = Ok of 'a | Error of 'b] in Pervasives\n  ",
        "breaking change": false,
        "authors": [ [ "Yaron", "Minsky" ] ]
      },
      {
        "references": [ 156, 279 ],
        "text": "optimize caml_frame_descriptors realloc (dynlink speedup)\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Alain", "Frisch" ] ],
        "review": [
          [ "François", "Bobot" ],
          [ "Xavier", "Leroy" ],
          [ "Damien", "Doligez" ]
        ]
      },
      {
        "references": [ 165, 221 ],
        "text": "fix windows compilation warnings\n  ",
        "breaking change": false,
        "authors": [ [ "Bernhard", "Schommer" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 170 ],
        "text": "Parse arbitrary precision integers.\n  Accept a single [A-Za-z] as modifier for integers (generalizing 'l','L','n')\n  and floats.\n  May cause breakage (ie. ppx preprocessor) because of changes in the parsetree.\n  This changes #6816 a little bit by reading the literal [123a] as a single\n  token that can later be rewritten by a ppx preprocessor.\n  ",
        "breaking change": true,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 189 ],
        "text": "Added .dylib and .so as extensions for ocamlmklib\n  ",
        "breaking change": false,
        "authors": [ [ "Edgar", "Aroutiounian" ], [ "whitequark" ] ]
      },
      {
        "references": [ 191 ],
        "text": "Making gc.h and some part of memory.h public\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 196 ],
        "text": "Make [Thread.id] and [Thread.self] [noalloc]\n  ",
        "breaking change": false,
        "authors": [ [ "Clark", "Gaebel" ] ]
      },
      {
        "references": [ 237 ],
        "text": "a CONTRIBUTING document\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Bobot" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 245 ],
        "text": "remove a few remaining French comments\n  ",
        "breaking change": false,
        "authors": [ [ "Florian", "Angeletti" ] ]
      },
      {
        "references": [ 252 ],
        "text": "improve build instructions in MSVC Windows README\n  ",
        "breaking change": false,
        "authors": [ [ "Philip", "Daian" ] ]
      },
      {
        "references": [ 308 ],
        "text": "add experimental support for NetBSD/arm (verified on RaspberryPi)\n  ",
        "breaking change": false,
        "authors": [ [ "Rich", "Neswold" ] ]
      },
      {
        "references": [ 335 ],
        "text": "Type error messages specifies if a type is abstract\n  because no corresponding cmi could be found.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 365 ],
        "text": "prevent printing just a single type variable on one side\n  of a type error clash.\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 383 ],
        "text": "configure: define _ALL_SOURCE for build on AIX7.1\n  ",
        "breaking change": false,
        "authors": [ [ "tkob" ] ]
      },
      {
        "references": [ 401 ],
        "text": "automatically retry failed test directories in the testsuite\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 451 ],
        "text": "an optional 'parallel' target in testsuite/Makefile using the\n  GNU parallel tool to run tests in parallel.\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 555 ],
        "text": "ensure that register typing constraints are respected at\n  join points in the control flow graph\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "debugging": [ [ "Arseniy", "Alekseyev" ], [ "Leo", "White" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    " Build system:": [
      {
        "references": [ 388 ],
        "text": "FlexDLL added as a Git submodule and bootstrappable with the compiler\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      }
    ]
  },
  "OCaml 4.02.3 (27 Jul 2015):": {
    "Bug fixes": [
      {
        "references": [ 6908 ],
        "text": "Top-level custom printing for GADTs: interface change in 4.02.2\n  ",
        "breaking change": false,
        "authors": [ [ "Grégoire", "Henry" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 6919 ],
        "text": "corrupted final_table\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ]
      },
      {
        "references": [ 6926 ],
        "text": "Regression: ocamldoc lost unattached comment\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "François", "Bobot" ] ]
      },
      {
        "references": [ 6930 ],
        "text": "Aliased result type of GADT constructor results in assertion failure\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    "Feature wishes": [
      {
        "references": [ 6691 ],
        "text": "install .cmt[i] files for stdlib and compiler-libs\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Sheets" ] ],
        "request": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 37 ],
        "text": "New primitive: caml_alloc_dummy_function\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      }
    ]
  },
  "OCaml 4.02.2 (17 Jun 2015):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    "Language features": [
      {
        "references": [ 6583 ],
        "text": "add a new class of binary operators with the same syntactic\n  precedence as method calls; these operators start with # followed\n  by a non-empty sequence of operator symbols (for instance #+, #!?).\n  It is also possible to use '#' as part of these extra symbols\n  (for instance ##, or #+#); this is rejected by the type-checker,\n  but can be used e.g. by ppx rewriters.\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "Gabriel", "Radanne" ] ]
      },
      {
        "references": [ 6016 ],
        "text": "add a \"nonrec\" keyword for type declarations\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6612, 152 ],
        "text": "change the precedence of attributes in type declarations\n  ",
        "breaking change": true,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      }
    ],
    "Compilers": [
      {
        "references": [ 6600 ],
        "text": "make -short-paths faster by building the printing map\n  incrementally\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6642 ],
        "text": "replace $CAMLORIGIN in -ccopt with the path to cma or cmxa\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ], [ "Gabriel", "Scherer" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6797 ],
        "text": "new option -output-complete-obj\n  to output an object file with included runtime and autolink libraries\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6845 ],
        "text": "-no-check-prims to tell ocamlc not to check primitives in runtime\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 149 ],
        "text": "Attach documentation comments to parse tree\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 159 ],
        "text": "Better locations for structure/signature items\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      }
    ],
    "Toplevel and debugger": [
      {
        "references": [ 5958 ],
        "text": "generalized polymorphic #install_printer\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Grégoire", "Henry" ] ]
      }
    ],
    "OCamlbuild": [
      {
        "references": [ 6237 ],
        "text": "explicit \"infer\" tag to control or disable menhir --infer\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ]
      },
      {
        "references": [ 6625 ],
        "text": "pass -linkpkg to files built with -output-obj.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6702 ],
        "text": "explicit \"linkpkg\" and \"dontlink(foo)\" flags\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6712 ],
        "text": "Ignore common VCS directories\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6720 ],
        "text": "pass -g to C compilers when tag 'debug' is set\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6733 ],
        "text": "add .byte.so and .native.so targets to pass\n  -output-obj -cclib -shared.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6733 ],
        "text": "\"runtime_variant(X)\" to pass -runtime-variant X option.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6774 ],
        "text": "new menhir-specific flags \"only_tokens\" and \"external_tokens(Foo)\"\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Pottier" ] ]
      }
    ],
    "Libraries": [
      {
        "references": [ 6285 ],
        "text": "Add support for nanosecond precision in Unix.stat()\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ],
        "report": [ [ "user", "'gfxmonk'" ] ]
      },
      {
        "references": [ 6781 ],
        "text": "Add higher baud rates to Unix termios\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Berke", "Durak" ] ]
      },
      {
        "references": [ 6834 ],
        "text": "Add Obj.{first,last}_non_constant_constructor_tag\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "request": [ [ "Gabriel", "Scherer" ] ]
      }
    ],
    "Runtime": [
      {
        "references": [ 6078 ],
        "text": "Release the runtime system when calling caml_dlopen\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6675 ],
        "text": "GC hooks\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Roshan", "James" ] ]
      }
    ],
    "Build system": [
      {
        "references": [ 5418 ],
        "text": "(comments) : generate dependencies with $(CC) instead of gcc\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Michael", "Grünewald" ] ]
      },
      {
        "references": [ 6266 ],
        "text": "Cross compilation for iOs, Android etc\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Damien", "Doligez" ], [ "Mark", "Shinwell" ] ]
      }
    ],
    "Installation procedure": [
      {
        "doc": "  (Mark Shinwell)- Update instructions for x86-64 PIC mode and POWER architecture builds"
      }
    ],
    "Bug fixes": [
      {
        "references": [ 5271 ],
        "text": "Location.prerr_warning is hard-coded to use Format.err_formatter\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Rolf", "Rolles" ] ]
      },
      {
        "references": [ 5395 ],
        "text": "OCamlbuild mishandles relative symlinks and include paths\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Didier", "Le", "Botlan" ] ]
      },
      {
        "references": [ 5822 ],
        "text": "wrong value of Options.ext_dll on windows\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Daniel", "Weil" ] ]
      },
      {
        "references": [ 5836, 6684 ],
        "text": "printing lazy values in ocamldebug may segfault\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "the", "Coq", "team" ] ]
      },
      {
        "references": [ 5887 ],
        "text": "move the byterun/*.h headers to byterun/caml/*.h to avoid\n  header name clashes\n  ",
        "breaking change": false,
        "authors": [
          [ "Jérôme", "Vouillon" ], [ "Adrien", "Nader" ], [ "whitequark" ]
        ]
      },
      {
        "references": [ 6281 ],
        "text": "Graphics window does not acknowledge second click (double click)\n  ",
        "breaking change": false,
        "authors": [ [ "Kyle", "Headley" ] ]
      },
      {
        "references": [ 6490 ],
        "text": "incorrect backtraces in gdb on AArch64.  Also fixes incorrect\n  backtraces on 32-bit ARM.\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6573 ],
        "text": "extern \"C\" for systhreads/threads.h\n  ",
        "breaking change": false,
        "authors": [ [ "Mickaël", "Delahaye" ] ]
      },
      {
        "references": [ 6575 ],
        "text": "Array.init evaluates callback although it should not do so\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Gerd", "Stolpmann" ] ]
      },
      {
        "references": [ 6607 ],
        "text": "The manual doesn't mention 0x200 flag for OCAMLRUNPARAM=v\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6616 ],
        "text": "allow meaningful use of -use-runtime without -custom.\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6617 ],
        "text": "allow android build with pthreads support (since SDK r10c)\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6626 ],
        "text": "ocamlbuild on cygwin cannot find ocamlfind\n  ",
        "breaking change": false,
        "authors": [ [ "Gergely", "Szilvasy" ] ]
      },
      {
        "references": [ 6628 ],
        "text": "Configure script rejects legitimate arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Michael", "Grünewald" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6630 ],
        "text": "Failure of tests/prim-bigstring/{big,}string.ml on big-endian\n  architectures\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "testing": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6640 ],
        "text": "ocamlbuild: wrong \"unused tag\" warning on \"precious\"\n  ",
        "breaking change": false,
        "authors": [],
        "report": [ [ "user", "'william'" ] ]
      },
      {
        "references": [ 6652 ],
        "text": "ocamlbuild -clean does not print a newline after output\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Andi", "McClure" ] ]
      },
      {
        "references": [ 6658 ],
        "text": "cross-compiler: version check not working on OS X\n  ",
        "breaking change": false,
        "authors": [ [ "Gerd", "Stolpmann" ] ]
      },
      {
        "references": [ 6665 ],
        "text": "Failure of tests/asmcomp on sparc\n  ",
        "breaking change": false,
        "authors": [ [ "Stéphane", "Glondu" ] ]
      },
      {
        "references": [ 6667 ],
        "text": "wrong implementation of %bswap16 on ARM64\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6669 ],
        "text": "fix 4.02 regression in toplevel printing of lazy values\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6671 ],
        "text": "Windows: environment variable 'TZ' affects Unix.gettimeofday\n  ",
        "breaking change": false,
        "authors": [ [ "Mickaël", "Delahaye" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6680 ],
        "text": "Missing parentheses in warning about polymorphic variant value\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Philippe", "Veber" ] ]
      },
      {
        "references": [ 6686 ],
        "text": "Bug in [subst_boxed_number]\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6690 ],
        "text": "Uncaught exception (Not_found) with (wrong) wildcard or unification\n  type variable in place of a local abstract type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mikhail", "Mandrykin" ] ]
      },
      {
        "references": [ 6693 ],
        "text": "(part two): Incorrect relocation types in x86-64 runtime system\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [
          [ "Jacques-Henri", "Jourdan" ],
          [ "Xavier", "Leroy" ],
          [ "Mark", "Shinwell" ]
        ]
      },
      {
        "references": [ 6717 ],
        "text": "Pprintast does not print let-pattern attributes\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6727 ],
        "text": "Printf.sprintf \"%F\" misbehavior\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ],
        "report": [ [ "Vassili", "Karpov" ] ]
      },
      {
        "references": [ 6747 ],
        "text": "ocamlobjinfo: missing symbol caml_plugin_header due to underscore\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ], [ "Maverick", "Woo" ] ]
      },
      {
        "references": [ 6749 ],
        "text": "ocamlopt returns n for (n mod 1) instead of 0\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6753 ],
        "text": "Num.quo_num and Num.mod_num incorrect for some negative arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6758 ],
        "text": "Ocamldoc \"analyse_module: parsetree and typedtree don't match\"\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "user", "'maro'" ] ]
      },
      {
        "references": [ 6759 ],
        "text": "big_int_of_string incorrectly parses some hexa literals\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Pierre-yves", "Strub" ] ]
      },
      {
        "references": [ 6763 ],
        "text": "#show with -short-paths doesn't select shortest type paths\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "David", "Sheets" ] ]
      },
      {
        "references": [ 6768 ],
        "text": "Typechecker overflow the stack on cyclic type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "user", "'darktenaibre'" ] ]
      },
      {
        "references": [ 6770 ],
        "text": "duplicate of #6686",
        "breaking change": false
      },
      {
        "references": [ 6772 ],
        "text": "asmrun/signals_asm.c doesn't compile on NetBSD/i386\n  ",
        "breaking change": false,
        "authors": [ [ "Kenji", "Tokudome" ] ]
      },
      {
        "references": [ 6775 ],
        "text": "Digest.file leaks file descriptor on error\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 6779 ],
        "text": "Cross-compilers cannot link bytecode using custom primitives\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "request": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6787 ],
        "text": "Soundness bug with polymorphic variants\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "help": [ [ "Leo", "White" ], [ "Grégoire", "Henry" ] ],
        "report": [ [ "Michael", "O'Connor" ] ]
      },
      {
        "references": [ 6790 ],
        "text": "otherlibs should be built with -g\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6791 ],
        "text": "\"%s@[\", \"%s@{\" regression in Scanf\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 6793 ],
        "text": "ocamlbuild passes nonsensical \"-ocamlc ...\" commands to menhir\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6799 ],
        "text": "include guards missing for unixsupport.h and other files\n  ",
        "breaking change": false,
        "authors": [ [ "Andreas", "Hauptmann" ] ]
      },
      {
        "references": [ 6810 ],
        "text": "Improve documentation of Bigarray.Genarray.map_file\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6812 ],
        "text": "-short-paths and -no-alias-deps can create inconsistent assumptions\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 6817 ],
        "text": "GADT exhaustiveness breakage with modules\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ],
        "report": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 6824 ],
        "text": "fix buffer sharing on partial application of Format.asprintf\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6831 ],
        "text": "Build breaks for -aspp gcc on solaris-like OSs\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Tibble" ] ]
      },
      {
        "references": [ 6836 ],
        "text": "Assertion failure using -short-paths\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "David", "Sheets" ] ]
      },
      {
        "references": [ 6837 ],
        "text": "Build profiling libraries on FreeBSD and NetBSD x86-64\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Michael", "Grünewald" ] ]
      },
      {
        "references": [ 6841 ],
        "text": "Changing compilation unit name with -o breaks ocamldebug\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jordan", "Walke" ] ]
      },
      {
        "references": [ 6842 ],
        "text": "export Typemod.modtype_of_package",
        "breaking change": false
      },
      {
        "references": [ 6843 ],
        "text": "record weak dependencies even when the .cmi is missing\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6849 ],
        "text": "Inverted pattern unification error\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6857 ],
        "text": "__MODULE__ doesn't give the current module with -o\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 6862 ],
        "text": "Exhaustiveness check wrong for class constructor arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6869 ],
        "text": "Improve comment on [Hashtbl.hash_param]\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6870 ],
        "text": "Unsoundness when -rectypes fails to detect non-contractive type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6872 ],
        "text": "Type-directed propagation fails to disambiguate variants\n  that are also exception constructors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Romain", "Beauxis" ] ]
      },
      {
        "references": [ 6878 ],
        "text": "AArch64 backend generates invalid asm: conditional branch\n  out of range ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Richard", "Jones" ] ],
        "review": [ [ "Xavier", "Leroy" ], [ "Thomas", "Refis" ] ],
        "testing": [ [ "Richard", "Jones" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6879 ],
        "text": "Wrong optimization of 1 mod n\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ] ],
        "report": [ [ "Jean-Christophe", "Filliâtre" ] ]
      },
      {
        "references": [ 6884 ],
        "text": "The __CYGWIN32__ #define should be replaced with __CYGWIN__\n  ",
        "breaking change": false,
        "authors": [ [ "Adrien", "Nader" ] ]
      },
      {
        "references": [ 6886 ],
        "text": "-no-alias-deps allows to build self-referential compilation units\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 6889 ],
        "text": "ast_mapper fails to rewrite class attributes\n  ",
        "breaking change": false,
        "authors": [ [ "Sébastien", "Briais" ] ]
      },
      {
        "references": [ 6893 ],
        "text": "ocamlbuild:  \"tag not used\" warning when using (p)dep\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Christiano", "Haesbaert" ] ]
      },
      {
        "references": [ 143 ],
        "text": "fix getsockopt behaviour for boolean socket options\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ], [ "Andrew", "Ray" ] ]
      },
      {
        "references": [ 190 ],
        "text": "typo in pervasives\n  (Guillaume Bury)\n- Misplaced assertion in major_gc.c for no-naked-pointers mode\n  ",
        "breaking change": false,
        "authors": [ [ "Stephen", "Dolan" ], [ "Mark", "Shinwell" ] ]
      }
    ],
    "Feature wishes": [
      {
        "references": [ 6452, 140 ],
        "text": "add internal support for custom printing formats\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6641 ],
        "text": "add -g, -ocamlcflags, -ocamloptflags options to ocamlmklib\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6693 ],
        "text": "also build libasmrun_shared.so and lib{asm,caml}run_pic.a\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ],
        "review": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6842 ],
        "text": "export Typemod.modtype_of_package\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "request": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 139 ],
        "text": "more versatile specification of locations of .annot\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 171 ],
        "text": "allow custom warning printers / catchers\n  ",
        "breaking change": false,
        "authors": [ [ "Benjamin", "Canou" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 191 ],
        "text": "Making gc.h and some part of memory.h public\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ]
      }
    ]
  },
  "OCaml 4.02.1 (14 Oct 2014):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    "Standard library": [
      { "doc": "* Add optional argument ?limit to Arg.align." }
    ],
    "Bug Fixes": [
      {
        "references": [ 4099 ],
        "text": "Bug in Makefile.nt: won't stop on error\n  ",
        "breaking change": false,
        "authors": [ [ "George", "Necula" ] ]
      },
      {
        "references": [ 6181 ],
        "text": "Improve MSVC build\n  ",
        "breaking change": false,
        "authors": [ [ "Chen", "Gang" ] ]
      },
      {
        "references": [ 6207 ],
        "text": "Configure doesn't detect features correctly on Haiku\n  ",
        "breaking change": false,
        "authors": [ [ "Jessica", "Hamilton" ] ]
      },
      {
        "references": [ 6466 ],
        "text": "Non-exhaustive matching warning message for open types is confusing\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6529 ],
        "text": "fix quadratic-time algorithm in Consistbl.extract.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6530 ],
        "text": "Add stack overflow handling for native code (OpenBSD i386 and amd64)\n  ",
        "breaking change": false,
        "authors": [ [ "Cristopher", "Zimmermann" ] ]
      },
      {
        "references": [ 6533 ],
        "text": "broken semantics of %(%) when substituted by a box\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ],
        "report": [ [ "Boris", "Yakobowski" ] ]
      },
      {
        "references": [ 6534 ],
        "text": "legacy support for %.10s\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Nick", "Chapman" ] ]
      },
      {
        "references": [ 6536 ],
        "text": "better documentation of flag # in format strings\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Nick", "Chapman" ] ]
      },
      {
        "references": [ 6544 ],
        "text": "Bytes and CamlinternalFormat missing from threads stdlib.cma\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ]
      },
      {
        "references": [ 6546 ],
        "text": "-dsource omits parens for `List ((`String \"A\")::[]) in patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6547 ],
        "text": "__MODULE__ aborts the compiler if the module name cannot be inferred\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Kaustuv", "Chaudhuri" ] ]
      },
      {
        "references": [ 6549 ],
        "text": "Debug section is sometimes not readable when using -pack\n  ",
        "breaking change": false,
        "authors": [ [ "Hugo", "Heuzard" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6553 ],
        "text": "Missing command line options for ocamldoc\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ] ]
      },
      {
        "references": [ 6554 ],
        "text": "fix race condition when retrieving backtraces\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6557 ],
        "text": "String.sub throws Invalid_argument(\"Bytes.sub\")\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Oliver", "Bandel" ] ]
      },
      {
        "references": [ 6562 ],
        "text": "Fix ocamldebug module source lookup\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6563 ],
        "text": "Inclusion of packs failing to run module initializers\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6564 ],
        "text": "infinite loop in Mtype.remove_aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6565 ],
        "text": "compilation fails with Env.Error(_)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6566 ],
        "text": "-short-paths and signature inclusion errors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6572 ],
        "text": "Fatal error with recursive modules\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Quentin", "Stievenart" ] ]
      },
      {
        "references": [ 6575 ],
        "text": "Array.init evaluates callback although it should not do so\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Gerd", "Stolpmann" ] ]
      },
      {
        "references": [ 6578 ],
        "text": "Recursive module containing alias causes Segmentation fault\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6581 ],
        "text": "Some bugs in generative functors\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6584 ],
        "text": "ocamldep support for \"-open M\"\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Hezekiah", "M.", "Carty" ] ],
        "review": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6588 ],
        "text": "Code generation errors for ARM\n  ",
        "breaking change": false,
        "authors": [ [ "Mark", "Shinwell" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6590 ],
        "text": "Improve Windows (MSVC and mingw) build\n  ",
        "breaking change": false,
        "authors": [ [ "Chen", "Gang" ] ]
      },
      {
        "references": [ 6599 ],
        "text": "ocamlbuild: add -bin-annot when using -pack\n  ",
        "breaking change": false,
        "authors": [ [ "Christopher", "Zimmermann" ] ]
      },
      {
        "references": [ 6602 ],
        "text": "Fatal error when tracing a function with abstract type\n  (Jacques Garrigue, report by Hugo Herbelin)\n- ocamlbuild: add an -ocamlmklib option to change the ocamlmklib command\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ]
      }
    ]
  },
  "OCaml 4.02.0 (29 Aug 2014):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    "Language features": [
      {
        "doc": "  (Damien Doligez)  sequences (type bytes). Activated by command-line option -safe-string.- Separation between read-only strings (type string) and read-write byte  (Alain Frisch)* Alternative syntax for string literals {id|...|id} (can break comments)  (Jacques Garrigue)* Module aliases  (Jacques Garrigue)- Generative functors (#5905)  (Alain Frisch)- Attributes and extension nodes"
      },
      {
        "references": [ 6318 ],
        "text": "Exception cases in pattern matching\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "backend": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5584 ],
        "text": "Extensible open datatypes\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      }
    ],
    "Build system for the OCaml distribution": [
      {
        "doc": "- Updated build instructions for 32-bit Mac OS X on Intel hardware.- Use GNU make instead of portable makefiles.- Use -bin-annot when building."
      }
    ],
    "Shedding weight": [
      {
        "doc": "* Removed Labltk from the distribution, now available as a third-party library.* Removed Camlp4 from the distribution, now available as third-party software."
      }
    ],
    "Type system": [
      {
        "references": [ 6235 ],
        "text": "Keep typing of pattern cases independent in principal mode\n  (i.e. information from previous cases is no longer used when typing\n  patterns; cf. '#6235' in testsuite/test/typing-warnings/records.ml)\n  (Jacques Garrigue)\n- Allow opening a first-class module or applying a generative functor\n  in the body of a generative functor. Allow it also in the body of\n  an applicative functor if no types are created\n  (Jacques Garrigue, suggestion by Leo White)\n* Module aliases are now typed in a specific way, which remembers their\n  identity. Compiled interfaces become smaller, but may depend on the\n  original modules. This also changes the signature inferred by\n  \"module type of\".\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "feedback": [
          [ "Leo", "White" ], [ "Mark", "Shinwell" ], [ "Nick", "Chapman" ]
        ]
      },
      {
        "references": [ 6331 ],
        "text": "Slight change in the criterion to distinguish private\n  abbreviations and private row types: create a private abbreviation for\n  closed objects and fixed polymorphic variants.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6333 ],
        "text": "Compare first class module types structurally rather than\n  nominally. Value subtyping allows module subtyping as long as the internal\n  representation is unchanged.\n  ",
        "breaking change": true,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      }
    ],
    "Compilers": [
      {
        "doc": "  (Xavier Leroy)  (Removes arithmetic and load instructions whose results are unused.)- New back-end optimization pass: dead code elimination.  (Xavier Leroy)  (Reuses results of previous computations instead of recomputing them.)- New back-end optimization pass: common subexpression elimination (CSE).  (Xavier Leroy)  change FP rounding modes at run-time.  can be turned off with option -no-float-const-prop, for codes that  int32/int64/nativeint arithmetic.  Constant propagation for floats- More aggressive constant propagation, including float and"
      },
      {
        "references": [ 6269 ],
        "text": "Optimization of sequences of string patterns\n  (Benoît Vaugon and Luc Maranget)\n- Experimental native code generator for AArch64 (ARM 64 bits)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6042 ],
        "text": "Optimization of integer division and modulus by constant divisors\n  (Xavier Leroy and Phil Denys)\n- Add \"-open\" command line flag for opening a single module before typing\n  (Leo White, Mark Shinwell and Nick Chapman)\n* \"-o\" now sets module name to the output file name up to the first \".\"\n  (it also applies when \"-o\" is not given, i.e. the module name is then\n   the input file name up to the first \".\")\n  ",
        "breaking change": false,
        "authors": [
          [ "Leo", "White" ], [ "Mark", "Shinwell" ], [ "Nick", "Chapman" ]
        ]
      },
      {
        "references": [ 5779 ],
        "text": "better sharing of structured constants\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5817 ],
        "text": "new flag to keep locations in cmi files\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5854 ],
        "text": "issue warning 3 when referring to a value marked with\n  the [@@ocaml.deprecated] attribute\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "suggestion": [ [ "Pierre-Marie", "Pédrot" ] ]
      },
      {
        "references": [ 6017 ],
        "text": "a new format implementation based on GADTs\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ], [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6203 ],
        "text": "Constant exception constructors no longer allocate\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6260 ],
        "text": "avoid unnecessary boxing in let\n  ",
        "breaking change": false,
        "authors": [ [ "Vladimir", "Brankov" ] ]
      },
      {
        "references": [ 6345 ],
        "text": "Better compilation of optional arguments with default values\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "review": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6389 ],
        "text": "ocamlopt -opaque option for incremental native compilation\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ], [ "Gabriel", "Scherer" ] ]
      }
    ],
    "Toplevel interactive system": [
      {
        "references": [ 5377 ],
        "text": "New \"#show_*\" directives\n  ",
        "breaking change": false,
        "authors": [
          [ "ygrek" ], [ "Jacques", "Garrigue" ], [ "Alain", "Frisch" ]
        ]
      }
    ],
    "Runtime system": [
      {
        "doc": "  (Damien Doligez)  increments proportional to heap size by default- Fixed a major performance problem on large heaps (~1GB) by making heap  (Mark Shinwell)  [Val_unit] rather than zero.* Blocks initialized by [CAMLlocal*] and [caml_alloc] are now filled with  (Mark Shinwell)  potentially lead to heap corruption.- Fixed bug in native code version of [caml_raise_with_string] that could  (Mark Shinwell, reviews by Damien Doligez and Xavier Leroy)  header.  The colour of said headers should be black.  things that look like OCaml values: in particular they must have a valid  of the major GC.  In this mode, all out-of-heap pointers must point at  avoiding page table tests during block darkening and the marking phase- New configure option \"-no-naked-pointers\" to improve performance by"
      },
      {
        "references": [ 4765 ],
        "text": "Structural equality treats exception specifically\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5009 ],
        "text": "efficient comparison/indexing of exceptions\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 6075 ],
        "text": "avoid using unsafe C library functions (strcpy, strcat, sprintf)\n  (Xavier Leroy, reports from user 'jfc' and Anil Madhavapeddy)\n- An ISO C99-compliant C compiler and standard library is now assumed.\n  (Plus special exceptions for MSVC.)  In particular, emulation code for\n  64-bit integer arithmetic was removed, the C compiler must support a\n  64-bit integer type.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    "Standard library": [
      {
        "doc": "  (Damien Doligez)* Add new modules Bytes and BytesLabels for mutable byte sequences."
      },
      {
        "references": [ 4986 ],
        "text": "add List.sort_uniq and Set.of_list\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5935 ],
        "text": "a faster version of \"raise\" which does not maintain the backtrace\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6146 ],
        "text": "support \"Unix.kill pid Sys.sigkill\" under Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Romain", "Bardou" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6148 ],
        "text": "speed improvement for Buffer\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6180 ],
        "text": "efficient creation of uninitialized float arrays\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 6355 ],
        "text": "Improve documentation regarding finalisers and multithreading\n  (Daniel Bünzli, Mark Shinwell)\n- Trigger warning 3 for all values marked as deprecated in the documentation.\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      }
    ],
    "OCamldoc": [
      {
        "references": [ 6257 ],
        "text": "handle full doc comments for variant constructors and\n  record fields\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ] ],
        "request": [ [ "ygrek" ] ]
      },
      {
        "references": [ 6274 ],
        "text": "allow doc comments on object types\n  ",
        "breaking change": false,
        "authors": [ [ "Thomas", "Refis" ] ]
      },
      {
        "references": [ 6310 ],
        "text": "fix ocamldoc's subscript/superscript CSS font size\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6425 ],
        "text": "fix generation of man pages\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      }
    ],
    "Bug fixes": [
      {
        "references": [ 2719 ],
        "text": "wrong scheduling of bound checks within a\n  try...with Invalid_argument -> _ ...  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 4719 ],
        "text": "Sys.executable_name wrong if executable name contains dots (Windows)\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Bart", "Jacobs" ] ]
      },
      {
        "references": [ 5406 ],
        "text": "ocamlbuild: \"tag 'package' does not expect a parameter\"\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 5598, 6165 ],
        "text": "Alterations to handling of \\013 in source files\n  breaking other tools\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 5820 ],
        "text": "Fix camlp4 lexer roll back problem\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5946 ],
        "text": "CAMLprim taking (void) as argument\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 6038 ],
        "text": "on x86-32, enforce 16-byte stack alignment for compatibility\n  with recent GCC and Clang.  Win32/MSVC keeps 4-byte stack alignment.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6062 ],
        "text": "Fix a 4.01 camlp4 DELETE_RULE regression caused by commit 13047\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ],
        "report": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 6173 ],
        "text": "Typing error message is worse than before\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6174 ],
        "text": "OCaml compiler loops on an example using GADTs (-rectypes case)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Grégoire", "Henry" ] ],
        "report": [ [ "Chantal", "Keller" ] ]
      },
      {
        "references": [ 6175 ],
        "text": "open! was not supported by camlp4\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 6184 ],
        "text": "ocamlbuild: `ocamlfind ocamldep` does not support -predicate\n  ",
        "breaking change": false,
        "authors": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6194 ],
        "text": "Incorrect unused warning with first-class modules in patterns\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 6211 ],
        "text": "in toplevel interactive use, bad interaction between uncaught\n  exceptions and multiple bindings of the form \"let x = a let y = b;;\".\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6216 ],
        "text": "inlining of GADT matches generates invalid assembly\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6232 ],
        "text": "Don't use [mktemp] on platforms where [mkstemp] is available\n  ",
        "breaking change": false,
        "authors": [ [ "Stéphane", "Glondu" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6233 ],
        "text": "out-of-bounds exceptions lose their locations on ARM, PowerPC\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Stéphane", "Glondu" ] ],
        "testing": [ [ "Stéphane", "Glondu" ] ]
      },
      {
        "references": [ 6235 ],
        "text": "Issue with type information flowing through a variant pattern\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 6239 ],
        "text": "sometimes wrong stack alignment when raising exceptions\n           in -g mode with backtraces active\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Yaron", "Minsky" ] ]
      },
      {
        "references": [ 6240 ],
        "text": "Fail to expand module type abbreviation during substyping\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6241 ],
        "text": "Assumed inequality between paths involving functor arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 6243 ],
        "text": "Make \"ocamlopt -g\" more resistant to ill-formed locations\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Pierre-Marie", "Pédrot" ] ]
      },
      {
        "references": [ 6262 ],
        "text": "equality of first-class modules take module aliases into account\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 6268 ],
        "text": "-DMODEL_$(MODEL) not passed when building asmrun/arm.p.o\n  ",
        "breaking change": false,
        "authors": [ [ "Peter", "Michael", "Green" ] ]
      },
      {
        "references": [ 6273 ],
        "text": "fix Sys.file_exists on large files (Win32)\n  ",
        "breaking change": false,
        "authors": [ [ "Christoph", "Bauer" ] ]
      },
      {
        "references": [ 6275 ],
        "text": "Soundness bug related to type constraints\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6293 ],
        "text": "Assert_failure with invalid package type\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Elnatan", "Reisner" ] ]
      },
      {
        "references": [ 6300 ],
        "text": "ocamlbuild -use-ocamlfind conflicts with -ocamlc\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6302 ],
        "text": "bytecode debug information re-read from filesystem every time\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ]
      },
      {
        "references": [ 6307 ],
        "text": "Behavior of 'module type of' w.r.t. module aliases\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6332 ],
        "text": "Unix.open_process fails to pass empty arguments under Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Virgile", "Prevosto" ] ]
      },
      {
        "references": [ 6346 ],
        "text": "Build failure with latest version of xcode on OSX\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 6348 ],
        "text": "Unification failure for GADT when original definition is hidden\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 6352 ],
        "text": "Automatic removal of optional arguments and sequencing\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6361 ],
        "text": "Hashtbl.hash not terminating on some lazy values w/ recursive types\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6383 ],
        "text": "Exception Not_found when using object type in absent module\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Sébastien", "Briais" ] ]
      },
      {
        "references": [ 6384 ],
        "text": "Uncaught Not_found exception with a hidden .cmi file\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6385 ],
        "text": "wrong allocation of large closures by the bytecode interpreter\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6394 ],
        "text": "Assertion failed in Typecore.expand_path\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6405 ],
        "text": "unsound interaction of -rectypes and GADTs\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Gabriel", "Scherer" ], [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 6408 ],
        "text": "Optional arguments given as ~?arg instead of ?arg in message\n  ",
        "breaking change": false,
        "authors": [ [ "Michael", "O'Connor" ] ]
      },
      {
        "references": [ 6411 ],
        "text": "missing libgcc_s_sjlj-1.dll in mingw (add -static-libgcc)\n  ",
        "breaking change": false,
        "authors": [
          [ "Jun", "Furuse" ],
          [ "Alain", "Frisch" ],
          [ "Jonathan", "Protzenko" ],
          [ "Adrien", "Nader" ]
        ]
      },
      {
        "references": [ 6436 ],
        "text": "Typos in @deprecated text in stdlib/arrayLabels.mli\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ] ]
      },
      {
        "references": [ 6439 ],
        "text": "Don't use the deprecated [getpagesize] function\n  ",
        "breaking change": false,
        "authors": [ [ "John", "Whitington" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6441 ],
        "text": "undetected tail-call in some mutually-recursive functions\n  (many arguments, and mutual block mixes functions and non-functions)\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Holdermans" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6443 ],
        "text": "ocaml segfault when List.fold_left is traced then executed\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "user", "'Reventlov'" ] ]
      },
      {
        "references": [ 6451 ],
        "text": "some bugs in untypeast.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Jun", "Furuse" ] ],
        "review": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6460 ],
        "text": "runtime assertion failure with large [| e1;...eN |]\n  float array expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6463 ],
        "text": "-dtypedtree fails on class fields\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6469 ],
        "text": "invalid -dsource printing of \"external _pipe = ...\", \"Pervasives.(!)\"\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Damien", "Doligez" ],
          [ "user", "'ngunn'" ]
        ]
      },
      {
        "references": [ 6482 ],
        "text": "ocamlbuild fails when _tags file in unhygienic directory\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6502 ],
        "text": "ocamlbuild spurious warning on \"use_menhir\" tag\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6505 ],
        "text": "Missed Type-error leads to a segfault upon record access\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Jeremy", "Yallop" ] ],
        "report": [ [ "Christoph", "Höger" ] ]
      },
      {
        "references": [ 6507 ],
        "text": "crash on AArch64 resulting from incorrect setting of\n  [caml_bottom_of_stack].  ",
        "breaking change": false,
        "authors": [ [ "Richard", "Jones" ], [ "Mark", "Shinwell" ] ]
      },
      {
        "references": [ 6509 ],
        "text": "add -linkall flag to ocamlcommon.cma\n  ",
        "breaking change": false,
        "authors": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 6513 ],
        "text": "Fatal error Ctype.Unify(_) in functor type",
        "breaking change": false
      },
      {
        "references": [ 6523 ],
        "text": "failure upon character bigarray access, and unnecessary change\n  in comparison ordering (Jeremy Yallop, Mark Shinwell)\n- bound-checking bug in caml_string_{get,set}{16,32,64}\n  (Pierre Chambart and Gabriel Scherer, report by Nicolas Trangez)\n- sometimes wrong stack alignment at out-of-bounds array access\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ], [ "Xavier", "Leroy" ] ],
        "report": [ [ "Pierre", "Chambart" ] ]
      }
    ],
    "Features wishes": [
      {
        "references": [ 4243 ],
        "text": "make the Makefiles parallelizable\n  ",
        "breaking change": false,
        "authors": [ [ "Grégoire", "Henry" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 4323 ],
        "text": "have \"of_string\" in Num and Big_int work with binary and\n           hex representations\n  ",
        "breaking change": false,
        "authors": [ [ "Zoe", "Paraskevopoulou" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 4771 ],
        "text": "Clarify documentation of Dynlink.allow_only\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 4855 ],
        "text": "'camlp4 -I +dir' accepted, dir is relative to 'camlp4 -where'\n  ",
        "breaking change": false,
        "authors": [ [ "Jun", "Furuse" ], [ "Hongbo", "Zhang" ] ],
        "report": [ [ "Dmitry", "Grebeniuk" ] ]
      },
      {
        "references": [ 5201 ],
        "text": "ocamlbuild: add --norc to the bash invocation to help performances\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Weil" ] ]
      },
      {
        "references": [ 5650 ],
        "text": "Camlp4FoldGenerator doesn't handle well \"abstract\" types\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5808 ],
        "text": "allow simple patterns, not just identifiers, in \"let p : t = ...\"\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5851 ],
        "text": "warn when -r is disabled because no _tags file is present\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 5899 ],
        "text": "a programmer-friendly access to backtrace information\n  ",
        "breaking change": false,
        "authors": [
          [ "Jacques-Henri", "Jourdan" ], [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 6000 ],
        "text": "comment 9644: add a warning for non-principal coercions to format\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 6054 ],
        "text": "add support for M.[ foo ], M.[| foo |] etc.\n  ",
        "breaking change": false,
        "authors": [ [ "Kaustuv", "Chaudhuri" ] ]
      },
      {
        "references": [ 6064 ],
        "text": "GADT representation for Bigarray.kind + CAML_BA_CHAR runtime kind\n  ",
        "breaking change": false,
        "authors": [ [ "Jeremy", "Yallop" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6071 ],
        "text": "Add a -noinit option to the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Sheets" ] ]
      },
      {
        "references": [ 6087 ],
        "text": "ocamlbuild, improve _tags parsing of escaped newlines\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6109 ],
        "text": "Typos in ocamlbuild error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Kerneis" ] ]
      },
      {
        "references": [ 6116 ],
        "text": "more efficient implementation of Digest.to_hex\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ]
      },
      {
        "references": [ 6142 ],
        "text": "add cmt file support to ocamlobjinfo\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6166 ],
        "text": "document -ocamldoc option of ocamlbuild\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ]
      },
      {
        "references": [ 6182 ],
        "text": "better message for virtual objects and class types\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ], [ "Stephen", "Dolan" ] ]
      },
      {
        "references": [ 6183 ],
        "text": "enhanced documentation for 'Unix.shutdown_connection'\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6187 ],
        "text": "ocamlbuild: warn when using -plugin-tag(s) without myocamlbuild.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6246 ],
        "text": "allow wildcard _ as for-loop index\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "ygrek" ] ]
      },
      {
        "references": [ 6267 ],
        "text": "more information printed by \"bt\" command of ocamldebug\n  ",
        "breaking change": false,
        "authors": [ [ "Josh", "Watzman" ] ]
      },
      {
        "references": [ 6270 ],
        "text": "remove need for -I directives to ocamldebug in common case\n  ",
        "breaking change": false,
        "authors": [ [ "Josh", "Watzman" ] ],
        "review": [ [ "Xavier", "Clerc" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6311 ],
        "text": "Improve signature mismatch error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "suggestion": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 6358 ],
        "text": "obey DESTDIR in install targets\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "request": [ [ "François", "Berenger" ] ]
      },
      {
        "references": [ 6388, 6424 ],
        "text": "more parsetree correctness checks for -ppx users\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "request": [ [ "whitequark" ], [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 6406 ],
        "text": "Expose OCaml version in C headers\n  ",
        "breaking change": false,
        "authors": [ [ "whitequark" ], [ "Romain", "Calascibetta" ] ]
      },
      {
        "references": [ 6446 ],
        "text": "improve \"unused declaration\" warnings wrt. name shadowing\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6495 ],
        "text": "ocamlbuild tags 'safe_string', 'unsafe_string'\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6497 ],
        "text": "pass context information to -ppx preprocessors\n  (whitequark, Alain Frisch)\n- ocamllex: user-definable refill action\n  (Frédéric Bour, review by Gabriel Scherer and Luc Maranget)\n- shorten syntax for functor signatures: \"functor (M1:S1) (M2:S2) .. -> ..\"\n  (Thomas Gazagnaire and Jeremy Yallop, review by Gabriel Scherer)\n- make ocamldebug -I auto-detection work with ocamlbuild\n  ",
        "breaking change": false,
        "authors": [ [ "Josh", "Watzman" ] ]
      }
    ]
  },
  "OCaml 4.01.0 (12 Sep 2013):": {
    "Release documentation": [
      {
        "doc": "(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    "Other libraries": [ { "doc": "- Labltk: updated to Tcl/Tk 8.6." } ],
    "Type system": [
      {
        "references": [ 5759 ],
        "text": "use well-disciplined type information propagation to\n  disambiguate label and constructor names\n  (Jacques Garrigue, Alain Frisch and Leo White)\n* Propagate type information towards pattern-matching, even in the presence of\n  polymorphic variants (discarding only information about possibly-present\n  constructors). As a result, matching against absent constructors is no longer\n  allowed for exact and fixed polymorphic variant types.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 6035 ],
        "text": "Reject multiple declarations of the same method or instance variable\n  in an object\n  ",
        "breaking change": true,
        "authors": [ [ "Alain", "Frisch" ] ]
      }
    ],
    "Compilers": [
      {
        "references": [ 5861 ],
        "text": "raise an error when multiple private keywords are used in type\n  declarations\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5634 ],
        "text": "parsetree rewriter (-ppx flag)\n  (Alain Frisch)\n- ocamldep now supports -absname\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5768 ],
        "text": "On \"unbound identifier\" errors, use spell-checking to suggest names\n  present in the environment\n  (Gabriel Scherer)\n- ocamlc has a new option -dsource to visualize the parsetree\n  (Alain Frisch, Hongbo Zhang)\n- tools/eqparsetree compares two parsetree ignoring location\n  (Hongbo Zhang)\n- ocamlopt now uses clang as assembler on OS X if available, which enables\n  CFI support for OS X.\n  (Benedikt Meurer)\n- Added a new -short-paths option, which attempts to use the shortest\n  representation for type constructors inside types, taking open modules\n  into account. This can make types much more readable if your code\n  uses lots of functors.\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 5986 ],
        "text": "added flag -compat-32 to ocamlc, ensuring that the generated\n  bytecode executable can be loaded on 32-bit hosts.\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 5980 ],
        "text": "warning on open statements which shadow an existing\n  identifier (if it is actually used in the scope of the open); new\n  open! syntax to silence it locally\n  (Alain Frisch, thanks to a report of Daniel Bünzli)\n* warning 3 is extended to warn about other deprecated features:\n  - ISO-latin1 characters in identifiers\n  - uses of the (&) and (or) operators instead of (&&) and (||)\n  (Damien Doligez)\n- Experimental OCAMLPARAM for ocamlc and ocamlopt\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 5571 ],
        "text": "incorrect ordinal number in error message\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "John", "Carr" ] ]
      },
      {
        "references": [ 6073 ],
        "text": "add signature to Tstr_include\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      }
    ],
    "Standard library": [
      {
        "references": [ 5899 ],
        "text": "expose a way to inspect the current call stack,\n  Printexc.get_callstack\n  ",
        "breaking change": false,
        "authors": [
          [ "Gabriel", "Scherer" ],
          [ "Jacques-Henri", "Jourdan" ],
          [ "Alain", "Frisch" ]
        ]
      },
      {
        "references": [ 5986 ],
        "text": "new flag Marshal.Compat_32 for the serialization functions\n  (Marshal.to_*), forcing the output to be readable on 32-bit hosts.\n  (Xavier Leroy)\n- infix application operators |> and @@ in Pervasives\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 6176 ],
        "text": "new Format.asprintf function with a %a formatter\n  compatible with Format.fprintf (unlike Format.sprintf)\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ] ]
      }
    ],
    "Other libraries": [
      {
        "references": [ 5568 ],
        "text": "add O_CLOEXEC flag to Unix.openfile, so that the returned\n  file descriptor is created in close-on-exec mode\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      }
    ],
    "Runtime system": [
      {
        "references": [ 6019 ],
        "text": "more efficient implementation of caml_modify() and caml_initialize().\n  The new implementations are less lenient than the old ones: now,\n  the destination pointer of caml_modify() must point within the minor or\n  major heaps, and the destination pointer of caml_initialize() must\n  point within the major heap.\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "experiment": [ [ "Brian", "Nigito" ] ],
        "feedback": [ [ "Yaron", "Minsky" ], [ "Gerd", "Stolpmann" ] ]
      }
    ],
    "Internals": [
      {
        "doc": "  (Damien Doligez)- The test suite can now be run without installing OCaml first.  (Fabrice Le Fessant)  as part of compilerlibs, to be used on bin-annot files.- Moved debugger/envaux.ml to typing/envaux.ml to publish env_of_only_summary"
      }
    ],
    "Bug fixes": [
      {
        "references": [ 3236 ],
        "text": "Document the fact that queues are not thread-safe\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 3468 ],
        "text": "(part 1) Sys_error documentation\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 3679 ],
        "text": "Warning display problems\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 3963 ],
        "text": "Graphics.wait_next_event in Win32 hangs if window closed\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 4079 ],
        "text": "Queue.copy is now tail-recursive\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Papazian" ] ]
      },
      {
        "references": [ 4138 ],
        "text": "Documentation for Unix.mkdir\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 4469 ],
        "text": "emacs mode: caml-set-compile-command is annoying with ocamlbuild\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 4485 ],
        "text": "Graphics: Keyboard events incorrectly delivered in native code\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Sharvil", "Nanavati" ] ]
      },
      {
        "references": [ 4502 ],
        "text": "ocamlbuild now reliably excludes the build-dir from hygiene check\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Romain", "Bardou" ] ]
      },
      {
        "references": [ 4762 ],
        "text": "?? is not used at all, but registered as a lexer token\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 4788 ],
        "text": "wrong error message when executable file is not found for backtrace\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Claudio", "Sacerdoti", "Coen" ] ]
      },
      {
        "references": [ 4812 ],
        "text": "otherlibs/unix: add extern int code_of_unix_error (value error);\n  ",
        "breaking change": false,
        "authors": [ [ "Goswin", "von", "Berdelow" ] ]
      },
      {
        "references": [ 4887 ],
        "text": "input_char after close_in crashes ocaml (msvc runtime)\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Christoph", "Bauer" ] ],
        "report": [ [ "ygrek" ] ]
      },
      {
        "references": [ 4994 ],
        "text": "ocaml-mode doesn't work with xemacs21\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Stéphane", "Glondu" ] ]
      },
      {
        "references": [ 5098 ],
        "text": "creating module values may lead to memory leaks\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Milan", "Stanojević" ] ]
      },
      {
        "references": [ 5102 ],
        "text": "ocamlbuild fails when using an unbound variable in rule dependency\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Daniel", "Bünzli" ] ]
      },
      {
        "references": [ 5119 ],
        "text": "camlp4 now raises a specific exception when 'DELETE_RULE' fails,\n  rather than raising 'Not_found'\n  ",
        "breaking change": true,
        "authors": [ [ "ygrek" ] ]
      },
      {
        "references": [ 5121 ],
        "text": "%( %) in Format module seems to be broken\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ] ],
        "initial PR": [ [ "Valentin", "Gatien-Baron" ] ],
        "report": [ [ "Khoo", "Yit", "Phang" ] ]
      },
      {
        "references": [ 5178 ],
        "text": "document in INSTALL how to build a 32-bit version under Linux x86-64\n  ",
        "breaking change": false,
        "authors": [ [ "Benjamin", "Monate" ] ]
      },
      {
        "references": [ 5212 ],
        "text": "Improve ocamlbuild error messages of _tags parser\n  ",
        "breaking change": false,
        "authors": [ [ "ygrek" ] ]
      },
      {
        "references": [ 5240 ],
        "text": "register exception printers for Unix.Unix_error and Dynlink.Error\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 5300 ],
        "text": "ocamlbuild: verbose parameter should implicitly set classic display\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Robert", "Jakob" ] ]
      },
      {
        "references": [ 5327 ],
        "text": "(Windows) Unix.select blocks if same socket listed in first and\n  third arguments\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 5343 ],
        "text": "ocaml -rectypes is unsound wrt module subtyping (was still unsound)\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 5350 ],
        "text": "missing return code checks in the runtime system\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 5468 ],
        "text": "ocamlbuild should preserve order of parametric tags\n  ",
        "breaking change": false,
        "authors": [ [ "Wojciech", "Meyer" ] ],
        "report": [ [ "Dario", "Texeira" ] ]
      },
      {
        "references": [ 5551 ],
        "text": "Avoid repeated lookups for missing cmi files\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5552 ],
        "text": "unrecognized gcc option -no-cpp-precomp\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 5580 ],
        "text": "missed opportunities for constant propagation\n  ",
        "breaking change": true,
        "authors": [ [ "Xavier", "Leroy" ], [ "John", "Carr" ] ]
      },
      {
        "references": [ 5611 ],
        "text": "avoid clashes between .cmo files and output files during linking\n  ",
        "breaking change": false,
        "authors": [ [ "Wojciech", "Meyer" ] ]
      },
      {
        "references": [ 5662 ],
        "text": "typo in md5.c\n  ",
        "breaking change": false,
        "authors": [ [ "Olivier", "Andrieu" ] ]
      },
      {
        "references": [ 5673 ],
        "text": "type equality in a polymorphic field\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jean-Louis", "Giavitto" ] ]
      },
      {
        "references": [ 5674 ],
        "text": "Methods call are 2 times slower with 4.00 than with 3.12\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Jean-Louis", "Giavitto" ] ]
      },
      {
        "references": [ 5694 ],
        "text": "Exception raised by type checker\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 5695 ],
        "text": "remove warnings on sparc code emitter\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 5697 ],
        "text": "better location for warnings on statement expressions\n  ",
        "breaking change": false,
        "authors": [ [ "Dan", "Bensen" ] ]
      },
      {
        "references": [ 5698 ],
        "text": "remove hardcoded limit of 200000 labels in emitaux.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "report": [ [ "Marcin", "Sawicki" ] ]
      },
      {
        "references": [ 5702 ],
        "text": "bytecomp/bytelibrarian lib_sharedobjs was defined but never used\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ], [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 5708 ],
        "text": "catch Failure\"int_of_string\" in ocamldebug\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "report": [ [ "user", "'schommer'" ] ]
      },
      {
        "references": [ 5712 ],
        "text": "(9) new option -bin-annot is not documented\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Hendrik", "Tews" ] ]
      },
      {
        "references": [ 5731 ],
        "text": "instruction scheduling forgot to account for destroyed registers\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Benedikt", "Meurer" ] ],
        "reported": [ [ "Jeffrey", "Scofield" ] ]
      },
      {
        "references": [ 5734 ],
        "text": "improved Win32 implementation of Unix.gettimeofday\n  ",
        "breaking change": false,
        "authors": [ [ "David", "Allsopp" ] ]
      },
      {
        "references": [ 5735 ],
        "text": "%apply and %revapply not first class citizens\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "reported": [ [ "Jun", "Furuse" ] ]
      },
      {
        "references": [ 5738 ],
        "text": "first class module patterns not handled by ocamldep\n  ",
        "breaking change": false,
        "authors": [
          [ "Fabrice", "Le", "Fessant" ], [ "Jacques", "Garrigue" ]
        ],
        "reported": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5739 ],
        "text": "Printf.printf \"%F\" (-.nan) returns -nan\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "David", "Allsopp" ] ],
        "reported": [ [ "Samuel", "Mimram" ] ]
      },
      {
        "references": [ 5741 ],
        "text": "make pprintast.ml in compiler_libs\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5747 ],
        "text": "'unused open' warning not given when compiling with -annot\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "reported": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 5752 ],
        "text": "missing dependencies at byte-code link with mlpack\n  ",
        "breaking change": false,
        "authors": [ [ "Wojciech", "Meyer" ], [ "Nicholas", "Lucaroni" ] ]
      },
      {
        "references": [ 5763 ],
        "text": "ocamlbuild does not give correct flags when running menhir\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "reported": [ [ "Philippe", "Veber" ] ]
      },
      {
        "references": [ 5765 ],
        "text": "ocamllex doesn't preserve line directives\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "reported": [ [ "Martin", "Jambon" ] ]
      },
      {
        "references": [ 5770 ],
        "text": "Syntax error messages involving unclosed parens are sometimes\n  incorrect\n  ",
        "breaking change": false,
        "authors": [ [ "Michel", "Mauny" ] ]
      },
      {
        "references": [ 5772 ],
        "text": "problem with marshaling of mutually-recursive functions\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques-Henri", "Jourdan" ] ],
        "reported": [ [ "Cédric", "Pasteur" ] ]
      },
      {
        "references": [ 5775 ],
        "text": "several bug fixes for tools/pprintast.ml\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5784 ],
        "text": "-dclambda option is ignored\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 5785 ],
        "text": "misbehaviour with abstracted structural type used as GADT index\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 5787 ],
        "text": "Bad behavior of 'Unused ...' warnings in the toplevel\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5793 ],
        "text": "integer marshalling is inconsistent between architectures\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Pierre-Marie", "Pédrot" ] ]
      },
      {
        "references": [ 5798 ],
        "text": "add ARM VFPv2 support for Raspbian (ocamlopt)\n  ",
        "breaking change": false,
        "authors": [ [ "Jeffrey", "Scofield" ], [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "Benedikt", "Meurer" ] ]
      },
      {
        "references": [ 5802 ],
        "text": "Avoiding \"let\" as a value name\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Tiphaine", "Turpin" ] ]
      },
      {
        "references": [ 5805 ],
        "text": "Assert failure with warning 34 on pre-processed file\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Tiphaine", "Turpin" ] ]
      },
      {
        "references": [ 5806 ],
        "text": "ensure that backtrace tests are always run (testsuite)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "user", "'michi'" ] ]
      },
      {
        "references": [ 5809 ],
        "text": "Generating .cmt files takes a long time, in case of type error\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5810 ],
        "text": "error in switch printing when using -dclambda\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 5811 ],
        "text": "Untypeast produces singleton tuples for constructor patterns\n  with only one argument\n  ",
        "breaking change": false,
        "authors": [ [ "Tiphaine", "Turpin" ] ]
      },
      {
        "references": [ 5813 ],
        "text": "GC not called when unmarshaling repeatedly in a tight loop (ocamlopt)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "David", "Waern" ] ]
      },
      {
        "references": [ 5814 ],
        "text": "read_cmt -annot does not report internal references\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5815 ],
        "text": "Multiple exceptions in signatures gives an error\n  ",
        "breaking change": false,
        "authors": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 5816 ],
        "text": "read_cmt -annot does not work for partial .cmt files\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5819 ],
        "text": "segfault when using [with] on large recursive record (ocamlopt)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 5821 ],
        "text": "Wrong record field is reported as duplicate\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Martin", "Jambon" ] ]
      },
      {
        "references": [ 5824 ],
        "text": "Generate more efficient code for immediate right shifts.\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "review": [ [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 5825 ],
        "text": "Add a toplevel primitive to use source file wrapped with the\n  corresponding module\n  ",
        "breaking change": false,
        "authors": [
          [ "Grégoire", "Henry" ],
          [ "Wojciech", "Meyer" ],
          [ "caml-list", "discussion" ]
        ]
      },
      {
        "references": [ 5833 ],
        "text": "README.win32 can leave the wrong flexlink in the path\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "William", "Smith" ] ]
      },
      {
        "references": [ 5835 ],
        "text": "nonoptional labeled arguments can be passed with '?'\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Elnatan", "Reisner" ] ]
      },
      {
        "references": [ 5840 ],
        "text": "improved documentation for 'Unix.lseek'\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Matej", "Košík" ] ]
      },
      {
        "references": [ 5848 ],
        "text": "Assertion failure in type checker\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Alain", "Frisch" ] ],
        "report": [ [ "David", "Waern" ] ]
      },
      {
        "references": [ 5858 ],
        "text": "Assert failure during typing of class\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Julien", "Signoles" ] ]
      },
      {
        "references": [ 5865 ],
        "text": "assert failure when reporting undefined field label\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 5872 ],
        "text": "Performance: Buffer.add_char is not inlined\n  ",
        "breaking change": false,
        "authors": [ [ "Gerd", "Stolpmann" ], [ "Damien", "Doligez" ] ]
      },
      {
        "references": [ 5876 ],
        "text": "Uncaught exception with a typing error\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Julien", "Moutinho" ] ]
      },
      {
        "references": [ 5877 ],
        "text": "multiple \"open\" can become expensive in memory\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ], [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5880 ],
        "text": "'Genlex.make_lexer' documentation mentions the wrong exception\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Clerc" ] ],
        "report": [ [ "Virgile", "Prevosto" ] ]
      },
      {
        "references": [ 5885 ],
        "text": "Incorrect rule for compiling C stubs when shared libraries are not\n  supported.\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ]
      },
      {
        "references": [ 5891 ],
        "text": "ocamlbuild: support rectypes tag for mlpack\n  ",
        "breaking change": false,
        "authors": [ [ "Khoo", "Yit", "Phang" ] ]
      },
      {
        "references": [ 5892 ],
        "text": "GADT exhaustiveness check is broken\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 5906 ],
        "text": "GADT exhaustiveness check is still broken\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Sébastien", "Briais" ] ]
      },
      {
        "references": [ 5907 ],
        "text": "Undetected cycle during typecheck causes exceptions\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Pascal", "Zimmer" ] ]
      },
      {
        "references": [ 5910 ],
        "text": "Fix code generation bug for \"mod 1\" on ARM.\n  ",
        "breaking change": false,
        "authors": [ [ "Benedikt", "Meurer" ] ],
        "report": [ [ "user", "'jteg68'" ] ]
      },
      {
        "references": [ 5911 ],
        "text": "Signature substitutions fail in submodules\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 5912 ],
        "text": "add configure option -no-cfi (for OSX 10.6.x with XCode 4.0.2)\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Thomas", "Gazagnaire" ] ]
      },
      {
        "references": [ 5914 ],
        "text": "Functor breaks with an equivalent argument signature\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Markus", "Mottl" ], [ "Grégoire", "Henry" ] ]
      },
      {
        "references": [ 5920, 5957 ],
        "text": "linking failure for big bytecodes on 32bit architectures\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ], [ "Chet", "Murthy" ] ],
        "report": [ [ "Jun", "Furuse" ], [ "Sebastien", "Mondet" ] ]
      },
      {
        "references": [ 5928 ],
        "text": "Missing space between words in manual page for ocamlmktop\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Matej", "Košík" ] ]
      },
      {
        "references": [ 5930 ],
        "text": "ocamldep leaks temporary preprocessing files\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Valentin", "Gatien-Baron" ] ]
      },
      {
        "references": [ 5933 ],
        "text": "Linking is slow when there are functions with large arities\n  ",
        "breaking change": false,
        "authors": [ [ "Valentin", "Gatien-Baron" ] ],
        "review": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 5934 ],
        "text": "integer shift by negative amount (in otherlibs/num)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "John", "Regehr" ] ]
      },
      {
        "references": [ 5944 ],
        "text": "Bad typing performances of big variant type declaration\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 5945 ],
        "text": "Mix-up of Minor_heap_min and Minor_heap_max units\n  ",
        "breaking change": false,
        "authors": [ [ "Benoît", "Vaugon" ] ]
      },
      {
        "references": [ 5948 ],
        "text": "GADT with polymorphic variants bug\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 5953 ],
        "text": "Unix.system does not handle EINTR\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 5965 ],
        "text": "disallow auto-reference to a recursive module in its definition\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Arthur", "Windler", "via", "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 5973 ],
        "text": "Format module incorrectly parses format string\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Weis" ] ],
        "report": [ [ "Frédéric", "Bour" ] ]
      },
      {
        "references": [ 5974 ],
        "text": "better documentation for Str.regexp\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "william" ] ]
      },
      {
        "references": [ 5976 ],
        "text": "crash after recovering from two stack overflows (ocamlopt on MacOS X)\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Pierre", "Boutillier" ] ]
      },
      {
        "references": [ 5977 ],
        "text": "Build failure on raspberry pi: \"input_value: integer too large\"\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Sylvain", "Le", "Gall" ] ]
      },
      {
        "references": [ 5981 ],
        "text": "Incompatibility check assumes abstracted types are injective\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 5982 ],
        "text": "caml_leave_blocking section and errno corruption\n  ",
        "breaking change": false,
        "authors": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 5985 ],
        "text": "Unexpected interaction between variance and GADTs\n  ",
        "breaking change": false,
        "authors": [
          [ "Jacques", "Garrigue" ],
          [ "Jeremy", "Yallop" ],
          [ "Leo", "White" ],
          [ "Gabriel", "Scherer" ]
        ]
      },
      {
        "references": [ 5988 ],
        "text": "missing from the documentation: -impl is a valid flag for ocamlopt\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Vincent", "Bernardoff" ] ]
      },
      {
        "references": [ 5989 ],
        "text": "Assumed inequalities involving private rows\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 5992 ],
        "text": "Crash when pattern-matching lazy values modifies the scrutinee\n  ",
        "breaking change": false,
        "authors": [ [ "Luc", "Maranget" ], [ "Leo", "White" ] ]
      },
      {
        "references": [ 5993 ],
        "text": "Variance of private type abbreviations not checked for modules\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ]
      },
      {
        "references": [ 5997 ],
        "text": "Non-compatibility assumed for concrete types with same constructor\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6004 ],
        "text": "Type information does not flow to \"inherit\" parameters\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6005 ],
        "text": "Type unsoundness with recursive modules\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jérémie", "Dimino" ], [ "Josh", "Berdine" ] ]
      },
      {
        "references": [ 6010 ],
        "text": "Big_int.extract_big_int gives wrong results on negative arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Drake", "Wilson", "via", "Stéphane", "Glondu" ] ]
      },
      {
        "references": [ 6024 ],
        "text": "Format syntax for printing @ is incompatible with 3.12.1\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Boris", "Yakobowski" ] ]
      },
      {
        "references": [ 6001 ],
        "text": "Reduce the memory used by compiling Camlp4\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ], [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Henri", "Gouraud" ] ]
      },
      {
        "references": [ 6031 ],
        "text": "Camomile problem with -with-frame-pointers\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "report": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6032 ],
        "text": "better Random.self_init under Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ], [ "Xavier", "Leroy" ] ]
      },
      {
        "references": [ 6033 ],
        "text": "Matching.inline_lazy_force needs eta-expansion (command-line flags)\n  ",
        "breaking change": false,
        "authors": [
          [ "Pierre", "Chambart" ],
          [ "Xavier", "Leroy" ],
          [ "Luc", "Maranget" ]
        ],
        "report": [ [ "Gabriel", "Scherer" ] ]
      },
      {
        "references": [ 6046 ],
        "text": "testsuite picks up the wrong ocamlrun dlls\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6056 ],
        "text": "Using 'match' prevents generalization of values\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Elnatan", "Reisner" ] ]
      },
      {
        "references": [ 6058 ],
        "text": "'ocamlbuild -use-ocamlfind -tag thread -package threads t.cma' fails\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Scherer" ] ],
        "report": [ [ "Hezekiah", "M.", "Carty" ] ]
      },
      {
        "references": [ 6069 ],
        "text": "ocamldoc: lexing: empty token\n  ",
        "breaking change": false,
        "authors": [ [ "Maxence", "Guesdon" ], [ "Grégoire", "Henry" ] ],
        "report": [ [ "ygrek" ] ]
      },
      {
        "references": [ 6072 ],
        "text": "configure does not handle FreeBSD current (i.e. 10) correctly\n  ",
        "breaking change": false,
        "authors": [ [ "Damien", "Doligez" ] ],
        "report": [ [ "Prashanth", "Mundkur" ] ]
      },
      {
        "references": [ 6074 ],
        "text": "Wrong error message for failing Condition.broadcast\n  ",
        "breaking change": false,
        "authors": [ [ "Markus", "Mottl" ] ]
      },
      {
        "references": [ 6084 ],
        "text": "Define caml_modify and caml_initialize as weak symbols to help\n  with Netmulticore\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ], [ "Gerd", "Stolpmann" ] ]
      },
      {
        "references": [ 6090 ],
        "text": "Module constraint + private type seems broken in ocaml 4.01.0\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Kate", "Deplaix" ] ]
      },
      {
        "references": [ 6109 ],
        "text": "Typos in ocamlbuild error messages\n  ",
        "breaking change": false,
        "authors": [ [ "Gabriel", "Kerneis" ] ]
      },
      {
        "references": [ 6123 ],
        "text": "Assert failure when self escapes its class\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "whitequark" ] ]
      },
      {
        "references": [ 6158 ],
        "text": "Fatal error using GADTs\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Jeremy", "Yallop" ] ]
      },
      {
        "references": [ 6163 ],
        "text": "Assert_failure using polymorphic variants in GADTs\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "Leo", "White" ] ]
      },
      {
        "references": [ 6164 ],
        "text": "segmentation fault on Num.power_num of 0/1\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "report": [ [ "Johannes", "Kanig" ] ]
      },
      {
        "references": [ 6210 ],
        "text": "Camlp4 location error\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ],
        "report": [ [ "Jun", "Furuse" ] ]
      }
    ],
    "Feature wishes": [
      {
        "references": [ 5181 ],
        "text": "Merge common floating point constants in ocamlopt\n  ",
        "breaking change": false,
        "authors": [ [ "Benedikt", "Meurer" ] ]
      },
      {
        "references": [ 5243 ],
        "text": "improve the ocamlbuild API documentation in signatures.mli\n  ",
        "breaking change": false,
        "authors": [ [ "Christophe", "Troestler" ] ]
      },
      {
        "references": [ 5546 ],
        "text": "moving a function into an internal module slows down its use\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 5597 ],
        "text": "add instruction trace option 't' to OCAMLRUNPARAM\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ], [ "Wojciech", "Meyer" ] ]
      },
      {
        "references": [ 5676 ],
        "text": "IPv6 support under Windows\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ],
        "review": [ [ "Jonathan", "Protzenko" ] ]
      },
      {
        "references": [ 5721 ],
        "text": "configure -with-frame-pointers for Linux perf profiling\n  ",
        "breaking change": false,
        "authors": [ [ "Fabrice", "Le", "Fessant" ] ],
        "test": [ [ "Jérémie", "Dimino" ] ]
      },
      {
        "references": [ 5722 ],
        "text": "toplevel: print full module path only for first record field\n  ",
        "breaking change": false,
        "authors": [ [ "Jacques", "Garrigue" ] ],
        "report": [ [ "ygrek" ] ]
      },
      {
        "references": [ 5762 ],
        "text": "Add primitives for fast access to bigarray dimensions\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 5769 ],
        "text": "Allow propagation of Sys.big_endian in native code\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "stealth commit": [ [ "Fabrice", "Le", "Fessant" ] ]
      },
      {
        "references": [ 5771 ],
        "text": "Add primitives for reading 2, 4, 8 bytes in strings and bigarrays\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 5774 ],
        "text": "Add bswap primitives for amd64 and arm\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ],
        "test": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 5795 ],
        "text": "Generate sqrtsd opcode instead of external call to sqrt on amd64\n  ",
        "breaking change": false,
        "authors": [ [ "Pierre", "Chambart" ] ]
      },
      {
        "references": [ 5827 ],
        "text": "provide a dynamic command line parsing mechanism\n  ",
        "breaking change": false,
        "authors": [ [ "Hongbo", "Zhang" ] ]
      },
      {
        "references": [ 5832 ],
        "text": "patch to improve \"wrong file naming\" error messages\n  ",
        "breaking change": false,
        "authors": [ [ "William", "Smith" ] ]
      },
      {
        "references": [ 5864 ],
        "text": "Add a find operation to Set\n  ",
        "breaking change": false,
        "authors": [ [ "François", "Berenger" ] ]
      },
      {
        "references": [ 5886 ],
        "text": "Small changes to compile for Android\n  ",
        "breaking change": false,
        "authors": [ [ "Jérôme", "Vouillon" ] ],
        "review": [ [ "Benedikt", "Meurer" ] ]
      },
      {
        "references": [ 5902 ],
        "text": "-ppx based pre-processor executables accept arguments\n  ",
        "breaking change": false,
        "authors": [ [ "Alain", "Frisch" ] ],
        "report": [ [ "Wojciech", "Meyer" ] ]
      },
      {
        "references": [ 5986 ],
        "text": "Protect against marshaling 64-bit integers in bytecode\n  ",
        "breaking change": false,
        "authors": [ [ "Xavier", "Leroy" ] ],
        "report": [ [ "Alain", "Frisch" ] ]
      },
      {
        "references": [ 6049 ],
        "text": "support for OpenBSD/macppc platform\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ],
        "review": [ [ "Benedikt", "Meurer" ] ]
      },
      {
        "references": [ 6059 ],
        "text": "add -output-obj rules for ocamlbuild\n  ",
        "breaking change": false,
        "authors": [ [ "Anil", "Madhavapeddy" ] ]
      },
      {
        "references": [ 6060 ],
        "text": "ocamlbuild tags 'principal', 'strict_sequence' and 'short_paths'\n  (Anil Madhavapeddy)\n- ocamlbuild tag 'no_alias_deps'\n  ",
        "breaking change": false,
        "authors": [ [ "Daniel", "Bünzli" ] ]
      }
    ],
    "Tools": [
      {
        "doc": "  (Wojciech Meyer)- OCamlbuild now picks the non-core tools like ocamlfind and menhir from PATH  (Jonathan Protzenko)  strict-sequence option.- OCamlbuild now features a strict_sequence tag to trigger the  (Jonathan Protzenko)- OCamlbuild now features a bin_annot tag to generate .cmt files."
      },
      {
        "references": [ 5884 ],
        "text": "Misc minor fixes and cleanup for emacs mode\n  ",
        "breaking change": false,
        "authors": [ [ "Stefan", "Monnier" ] ]
      },
      {
        "references": [ 6030 ],
        "text": "Improve performance of -annot\n  ",
        "breaking change": false,
        "authors": [ [ "Guillaume", "Melquiond" ], [ "Alain", "Frisch" ] ]
      }
    ]
  },
  "OCaml 4.00.1 (5 Oct 2012):": {
    "Bug fixes": [
      {
        "references": [ 4019 ],
        "text": "better documentation of Str.matched_string",
        "breaking change": false
      },
      {
        "references": [ 5111 ],
        "text": "ocamldoc, heading tags inside spans tags is illegal in html",
        "breaking change": false
      },
      {
        "references": [ 5278 ],
        "text": "better error message when typing \"make\"",
        "breaking change": false
      },
      {
        "references": [ 5468 ],
        "text": "ocamlbuild should preserve order of parametric tags",
        "breaking change": false
      },
      {
        "references": [ 5563 ],
        "text": "harden Unix.select against file descriptors above FD_SETSIZE",
        "breaking change": false
      },
      {
        "references": [ 5690 ],
        "text": "\"ocamldoc ... -text README\" raises exception",
        "breaking change": false
      },
      {
        "references": [ 5700 ],
        "text": "crash with native-code stack backtraces under MacOS 10.8 x86-64",
        "breaking change": false
      },
      {
        "references": [ 5707 ],
        "text": "AMD64 code generator: do not use r10 and r11 for parameter passing,\n  as these registers can be destroyed by the dynamic loader",
        "breaking change": false
      },
      {
        "references": [ 5712 ],
        "text": "some documentation problems",
        "breaking change": false
      },
      {
        "references": [ 5715 ],
        "text": "configuring with -no-shared-libs breaks under cygwin",
        "breaking change": false
      },
      {
        "references": [ 5718 ],
        "text": "false positive on 'unused constructor' warning",
        "breaking change": false
      },
      {
        "references": [ 5719 ],
        "text": "ocamlyacc generates code that is not warning 33-compliant",
        "breaking change": false
      },
      {
        "references": [ 5725 ],
        "text": "ocamldoc output of preformatted code",
        "breaking change": false
      },
      {
        "references": [ 5727 ],
        "text": "emacs caml-mode indents shebang line in toplevel scripts",
        "breaking change": false
      },
      {
        "references": [ 5729 ],
        "text": "tools/untypeast.ml creates unary Pexp_tuple",
        "breaking change": false
      },
      {
        "references": [ 5731 ],
        "text": "instruction scheduling forgot to account for destroyed registers",
        "breaking change": false
      },
      {
        "references": [ 5735 ],
        "text": "%apply and %revapply not first class citizens",
        "breaking change": false
      },
      {
        "references": [ 5738 ],
        "text": "first class module patterns not handled by ocamldep",
        "breaking change": false
      },
      {
        "references": [ 5742 ],
        "text": "missing bound checks in Array.sub",
        "breaking change": false
      },
      {
        "references": [ 5744 ],
        "text": "ocamldoc error on \"val virtual\"",
        "breaking change": false
      },
      {
        "references": [ 5757 ],
        "text": "(crash) GC compaction bug",
        "breaking change": false
      },
      {
        "references": [ 5758 ],
        "text": "Compiler bug when matching on floats",
        "breaking change": false
      },
      {
        "references": [ 5761 ],
        "text": "Incorrect bigarray custom block size",
        "breaking change": false
      }
    ]
  },
  "OCaml 4.00.0 (26 Jul 2012):": {
    "Release documentation": [
      {
        "doc": "- The official name of the language is now OCaml.(Changes that can break existing programs are marked with a \"*\")"
      }
    ],
    "Language features": [
      {
        "doc": "  unpacking of a first-class module.- New (module M) and (module M : S) syntax in patterns, for immediate  Using the -principal option guarantees forward compatibility.  first-class modules. The type-checker attempts to infer it from the context.- It is now possible to omit type annotations when packing and unpacking  See chapter \"Language extensions\" of the reference manual for documentation.- Added Generalized Algebraic Data Types (GADTs) to the language."
      }
    ],
    "Compilers": [
      {
        "doc": "- New tool: ocamloptp, the equivalent of ocamlcp for the native-code compiler.  (#5487)  the gdb debugger. Currently supported for x86 32-bits and 64-bits only.  annotations, enabling in particular precise stack backtraces with- Generation of CFI information, and filename/line number debugging (with -g)      exception backtraces.    . Added support for position-independent code, natdynlink, profiling and      savings of 28%.    . Added support for the Thumb-2 instruction set with average code size    . Supports both Linux/EABI (armel) and Linux/EABI+VFPv3 (armhf).* New ARM backend (#5433):  #5360).- Small improvements in code generated for array bounds checks (#5345,- Optimized handling of partially-applied functions (#5287)Native-code compiler:  with the \"method\" keyword.  Use \"method!\" to avoid the warning.* New meaning for warning 7: it is now triggered when a method is overridden  constructors, etc.- Added lots of new warnings about unused variables, opens, fields,- Added option -bin-annot to dump the AST with type annotations.- Optimize away compile-time beta-redexes, e.g. (fun x y -> e) a b.- New option -absname to use absolute paths in error messages* Warning 28 is now enabled by default.- Better reporting of compiler version mismatch in .cmi files- Revised simplification of let-alias (#5205, #5288)"
      }
    ],
    "OCamldoc": [
      {
        "references": [ 5645 ],
        "text": "ocamldoc doesn't handle module/type substitution in signatures",
        "breaking change": false
      },
      {
        "references": [ 5544 ],
        "text": "improve HTML output <less formatting in html code>",
        "breaking change": false
      },
      {
        "references": [ 5522 ],
        "text": "allow referring to record fields and variant constructors\n- fix #5419 (error message in french)\n- fix #5535 (no cross ref to class after dump+load)\n* Use first class modules for custom generators, to be able to\n  load various plugins incrementally adding features to the current\n  generator",
        "breaking change": false
      },
      {
        "references": [ 5507 ],
        "text": "Use Location.t structures for locations.\n- fix: do not keep code when not told to keep code.",
        "breaking change": true
      }
    ],
    "Standard library": [
      {
        "doc": "- String: new function \"map\" (#3888)- Set and Map: more efficient implementation of \"filter\" and \"partition\"- Scanf: new function \"unescaped\" (#3888)- Scanf: width and precision for floating point numbers are now handled    . Consistently treat %% as a plain % character    . Consistently treat %@ as a plain @ character- Format strings for formatted input/output revised to correct #5380     * Faster implementation of Random.float (changes the generated sequences)       when available (e.g. Linux, FreeBSD, MacOS X, Solaris)     . More random initialization (Random.self_init()), using /dev/urandom- Random:  also works for functions that come from dynamically-loaded modules (#5215)- Marshal: marshalling of function values (flag Marshal.Closures) now- Filename: on-demand (lazy) initialization of the PRNG used by \"temp_file\".    . Install new header <caml/hash.h> for C code.      with user-provided seeded hash functions.    . Added new functorial interface \"MakeSeeded\" to support randomization      to turn randomization on by default (#5572, CVE-2012-0839)    . Added \"randomize\" function and \"R\" parameter to OCAMLRUNPARAM      collision patterns and improve security (#5572, CVE-2012-0839)    . Added optional \"random\" parameter to Hashtbl.create to randomize    . Fixed behavior of generic hash function w.r.t. -0.0 and NaN (#5222)    . Statistically-better generic hash function based on Murmur 3 (#5225)* Hashtbl:  (#2395, #2787, #4591)- Array: faster implementations of \"blit\", \"copy\", \"sub\", \"append\" and \"concat\"  (#5437)* Arg: options with empty doc strings are no longer included in the usage string- Added float functions \"hypot\" and \"copysign\" (#3806, #4752, #5246)"
      }
    ],
    "Installation procedure": [
      {
        "doc": "  (-runtime-variant) to select the debug runtime.  a debug version of the runtime system, and a compiler option- Added a configuration option (-with-debug-runtime) to compile and install  ocamlcommon.cma ocamlbytecomp.cma ocamltoplevel.cma* toplevellib.cma is no longer installed because subsumed by  Add \"-I +compiler-libs\" where needed.  `ocamlc -where` are now to be found in  `ocamlc -where`/compiler-libs.* Some .cmi for toplevel internals that used to be installed in   (#8255, #4653, frequently-asked feature).      ocamltoplevel.cma         modules specific to ocaml      ocamloptcomp.cma/.cmxa    modules specific to ocamlopt      ocamlbytecomp.cma/.cmxa   modules for ocamlc and ocaml      ocamlcommon.cma/.cmxa     modules common to ocamlc, ocamlopt, ocaml  modules, plus the following libraries:  The files available there include the .cmi interfaces for all compiler- Compiler internals are now installed in `ocamlc -where`/compiler-libs."
      }
    ],
    "Bug Fixes": [
      {
        "references": [ 8109 ],
        "text": "functions of the Lazy module whose named started with 'lazy_' have\n  been deprecated, and new ones without the prefix added",
        "breaking change": false
      },
      {
        "references": [ 3571 ],
        "text": "in Bigarrays, call msync() before unmapping to commit changes",
        "breaking change": false
      },
      {
        "references": [ 4292 ],
        "text": "various documentation problems",
        "breaking change": false
      },
      {
        "references": [ 4511, 4838 ],
        "text": "local modules remove polymorphism",
        "breaking change": false
      },
      {
        "references": [ 4549 ],
        "text": "Filename.dirname is not handling multiple / on Unix",
        "breaking change": true
      },
      {
        "references": [ 4688 ],
        "text": "(Windows) special floating-point values aren't converted to strings\n  correctly",
        "breaking change": false
      },
      {
        "references": [ 4697 ],
        "text": "Unix.putenv leaks memory on failure",
        "breaking change": false
      },
      {
        "references": [ 4705 ],
        "text": "camlp4 does not allow to define types with `True or `False",
        "breaking change": false
      },
      {
        "references": [ 4746 ],
        "text": "wrong detection of stack overflows in native code under Linux",
        "breaking change": false
      },
      {
        "references": [ 4869 ],
        "text": "rare collisions between assembly labels for code and data",
        "breaking change": false
      },
      {
        "references": [ 4880 ],
        "text": "\"assert\" constructs now show up in the exception stack backtrace",
        "breaking change": false
      },
      {
        "references": [ 4892 ],
        "text": "Array.set could raise \"out of bounds\" before evaluating 3rd arg",
        "breaking change": false
      },
      {
        "references": [ 4937 ],
        "text": "camlp4 incorrectly handles optional arguments if 'option' is\n  redefined",
        "breaking change": false
      },
      {
        "references": [ 5024 ],
        "text": "camlp4r now handles underscores in irrefutable pattern matching of\n  records",
        "breaking change": false
      },
      {
        "references": [ 5064, 5485 ],
        "text": "try to ensure that 4K words of stack are available\n  before calling into C functions, raising a Stack_overflow exception\n  otherwise.  This reduces (but does not eliminate) the risk of\n  segmentation faults due to stack overflow in C code",
        "breaking change": false
      },
      {
        "references": [ 5073 ],
        "text": "wrong location for 'Unbound record field label' error",
        "breaking change": false
      },
      {
        "references": [ 5084 ],
        "text": "sub-sub-module building fails for native code compilation",
        "breaking change": false
      },
      {
        "references": [ 5120 ],
        "text": "fix the output function of Camlp4.Debug.formatter",
        "breaking change": false
      },
      {
        "references": [ 5131 ],
        "text": "compilation of custom runtime with g++ generates lots of warnings",
        "breaking change": false
      },
      {
        "references": [ 5137 ],
        "text": "caml-types-explore does not work",
        "breaking change": false
      },
      {
        "references": [ 5159 ],
        "text": "better documentation of type Lexing.position",
        "breaking change": false
      },
      {
        "references": [ 5171 ],
        "text": "Map.join does more comparisons than needed",
        "breaking change": false
      },
      {
        "references": [ 5176 ],
        "text": "emacs mode: stack overflow in regexp matcher",
        "breaking change": false
      },
      {
        "references": [ 5179 ],
        "text": "port OCaml to mingw-w64",
        "breaking change": false
      },
      {
        "references": [ 5211 ],
        "text": "updated Genlex documentation to state that camlp4 is mandatory for\n  'parser' keyword and associated notation",
        "breaking change": false
      },
      {
        "references": [ 5214 ],
        "text": "ocamlfind plugin invokes 'cut' utility",
        "breaking change": false
      },
      {
        "references": [ 5218 ],
        "text": "use $(MAKE) instead of \"make\" in Makefiles",
        "breaking change": false
      },
      {
        "references": [ 5224 ],
        "text": "confusing error message in non-regular type definition",
        "breaking change": false
      },
      {
        "references": [ 5231 ],
        "text": "camlp4: fix parsing of <:str_item< type t = $x$ >>",
        "breaking change": false
      },
      {
        "references": [ 5233 ],
        "text": "finaliser on weak array gives dangling pointers ",
        "breaking change": false,
        "authors": [ [ "crash" ] ]
      },
      {
        "references": [ 5238, 5277 ],
        "text": "Sys_error when getting error location",
        "breaking change": false
      },
      {
        "references": [ 5261, 5497 ],
        "text": "Ocaml source-code examples are not \"copy-paste-able\"",
        "breaking change": false
      },
      {
        "references": [ 5279 ],
        "text": "executable name is not initialized properly in caml_startup_code",
        "breaking change": true
      },
      {
        "references": [ 5290 ],
        "text": "added hash functions for channels, nats, mutexes, conditions",
        "breaking change": false
      },
      {
        "references": [ 5291 ],
        "text": "undetected loop in class initialization",
        "breaking change": false
      },
      {
        "references": [ 5295 ],
        "text": "OS threads: problem with caml_c_thread_unregister()",
        "breaking change": false
      },
      {
        "references": [ 5301 ],
        "text": "camlp4r and exception equal to another one with parameters",
        "breaking change": false
      },
      {
        "references": [ 5305 ],
        "text": "prevent ocamlbuild from complaining about links to _build/",
        "breaking change": false
      },
      {
        "references": [ 5306 ],
        "text": "comparing to Thread.self() raises exception at runtime",
        "breaking change": false
      },
      {
        "references": [ 5309 ],
        "text": "Queue.add is not thread/signal safe",
        "breaking change": false
      },
      {
        "references": [ 5310 ],
        "text": "Ratio.create_ratio/create_normalized_ratio have misleading names",
        "breaking change": false
      },
      {
        "references": [ 5311 ],
        "text": "better message for warning 23",
        "breaking change": false
      },
      {
        "references": [ 5312 ],
        "text": "command-line arguments @reponsefile auto-expansion feature\n  removed from the Windows OCaml runtime, to avoid conflicts with \"-w @...\"",
        "breaking change": true
      },
      {
        "references": [ 5313 ],
        "text": "ocamlopt -g misses optimizations",
        "breaking change": false
      },
      {
        "references": [ 5214 ],
        "text": "ocamlfind plugin invokes 'cut' utility",
        "breaking change": false
      },
      {
        "references": [ 5316 ],
        "text": "objinfo now shows ccopts/ccobjs/force_link when applicable",
        "breaking change": false
      },
      {
        "references": [ 5318 ],
        "text": "segfault on stack overflow when reading marshaled data",
        "breaking change": false
      },
      {
        "references": [ 5319 ],
        "text": "%r11 clobbered by Lswitch in Windows AMD64 native-code compilation",
        "breaking change": false
      },
      {
        "references": [ 5322 ],
        "text": "type abbreviations expanding to a universal type variable",
        "breaking change": false
      },
      {
        "references": [ 5328 ],
        "text": "under Windows, Unix.select leaves sockets in non-blocking mode",
        "breaking change": false
      },
      {
        "references": [ 5330 ],
        "text": "thread tag with '.top' and '.inferred.mli' targets",
        "breaking change": false
      },
      {
        "references": [ 5331 ],
        "text": "ocamlmktop is not always a shell script",
        "breaking change": false
      },
      {
        "references": [ 5335 ],
        "text": "Unix.environment segfaults after a call to clearenv",
        "breaking change": false
      },
      {
        "references": [ 5338 ],
        "text": "sanitize.sh has windows style end-of-lines ",
        "breaking change": false,
        "authors": [ [ "mingw" ] ]
      },
      {
        "references": [ 5344 ],
        "text": "some predefined exceptions need special printing",
        "breaking change": false
      },
      {
        "references": [ 5349 ],
        "text": "Hashtbl.replace uses new key instead of reusing old key",
        "breaking change": false
      },
      {
        "references": [ 5356 ],
        "text": "ocamlbuild handling of 'predicates' for ocamlfind",
        "breaking change": false
      },
      {
        "references": [ 5364 ],
        "text": "wrong compilation of \"((val m : SIG1) : SIG2)\"",
        "breaking change": false
      },
      {
        "references": [ 5370 ],
        "text": "ocamldep omits filename in syntax error message",
        "breaking change": false
      },
      {
        "references": [ 5374 ],
        "text": "camlp4 creates wrong location for type definitions",
        "breaking change": false
      },
      {
        "references": [ 5380 ],
        "text": "strange sscanf input segfault",
        "breaking change": false
      },
      {
        "references": [ 5382 ],
        "text": "EOPNOTSUPP and ENOTSUPP different on exotic platforms",
        "breaking change": false
      },
      {
        "references": [ 5383 ],
        "text": "build failure in Win32/MSVC",
        "breaking change": false
      },
      {
        "references": [ 5387 ],
        "text": "camlp4: str_item and other syntactic elements with Nils are\n  not very usable",
        "breaking change": false
      },
      {
        "references": [ 5389 ],
        "text": "compaction sometimes leaves a very large heap",
        "breaking change": false
      },
      {
        "references": [ 5393 ],
        "text": "fails to build from source on GNU/kFreeBSD because of -R link option",
        "breaking change": false
      },
      {
        "references": [ 5394 ],
        "text": "documentation for -dtypes is missing in manpage",
        "breaking change": false
      },
      {
        "references": [ 5397 ],
        "text": "Filename.temp_dir_name should be mutable",
        "breaking change": false
      },
      {
        "references": [ 5410 ],
        "text": "fix printing of class application with Camlp4",
        "breaking change": false
      },
      {
        "references": [ 5416 ],
        "text": "(Windows) Unix.(set|clear)_close_on_exec now preserves blocking mode",
        "breaking change": false
      },
      {
        "references": [ 5435 ],
        "text": "ocamlbuild does not find .opt executables on Windows",
        "breaking change": false
      },
      {
        "references": [ 5436 ],
        "text": "update object ids on unmarshaling",
        "breaking change": false
      },
      {
        "references": [ 5442 ],
        "text": "camlp4: quotation issue with strings",
        "breaking change": false
      },
      {
        "references": [ 5453 ],
        "text": "configure doesn't find X11 under Ubuntu/MultiarchSpec",
        "breaking change": false
      },
      {
        "references": [ 5461 ],
        "text": "Double linking of bytecode modules",
        "breaking change": false
      },
      {
        "references": [ 5463 ],
        "text": "Bigarray.*.map_file fail if empty array is requested",
        "breaking change": false
      },
      {
        "references": [ 5465 ],
        "text": "increase stack size of ocamlopt.opt for windows",
        "breaking change": false
      },
      {
        "references": [ 5469 ],
        "text": "private record type generated by functor loses abbreviation",
        "breaking change": false
      },
      {
        "references": [ 5475 ],
        "text": "Wrapper script for interpreted LablTk wrongly handles command line\n  parameters",
        "breaking change": false
      },
      {
        "references": [ 5476 ],
        "text": "bug in native code compilation of let rec on float arrays",
        "breaking change": false
      },
      {
        "references": [ 5477 ],
        "text": "use pkg-config to configure graphics on linux",
        "breaking change": false
      },
      {
        "references": [ 5481 ],
        "text": "update camlp4 magic numbers",
        "breaking change": false
      },
      {
        "references": [ 5482 ],
        "text": "remove bashism in test suite scripts",
        "breaking change": false
      },
      {
        "references": [ 5495 ],
        "text": "camlp4o dies on infix definition",
        "breaking change": false
      },
      {
        "references": [ 5498 ],
        "text": "Unification with an empty object only checks the absence of\n  the first method",
        "breaking change": false
      },
      {
        "references": [ 5503 ],
        "text": "error when ocamlbuild is passed an absolute path as build directory",
        "breaking change": false
      },
      {
        "references": [ 5509 ],
        "text": "misclassification of statically-allocated empty array that\n  falls exactly at beginning of an otherwise unused data page.",
        "breaking change": false
      },
      {
        "references": [ 5510 ],
        "text": "ocamldep has duplicate -ml{,i}-synonym options",
        "breaking change": false
      },
      {
        "references": [ 5511 ],
        "text": "in Bigarray.reshape, unwarranted limitation on new array dimensions.",
        "breaking change": false
      },
      {
        "references": [ 5513 ],
        "text": "(ocamlopt, x86) Int64.div causes floating point exception",
        "breaking change": false
      },
      {
        "references": [ 5516 ],
        "text": "in Bigarray C stubs, use C99 flexible array types if possible",
        "breaking change": false
      },
      {
        "references": [ 5518 ],
        "text": "segfault with lazy empty array",
        "breaking change": false
      },
      {
        "references": [ 5531 ],
        "text": "Allow ocamlbuild to add ocamldoc flags through -docflag\n  and -docflags switches",
        "breaking change": false
      },
      {
        "references": [ 5538 ],
        "text": "combining -i and -annot in ocamlc",
        "breaking change": false
      },
      {
        "references": [ 5543 ],
        "text": "in Bigarray.map_file, try to avoid using lseek() when growing file",
        "breaking change": false
      },
      {
        "references": [ 5648 ],
        "text": "(probably fixed) test failures in tests/lib-threads",
        "breaking change": false
      },
      {
        "references": [ 5551 ],
        "text": "repeated calls to find_in_path degrade performance",
        "breaking change": false
      },
      {
        "references": [ 5552 ],
        "text": "Mac OS X: unrecognized gcc option \"-no-cpp-precomp\"",
        "breaking change": false
      },
      {
        "references": [ 5555 ],
        "text": "add Hashtbl.reset to resize the bucket table to its initial size",
        "breaking change": false
      },
      {
        "references": [ 5560 ],
        "text": "incompatible type for tuple pattern with -principal",
        "breaking change": false
      },
      {
        "references": [ 5575 ],
        "text": "Random states are not marshallable across architectures",
        "breaking change": false
      },
      {
        "references": [ 5579 ],
        "text": "camlp4: when a plugin is loaded in the toplevel,\n  Token.Filter.define_filter has no effect before the first syntax error",
        "breaking change": false
      },
      {
        "references": [ 5585 ],
        "text": "typo: \"explicitely\"",
        "breaking change": false
      },
      {
        "references": [ 5587 ],
        "text": "documentation: \"allows to\" is not correct English",
        "breaking change": false
      },
      {
        "references": [ 5593 ],
        "text": "remove C file when -output-obj fails",
        "breaking change": false
      },
      {
        "references": [ 5597 ],
        "text": "register names for instrtrace primitives in embedded bytecode",
        "breaking change": false
      },
      {
        "references": [ 5598 ],
        "text": "add backslash-space support in strings in ocamllex",
        "breaking change": false
      },
      {
        "references": [ 5603 ],
        "text": "wrong .file debug info generated by ocamlopt -g",
        "breaking change": false
      },
      {
        "references": [ 5604 ],
        "text": "fix permissions of files created by ocamlbuild itself",
        "breaking change": false
      },
      {
        "references": [ 5610 ],
        "text": "new unmarshaler (from #5318) fails to freshen object identifiers",
        "breaking change": false
      },
      {
        "references": [ 5614 ],
        "text": "add missing -linkall flag when compiling ocamldoc.opt",
        "breaking change": false
      },
      {
        "references": [ 5616 ],
        "text": "move ocamlbuild documentation to the reference manual",
        "breaking change": false
      },
      {
        "references": [ 5619 ],
        "text": "Uncaught CType.Unify exception in the compiler",
        "breaking change": false
      },
      {
        "references": [ 5620 ],
        "text": "camlp4 revised syntax, invalid printing of type manifest",
        "breaking change": false
      },
      {
        "references": [ 5637 ],
        "text": "camlp4 revised syntax, invalid printing of anonymous type parameters",
        "breaking change": false
      },
      {
        "references": [ 5643 ],
        "text": "issues with .cfi and .loc directives generated by ocamlopt -g",
        "breaking change": false
      },
      {
        "references": [ 5644 ],
        "text": "Stream.count broken when used with Sapp or Slazy nodes",
        "breaking change": false
      },
      {
        "references": [ 5647 ],
        "text": "Cannot use install_printer in debugger",
        "breaking change": false
      },
      {
        "references": [ 5651 ],
        "text": "camlp4 revised syntax, printer for abstract data type",
        "breaking change": false
      },
      {
        "references": [ 5654 ],
        "text": "self pattern variable location tweak",
        "breaking change": false
      },
      {
        "references": [ 5655 ],
        "text": "ocamlbuild doesn't pass cflags when building C stubs",
        "breaking change": false
      },
      {
        "references": [ 5657 ],
        "text": "wrong error location for abbreviated record fields",
        "breaking change": false
      },
      {
        "references": [ 5659 ],
        "text": "ocamlmklib -L option breaks with MSVC",
        "breaking change": false
      },
      {
        "references": [ 5661 ],
        "text": "fixes for the test suite",
        "breaking change": false
      },
      {
        "references": [ 5668 ],
        "text": "Camlp4 produces invalid syntax for \"let _ = ...\"",
        "breaking change": false
      },
      {
        "references": [ 5671 ],
        "text": "initialization of compare_ext field in caml_final_custom_operations()",
        "breaking change": false
      },
      {
        "references": [ 5677 ],
        "text": "(genprintval.ml) do not use \"value\" as identifier",
        "breaking change": false
      },
      {
        "references": [ 5687 ],
        "text": "(bytecode) dynlink broken when used from \"output-obj\" main program",
        "breaking change": false
      },
      {
        "references": [ 0 ],
        "text": "(reported on caml-list) problem with printing of string literals in camlp4",
        "breaking change": false
      },
      {
        "references": [ 0 ],
        "text": "emacs mode: colorization of comments and strings now works correctly",
        "breaking change": false
      },
      {
        "references": [ 0 ],
        "text": "(reported on caml-list on 2011-07-26) problem with forall and method",
        "breaking change": false
      },
      {
        "references": [ 0 ],
        "text": "(reported in private) crash when using OCAMLRUNPARAM=a=X with invalid X",
        "breaking change": false
      }
    ],
    "Feature wishes": [
      {
        "references": [ 2757 ],
        "text": "new option \"-stdin\" to make ocaml read stdin as a script",
        "breaking change": false
      },
      {
        "references": [ 3358 ],
        "text": "better error message when mixing -a and .cmxa",
        "breaking change": false
      },
      {
        "references": [ 3492 ],
        "text": "documentation: remove restriction on mixed streams",
        "breaking change": false
      },
      {
        "references": [ 7971 ],
        "text": "allow configuring LIBDIR, BINDIR, and MANDIR relative to $(PREFIX) <not an author>",
        "breaking change": false
      },
      {
        "references": [ 8285 ],
        "text": "add Digest.from_hex",
        "breaking change": false
      },
      {
        "references": [ 8341 ],
        "text": "toplevel: add option to suppress continuation prompts",
        "breaking change": false
      },
      {
        "references": [ 4278 ],
        "text": "configure: option to disable \"graph\" library",
        "breaking change": false
      },
      {
        "references": [ 4444 ],
        "text": "new String.trim function, removing leading and trailing whistespace",
        "breaking change": false
      },
      {
        "references": [ 4549 ],
        "text": "make Filename.dirname/basename POSIX compliant",
        "breaking change": false
      },
      {
        "references": [ 4830 ],
        "text": "add option -v to expunge.ml",
        "breaking change": false
      },
      {
        "references": [ 4898 ],
        "text": "new Sys.big_endian boolean for machine endianness",
        "breaking change": false
      },
      {
        "references": [ 4963, 5467 ],
        "text": "no extern \"C\" into ocaml C-stub headers",
        "breaking change": false
      },
      {
        "references": [ 5199 ],
        "text": "tests are run only for bytecode if either native support is missing,\n  or a non-empty value is set to \"BYTECODE_ONLY\" Makefile variable",
        "breaking change": false
      },
      {
        "references": [ 5215 ],
        "text": "marshalling of dynlinked closure",
        "breaking change": false
      },
      {
        "references": [ 5236 ],
        "text": "new '%revapply' primitive with the semantics 'revapply x f = f x',\n    and '%apply' with semantics 'apply f x = f x'.",
        "breaking change": false
      },
      {
        "references": [ 5255 ],
        "text": "natdynlink detection on powerpc, hurd, sparc",
        "breaking change": false
      },
      {
        "references": [ 5295 ],
        "text": "OS threads: problem with caml_c_thread_unregister()",
        "breaking change": false
      },
      {
        "references": [ 5297 ],
        "text": "compiler now checks existence of builtin primitives",
        "breaking change": false
      },
      {
        "references": [ 5329 ],
        "text": "(Windows) more efficient Unix.select if all fd's are sockets",
        "breaking change": false
      },
      {
        "references": [ 5357 ],
        "text": "warning for useless open statements",
        "breaking change": false
      },
      {
        "references": [ 5358 ],
        "text": "first class modules don't allow \"with type\" declarations for types\n  in sub-modules",
        "breaking change": false
      },
      {
        "references": [ 5385 ],
        "text": "configure: emit a warning when MACOSX_DEPLOYMENT_TARGET is set",
        "breaking change": false
      },
      {
        "references": [ 5396 ],
        "text": "ocamldep: add options -sort, -all, and -one-line",
        "breaking change": false
      },
      {
        "references": [ 5397 ],
        "text": "Filename.temp_dir_name should be mutable",
        "breaking change": false
      },
      {
        "references": [ 5403 ],
        "text": "give better error message when emacs is not found in PATH",
        "breaking change": false
      },
      {
        "references": [ 5411 ],
        "text": "new directive for the toplevel: #load_rec",
        "breaking change": false
      },
      {
        "references": [ 5420 ],
        "text": "Windows, Unix.openfile share mode",
        "breaking change": false
      },
      {
        "references": [ 5421 ],
        "text": "Unix: do not leak fds in various open_proc* functions",
        "breaking change": false
      },
      {
        "references": [ 5434 ],
        "text": "implement Unix.times in win32unix <partially>",
        "breaking change": false
      },
      {
        "references": [ 5438 ],
        "text": "new warnings for unused declarations",
        "breaking change": false
      },
      {
        "references": [ 5439 ],
        "text": "upgrade config.guess and config.sub",
        "breaking change": false
      },
      {
        "references": [ 5445 ],
        "text": "and others: better printing of types with user-provided names",
        "breaking change": false
      },
      {
        "references": [ 5454 ],
        "text": "Digest.compare is missing and md5 doc update",
        "breaking change": false
      },
      {
        "references": [ 5455 ],
        "text": ".emacs instructions, add lines to recognize ocaml scripts",
        "breaking change": false
      },
      {
        "references": [ 5456 ],
        "text": "pa_macro: replace __LOCATION__ after macro expansion; add LOCATION_OF",
        "breaking change": false
      },
      {
        "references": [ 5461 ],
        "text": "bytecode: emit warning when linking two modules with the same name",
        "breaking change": false
      },
      {
        "references": [ 5478 ],
        "text": "ocamlopt assumes ar command exists",
        "breaking change": false
      },
      {
        "references": [ 5479 ],
        "text": "Num.num_of_string may raise an exception, not reflected in the\n  documentation.",
        "breaking change": false
      },
      {
        "references": [ 5501 ],
        "text": "increase IO_BUFFER_SIZE to 64KiB",
        "breaking change": false
      },
      {
        "references": [ 5532 ],
        "text": "improve error message when bytecode file is wrong",
        "breaking change": false
      },
      {
        "references": [ 5555 ],
        "text": "add function Hashtbl.reset to resize the bucket table to\n  its initial size.",
        "breaking change": false
      },
      {
        "references": [ 5586 ],
        "text": "increase UNIX_BUFFER_SIZE to 64KiB",
        "breaking change": false
      },
      {
        "references": [ 5597 ],
        "text": "register names for instrtrace primitives in embedded bytecode",
        "breaking change": false
      },
      {
        "references": [ 5599 ],
        "text": "Add warn() tag in ocamlbuild to control -w compiler switch",
        "breaking change": false
      },
      {
        "references": [ 5628 ],
        "text": "add #remove_directory and Topdirs.remove_directory to remove\n  a directory from the load path",
        "breaking change": false
      },
      {
        "references": [ 5636 ],
        "text": "in system threads library, issue with linking of pthread_atfork",
        "breaking change": false
      },
      {
        "references": [ 5666 ],
        "text": "C includes don't provide a revision number\n- ocamldebug: ability to inspect values that contain code pointers\n- ocamldebug: new 'environment' directive to set environment variables\n  for debuggee\n- configure: add -no-camlp4 option",
        "breaking change": false
      }
    ],
    "Shedding weight": [
      {
        "doc": "  https://forge.ocamlcore.org/projects/ocamltopwin/  part of this distribution.  It now lives its own life at* The \"OCamlWin\" toplevel user interface for MS Windows is no longer  https://forge.ocamlcore.org/projects/camldbm/  longer part of this distribution.  It now lives its own life at* The \"DBM\" library (interface with Unix DBM key-value stores) is no* Removed the obsolete native-code generators for Alpha, HPPA, IA64 and MIPS."
      }
    ],
    "Other changes": [
      { "doc": "- Copy VERSION file to library directory when installing." }
    ]
  }
}
